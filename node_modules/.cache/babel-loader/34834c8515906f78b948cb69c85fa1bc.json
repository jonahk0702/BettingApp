{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\SignInHome.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport NavbarIn from \"./navbar/NavbarIn\";\nimport IndividaulBet from \"./IndividaulBet/IndividaulBet\";\nimport PileIndiBet from \"./IndividaulBet/PileIndiBet\"; //TO do\n// Alot of descructeering, especcially in the mapping (search for 'map')\n// What happends when the bet descrpio is too long? Test it and make a method that displays the first like 20 charactrs when longer\n\nlet Holder = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n});\nlet PilesHold = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n});\nlet balance = 0;\n\nclass SignInHome extends Component {\n  constructor(props) {\n    super();\n\n    this.reload = num => {\n      this.props.reload(num);\n    };\n\n    this.changeRoute = name => {\n      this.props.changeRoute(name);\n    };\n\n    this.unloadUser = () => {\n      this.props.unloadUser();\n    };\n\n    this.cheap = () => {\n      this.makeItEfficieant('total');\n    };\n\n    this.goodOdds = () => {\n      this.makeItEfficieant('odds');\n    };\n\n    this.expires = () => {\n      this.makeItEfficieant('expiry');\n    };\n\n    this.popular = () => {\n      this.makeItEfficieant('popular');\n    };\n\n    this.makeItEfficieant = sortBy => {\n      this.getTotal();\n      Holder = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n      this.grabbingBets(sortBy);\n      this.setState({\n        a: sortBy\n      });\n    };\n\n    this.bought = () => {\n      if (this.state.a === 'total') {\n        this.makeItEfficieant('total');\n      }\n\n      if (this.state.a === 'popular') {\n        this.makeItEfficieant('popular');\n      }\n\n      if (this.state.a === 'expiry') {\n        this.makeItEfficieant('expiry');\n      }\n\n      if (this.state.a === 'odds') {\n        this.makeItEfficieant('odds');\n      }\n    };\n\n    this.distibutePiles = () => {\n      fetch('http://localhost:3000/disPiles', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({// id: this.props.userId\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.getTotal = () => {\n      fetch('http://localhost:3000/getBalance', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.props.userId\n        })\n      }).then(response => response.json()).then(data => {\n        balance = data;\n        this.setState({\n          b: '5'\n        });\n      });\n    };\n\n    this.grabbingBets = sorter => {\n      //I dont think I ever use display bets endpoint\n      fetch('http://localhost:3000/returnBets', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: this.props.userId\n        })\n      }).then(response => response.json()).then(data => {\n        Holder = data.map((user, i) => {\n          return React.createElement(IndividaulBet, {\n            key: i,\n            betid: data[i].betid,\n            name: data[i].description,\n            amount: data[i].total,\n            expiry: data[i].expires,\n            userId: this.props.userId,\n            price: data[i].amount,\n            email: this.props.email,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          });\n        });\n\n        if (this.state.b === '1') {\n          this.setState({\n            b: '2'\n          });\n        } else {\n          this.setState({\n            b: '1'\n          });\n        }\n      });\n      fetch('http://localhost:3000/returnPileBets', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: this.props.userId\n        })\n      }).then(response => response.json()).then(data => {\n        //    console.log(data);\n        Holder = data.map((user, i) => {\n          return React.createElement(PileIndiBet, {\n            key: i,\n            betid: data[i].betid,\n            name: data[i].description,\n            amount: data[i].total,\n            expiry: data[i].expires,\n            currentFor: data[i].currentfor,\n            currentAgainst: data[i].currentagainst,\n            userId: this.props.userId,\n            price: data[i].minimum,\n            email: this.props.email,\n            haveB: \"no\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162\n            },\n            __self: this\n          });\n        });\n\n        if (this.state.b === '1') {\n          this.setState({\n            b: '2'\n          });\n        } else {\n          this.setState({\n            b: '1'\n          });\n        }\n      });\n      this.getExpiredBets();\n    };\n\n    this.createPileEntry = data => {\n      fetch('http://localhost:3000/createEntry', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: data\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.getExpiredBets = () => {\n      fetch('http://localhost:3000/expireBets', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({})\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        console.log(data.length);\n\n        if (data.length > 0) {\n          this.createPileEntry(data);\n        } //   console.log(\"Prev is the resp\");\n\n      });\n    };\n\n    this.swapExpireds = data => {\n      fetch('http://localhost:3000/swapExpireds', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          bets: data\n        })\n      }).then(response => response.json()).then(data => {//    console.log(data);\n      });\n    };\n\n    this.state = {\n      //I know this is messy but hear me out. To reload a page we need a state change.\n      //SO if I cannt change a (because it is used for sorting as well as reloads)\n      //I will just change B\n      a: 'total',\n      b: '1'\n    };\n  }\n\n  componentDidMount() {\n    this.grabbingBets('total');\n    this.getTotal();\n    this.distibutePiles();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(NavbarIn, {\n      changeRoute: this.changeRoute,\n      unloadUser: this.unloadUser,\n      userId: this.props.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"tc white i f1 font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Explore Open Bets!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"tc f3 solidBR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }), \"Your balance is: \", balance, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"tc h6 center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Sort Bets By:\"), React.createElement(ToggleButtonGroup, {\n      className: \"center \",\n      type: \"radio\",\n      name: \"options\",\n      defaultValue: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      className: \"ma2\",\n      value: 1,\n      onClick: this.cheap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Cheapest\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      value: 2,\n      onClick: this.goodOdds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Highest odds\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      value: 3,\n      onClick: this.expires,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Expire Soonest\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      value: 4,\n      onClick: this.popular,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Most Popular\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: true,\n      className: \"f4 tc bl ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"A short descripton of bet\"), React.createElement(Col, {\n      xs: 2,\n      className: \"ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"The Odds\"), React.createElement(Col, {\n      xs: 2,\n      className: \" ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Amount (in B)\"), React.createElement(Col, {\n      xs: 2,\n      className: \"br ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"End date\")))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), Holder, PilesHold))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SignInHome;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\SignInHome.js"],"names":["React","Component","Container","Row","Col","ButtonToolbar","ToggleButton","ToggleButtonGroup","NavbarIn","IndividaulBet","PileIndiBet","Holder","PilesHold","balance","SignInHome","constructor","props","reload","num","changeRoute","name","unloadUser","cheap","makeItEfficieant","goodOdds","expires","popular","sortBy","getTotal","grabbingBets","setState","a","bought","state","distibutePiles","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","id","userId","b","sorter","map","user","i","betid","description","total","amount","email","currentfor","currentagainst","minimum","getExpiredBets","createPileEntry","length","swapExpireds","bets","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport NavbarIn from \"./navbar/NavbarIn\";\r\nimport IndividaulBet from \"./IndividaulBet/IndividaulBet\";\r\nimport PileIndiBet from \"./IndividaulBet/PileIndiBet\";\r\n\r\n //TO do\r\n\r\n // Alot of descructeering, especcially in the mapping (search for 'map')\r\n// What happends when the bet descrpio is too long? Test it and make a method that displays the first like 20 charactrs when longer\r\n \r\nlet Holder = <div></div>; \r\nlet PilesHold = <div></div>; \r\nlet balance=0;\r\n\r\n\r\nclass SignInHome extends Component {\r\n  constructor(props) {\r\n    super(); \r\n    this.state = {\r\n      //I know this is messy but hear me out. To reload a page we need a state change.\r\n      //SO if I cannt change a (because it is used for sorting as well as reloads)\r\n      //I will just change B\r\n      a:'total', \r\n      b:'1'\r\n      \r\n    };\r\n  }\r\n\r\nreload = (num) => {\r\n  this.props.reload(num);\r\n}\r\n\r\n  changeRoute = (name) => {\r\n    this.props.changeRoute(name);\r\n  }\r\n\r\n  unloadUser = () => {\r\n  this.props.unloadUser();\r\n}\r\n\r\ncheap = () => {\r\n  this.makeItEfficieant('total');  \r\n}\r\n\r\ngoodOdds = () => {\r\n  this.makeItEfficieant('odds');  \r\n}\r\n\r\nexpires = () => {\r\n  this.makeItEfficieant('expiry');  \r\n}\r\n\r\npopular = () => {\r\n  this.makeItEfficieant('popular');\r\n}\r\n\r\nmakeItEfficieant = (sortBy) => {\r\n  this.getTotal();\r\n  Holder = <div></div>; \r\n  this.grabbingBets(sortBy);\r\n    \r\n  this.setState({a:sortBy});\r\n\r\n\r\n}\r\n\r\n\r\nbought = () => {\r\n  if(this.state.a === 'total'){\r\n    this.makeItEfficieant('total');\r\n  }\r\n  if(this.state.a === 'popular'){\r\n    this.makeItEfficieant('popular');\r\n  }\r\n  if(this.state.a === 'expiry'){\r\n    this.makeItEfficieant('expiry');\r\n  }\r\n  if(this.state.a === 'odds'){\r\n    this.makeItEfficieant('odds');\r\n  }\r\n}\r\n\r\n \r\n\r\ncomponentDidMount(){  \r\n  this.grabbingBets('total');\r\n  this.getTotal();\r\n  this.distibutePiles();\r\n\r\n}\r\n\r\ndistibutePiles = () => {\r\n  fetch('http://localhost:3000/disPiles', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n     // id: this.props.userId\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    console.log(data);\r\n   });  \r\n}\r\n\r\ngetTotal = () => {\r\n  fetch('http://localhost:3000/getBalance', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      id: this.props.userId\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n     balance = data;\r\n     this.setState({b:'5'});\r\n   });\r\n\r\n}\r\n\r\n\r\ngrabbingBets = (sorter) => {\r\n\r\n  //I dont think I ever use display bets endpoint\r\n \r\n   fetch('http://localhost:3000/returnBets', {\r\n     method: 'post',\r\n     headers: {'Content-Type': 'application/json'},\r\n     body: JSON.stringify({\r\n      userId: this.props.userId \r\n     })\r\n    }) \r\n    .then(response => response.json())\r\n    .then(data => {\r\n       Holder = data.map((user, i) => { \r\n          return <IndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\r\n                  expiry={data[i].expires} userId={this.props.userId} price={data[i].amount} email={this.props.email}     />\r\n\r\n        })\r\n\r\n\r\n       if(this.state.b === '1'){\r\n        this.setState({b:'2'});\r\n       }else{\r\n        this.setState({b: '1'});\r\n       }\r\n    }); \r\n\r\n      fetch('http://localhost:3000/returnPileBets', {\r\n     method: 'post',\r\n     headers: {'Content-Type': 'application/json'},\r\n     body: JSON.stringify({ \r\n      userId: this.props.userId \r\n     })\r\n    }) \r\n    .then(response => response.json())\r\n    .then(data => {\r\n  //    console.log(data);\r\n       Holder = data.map((user, i) => { \r\n          return <PileIndiBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\r\n                  expiry={data[i].expires} currentFor={data[i].currentfor} currentAgainst={data[i].currentagainst}\r\n                  userId={this.props.userId} price={data[i].minimum} email={this.props.email} haveB='no'    />\r\n\r\n        })\r\n\r\n       if(this.state.b === '1'){\r\n        this.setState({b:'2'});\r\n       }else{\r\n        this.setState({b: '1'});\r\n       }\r\n    });\r\n\r\n\r\n    this.getExpiredBets();\r\n} \r\n\r\ncreatePileEntry = (data) => {\r\n  fetch('http://localhost:3000/createEntry', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      data:data\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    console.log(data);\r\n   \r\n  })\r\n}\r\ngetExpiredBets = () => {\r\n  fetch('http://localhost:3000/expireBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      \r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    console.log(data);\r\n    console.log(data.length);\r\n    if(data.length>0){\r\n      this.createPileEntry(data);\r\n    }\r\n //   console.log(\"Prev is the resp\");\r\n   })\r\n } \r\n\r\nswapExpireds = (data) => {\r\n  fetch('http://localhost:3000/swapExpireds', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      bets: data\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n //    console.log(data);\r\n   });\r\n\r\n}\r\n  render() {  \r\n    return (\r\n      <div>\r\n        <NavbarIn changeRoute={this.changeRoute} unloadUser={this.unloadUser} userId={this.props.userId} />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h1 className=\"tc white i f1 font\">Explore Open Bets!</h1>\r\n        <br />\r\n        <br />\r\n        <Container>\r\n          <Row>\r\n              <Col className=\"tc f3 solidBR\">\r\n              <span className=''>\r\n                <br/>    \r\n                Your balance is: {balance}\r\n                <hr/> \r\n              </span> \r\n              <ButtonToolbar className=\"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\">\r\n              <span className='tc h6 center'>Sort Bets By:</span> \r\n                <ToggleButtonGroup\r\n                  className=\"center \"\r\n                  type=\"radio\"\r\n                  name=\"options\"\r\n                  defaultValue={1}\r\n                >\r\n\r\n                  <ToggleButton className=\"ma2\" value={1} onClick={this.cheap}>\r\n                    Cheapest\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" value={2} onClick={this.goodOdds}>\r\n                    Highest odds\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" value={3} onClick={this.expires}>\r\n                    Expire Soonest\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" value={4} onClick={this.popular}>\r\n                    Most Popular\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </ButtonToolbar> \r\n\r\n            \r\n              <hr />\r\n              <br/> \r\n              <div className='tc'>\r\n                <Container>\r\n                  <Row>\r\n                    <Col md className='f4 tc bl ma1'>A short descripton of bet</Col>\r\n                    <Col xs={2} className='ma1'>The Odds</Col>\r\n                    <Col xs={2} className=' ma1'>Amount (in B)</Col>\r\n                    <Col xs={2} className='br ma1'>End date</Col>\r\n                  </Row>   \r\n                </Container>\r\n              </div>\r\n              <hr/>\r\n              \r\n              {Holder} \r\n              {PilesHold}\r\n              \r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInHome;"]},"metadata":{},"sourceType":"module"}