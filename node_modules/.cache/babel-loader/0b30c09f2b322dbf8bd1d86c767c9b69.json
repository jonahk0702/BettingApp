{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\Register\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport { CountryDropdown } from 'react-country-region-selector';\nimport \"./Register.css\"; //Okay, this is quite messy, but here I go\n//For the states, i think we'll need to save all of the users\n//inputed data in this state. I havent done it yet\n\nlet stylesHolder = 'pa2 input-reset ba bg-transparent hover-bg-black w-100';\nlet countryHolder = 'Please select a country';\nlet countryStyles = \" \";\nlet idStyles = \"\";\nlet idNumberMessage = \"\";\nlet FirstMSG = '';\nlet nameStyle = stylesHolder;\nlet DateBirthStyle = stylesHolder;\nlet emailStyles = stylesHolder;\nlet passwordStyle = stylesHolder;\nlet emailMessage = '';\nlet passwordMsg = '';\nlet currentPage = 1;\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ValidateFirst = () => {\n      let _this$state = this.state,\n          name = _this$state.name,\n          dateOfBirth = _this$state.dateOfBirth,\n          email = _this$state.email;\n\n      if (name === '') {\n        nameStyle += '  invalidbw1';\n        FirstMSG = 'Please note all fields are required';\n      }\n\n      if (dateOfBirth === '') {\n        DateBirthStyle += ' invalid bw1';\n        FirstMSG = 'Please note all fields are required';\n      }\n\n      if (name !== \"\") {\n        nameStyle = \"pa2 input-reset ba bg-transparent hover-bg-black w-100\";\n      }\n\n      if (dateOfBirth !== \"\") {\n        DateBirthStyle = \"pa2 input-reset ba bg-transparent hover-bg-black w-100\";\n      }\n\n      if (email === '') {\n        emailStyles += \" invalid bw1 \";\n      }\n\n      if (!email.includes('.') || !email.includes('@')) {\n        emailStyles += \" invalid bw1 \";\n        emailMessage = \"Please enter a valid email adress\";\n      } else {\n        emailStyles = stylesHolder;\n        emailMessage = \"\";\n      }\n\n      if (name !== \"\" && dateOfBirth !== \"\" && email.includes('.') && email.includes('@')) {\n        currentPage = 2;\n        FirstMSG = '';\n      }\n\n      this.setState({\n        num: 'a'\n      });\n    };\n\n    this.ValidateFinal = () => {\n      let success = true;\n      let _this$state2 = this.state,\n          Country = _this$state2.Country,\n          password = _this$state2.password,\n          passwordConfirm = _this$state2.passwordConfirm,\n          IdNumber = _this$state2.IdNumber,\n          name = _this$state2.name,\n          email = _this$state2.email;\n\n      if (password === '') {\n        passwordStyle += \" invalid bw1 \";\n        success = false;\n      }\n\n      if (passwordConfirm === '') {\n        passwordStyle += \" invalid bw1 \";\n        success = false;\n      }\n\n      if (IdNumber === '') {\n        idStyles = \" invalid bw1\";\n        idNumberMessage = \"Please enter a valid Idenitifaction Number\";\n        success = false;\n      } else {\n        idStyles = \"\";\n        idNumberMessage = \"\";\n      }\n\n      if (Country === '') {\n        countryStyles = \" invalid bw1 \";\n        success = false;\n      } else {\n        countryStyles = \" black \";\n      }\n\n      if (password.length < 8 || password.toUpperCase() === password || password.toLowerCase() === password || isNaN(parseFloat(password)) && isFinite(password)) {\n        passwordMsg = 'Please chose a valid password. Check below for our password guidlines.';\n        success = false;\n      } else {\n        if (password === passwordConfirm) {\n          passwordMsg = '';\n          passwordStyle = stylesHolder;\n        } else {\n          passwordMsg = 'Please make sure the passwords match';\n          success = false;\n        }\n      }\n\n      this.setState({\n        num: 'a'\n      });\n\n      if (success) {\n        fetch('http://localhost:3000/register', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password,\n            //Country: this.state.Country,\n            name: name //dateOfBirth: this.state.dateOfBirth,\n            //IdNumber: this.state.IdNumber,\n            //gender: this.state.gender\n\n          })\n        }).then(response => response.json()).then(user => {\n          if (user) {//   this.props.loadUser(user);\n            //   window.location.href = \"/Explore\";\n          }\n        });\n      }\n    };\n\n    this.radioChange = e => {\n      this.setState({\n        gender: e.currentTarget.value\n      });\n    };\n\n    this.enterEmail = newEmail => {\n      this.setState({\n        email: newEmail.target.value\n      });\n    };\n\n    this.enterPassword = newPassword => {\n      this.setState({\n        password: newPassword.target.value\n      });\n    };\n\n    this.enterName = name => {\n      this.setState({\n        name: name.target.value\n      });\n    };\n\n    this.enterSurname = secondName => {\n      this.setState({\n        secondName: secondName.target.value\n      });\n      console.log(secondName.target.value);\n    };\n\n    this.enterDateofBirth = dateBirth => {\n      this.setState({\n        dateOfBirth: dateBirth.target.value\n      });\n    };\n\n    this.enterconPassword = ConfirmPassWord => {\n      this.setState({\n        passwordConfirm: ConfirmPassWord.target.value\n      });\n    };\n\n    this.enterIDNum = idNum => {\n      this.setState({\n        IdNumber: idNum\n      });\n    };\n\n    this.enterUsername = countrys => {\n      this.setState({\n        Country: countrys.target.value\n      });\n    };\n\n    this.state = {\n      Country: '',\n      name: '',\n      dateOfBirth: '',\n      //Time.now,\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      IdNumber: '',\n      num: '',\n      gender: 'Female'\n    };\n  } //This just stores in state the country they are from\n\n\n  selectCountry(val) {\n    this.setState({\n      Country: val\n    });\n    countryHolder = val;\n  }\n\n  render() {\n    //Just making variables for each state, so i dont have to \n    //say this.state every time\n    const country = this.state.country; //Okay, so I am making an condition. If we are on first page of\n    //create account then show this part of the form\n\n    let first;\n    let final;\n\n    if (currentPage === 1) {\n      first = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Full Name\"), React.createElement(\"input\", {\n        placeholder: \"IE John Smith\",\n        type: \"name\",\n        onChange: this.enterName,\n        className: nameStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Date of Birth\"), React.createElement(\"input\", {\n        onChange: this.enterDateofBirth,\n        type: \"date\",\n        placeholder: \"YYYY/MM/DD\",\n        className: DateBirthStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Email Adress\"), React.createElement(\"input\", {\n        onChange: this.enterEmail,\n        className: emailStyles,\n        placeholder: \"Example@gmail.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), emailMessage), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mt3 tl br2 ba pa3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"Male\",\n        checked: this.state.gender === \"Male\",\n        onChange: this.radioChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), \"Male\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"Female\",\n        checked: this.state.gender === \"Female\",\n        onChange: this.radioChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), \"Female\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"Other\",\n        checked: this.state.gender === \"Other\",\n        onChange: this.radioChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }), \"Other\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"Rather\",\n        checked: this.state.gender === \"Rather\",\n        onChange: this.radioChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }), \"Rather not say\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, FirstMSG)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onClick: this.ValidateFirst,\n        className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",\n        type: \"submit\",\n        value: \"Next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }));\n      final = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      });\n    } else {\n      first = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      });\n      final = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mv3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: this.enterPassword,\n        className: passwordStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), passwordMsg), React.createElement(\"div\", {\n        className: \"mv3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: this.enterconPassword,\n        className: passwordStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"Country of Residence\"), React.createElement(CountryDropdown, {\n        defaultOptionLabel: countryHolder,\n        value: \"country\",\n        className: countryStyles,\n        onChange: val => this.selectCountry(val),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, country, \" Idenitifaction Number\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: idStyles,\n        onChange: this.enterIDNum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), idNumberMessage), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onClick: this.ValidateFinal,\n        className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",\n        type: \"submit\",\n        value: \"Create Account!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"br3 ba tl pa3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"For security purposes, your password must contain: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }), \"- An Upper case\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }), \"- A Lower Case\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }), \"- A Letter\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }), \"- A Number\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }), \"- At least seven charactors\"));\n    }\n\n    return (//Depending on page, im changing current, but whatever it is\n      //current is always displayed\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mw5 mw7-ns center br5 black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }), React.createElement(\"article\", {\n        className: \"br3 ba --black-10 w-100 w-100-m center shadow-5 solidBR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        className: \"pa4 black-80 tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        id: \"sign_up\",\n        className: \"ba b--transparent ph0 mh0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"f1 ph0 mh0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"a\", {\n        href: \"/sign-In\",\n        className: \"f6 link dim black db pointer tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, \"Already have an account?\"), first, final, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\Register\\Register.js"],"names":["React","Component","CountryDropdown","stylesHolder","countryHolder","countryStyles","idStyles","idNumberMessage","FirstMSG","nameStyle","DateBirthStyle","emailStyles","passwordStyle","emailMessage","passwordMsg","currentPage","Register","constructor","props","ValidateFirst","state","name","dateOfBirth","email","includes","setState","num","ValidateFinal","success","Country","password","passwordConfirm","IdNumber","length","toUpperCase","toLowerCase","isNaN","parseFloat","isFinite","fetch","method","headers","body","JSON","stringify","then","response","json","user","radioChange","e","gender","currentTarget","value","enterEmail","newEmail","target","enterPassword","newPassword","enterName","enterSurname","secondName","console","log","enterDateofBirth","dateBirth","enterconPassword","ConfirmPassWord","enterIDNum","idNum","enterUsername","countrys","selectCountry","val","render","country","first","final"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { CountryDropdown} from 'react-country-region-selector';\r\nimport \"./Register.css\";\r\n//Okay, this is quite messy, but here I go\r\n\r\n//For the states, i think we'll need to save all of the users\r\n//inputed data in this state. I havent done it yet\r\nlet stylesHolder = 'pa2 input-reset ba bg-transparent hover-bg-black w-100';\r\nlet countryHolder = 'Please select a country'; \r\nlet countryStyles = \" \";\r\nlet idStyles = \"\";\r\nlet idNumberMessage = \"\";\r\nlet FirstMSG = '';\r\nlet nameStyle = stylesHolder;\r\nlet DateBirthStyle =stylesHolder;\r\n\r\nlet emailStyles = stylesHolder;\r\nlet passwordStyle = stylesHolder;\r\n  \r\n let emailMessage = '';\r\n let passwordMsg ='';\r\n let currentPage = 1;\r\n\r\n  class Register extends Component {\r\n   constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        Country:'',\r\n        \r\n        name:'',\r\n        dateOfBirth: '',//Time.now,\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n\r\n        IdNumber: '',\r\n        num:'', \r\n        gender: 'Female'\r\n      }\r\n    }\r\n\r\n\r\n//This just stores in state the country they are from\r\n \r\n\r\nValidateFirst = () => {\r\n  let {name, dateOfBirth, email} = this.state;\r\n\r\n  if(name === ''){\r\n    \r\n    \r\n    nameStyle += '  invalidbw1';\r\n    FirstMSG = 'Please note all fields are required';\r\n     \r\n  }\r\n\r\n  if(dateOfBirth === ''){\r\n      DateBirthStyle += ' invalid bw1';\r\n      FirstMSG = 'Please note all fields are required';\r\n     \r\n\r\n  }\r\n  if(name !== \"\"){\r\n    nameStyle = \"pa2 input-reset ba bg-transparent hover-bg-black w-100\";\r\n  }\r\n  if(dateOfBirth !== \"\"){\r\n      DateBirthStyle =\"pa2 input-reset ba bg-transparent hover-bg-black w-100\";\r\n  }\r\n \r\n\r\n  \r\n   if(email === ''){\r\n      emailStyles += \" invalid bw1 \";\r\n    }\r\n\r\n    if(!email.includes('.') || !email.includes('@')){\r\n        emailStyles += \" invalid bw1 \";\r\n        emailMessage = \"Please enter a valid email adress\";\r\n        \r\n    }else{\r\n       emailStyles = stylesHolder;\r\n      emailMessage = \"\";\r\n    }\r\n\r\n    if(name !== \"\" && dateOfBirth !== \"\"\r\n      && email.includes('.') && email.includes('@')){\r\n        currentPage = 2;\r\n        FirstMSG = '';\r\n      }\r\n\r\n\r\n    this.setState({num: 'a'});\r\n\r\n\r\n}\r\n\r\n\r\n\r\nValidateFinal = () => {\r\n  let success = true;\r\n  let {Country, password, passwordConfirm, IdNumber, name, email} = this.state;\r\n  \r\n  if(password === ''){\r\n    passwordStyle += \" invalid bw1 \";\r\n    success = false;\r\n  }  \r\n  if(passwordConfirm === ''){\r\n    passwordStyle += \" invalid bw1 \";\r\n    success = false;\r\n  } \r\n\r\n  if(IdNumber === ''){\r\n    idStyles = \" invalid bw1\";\r\n    idNumberMessage = \"Please enter a valid Idenitifaction Number\";\r\n    success = false;\r\n  }else{\r\n    idStyles = \"\";\r\n    idNumberMessage =\"\";\r\n  }\r\n \r\n  \r\n  if(Country === ''){\r\n    countryStyles = \" invalid bw1 \";\r\n    success = false;\r\n  }else{\r\n    countryStyles = \" black \";     \r\n  }\r\n       \r\n  \r\n\r\n\r\n  if (password.length < 8 || password.toUpperCase() === password || password.toLowerCase()\r\n          === password || (isNaN(parseFloat(password)) && isFinite(password))){\r\n          passwordMsg = 'Please chose a valid password. Check below for our password guidlines.';\r\n          success = false;\r\n        }else{\r\n          if(password === passwordConfirm){\r\n            passwordMsg = '';\r\n            passwordStyle = stylesHolder;\r\n           }\r\n           else{\r\n              passwordMsg = 'Please make sure the passwords match';\r\n              success = false;\r\n           }\r\n        }\r\n         this.setState({num: 'a'});\r\n\r\n      if(success){\r\n\r\n        fetch('http://localhost:3000/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n              email:email,\r\n              password: password, \r\n              //Country: this.state.Country,\r\n              name: name,\r\n              //dateOfBirth: this.state.dateOfBirth,\r\n              //IdNumber: this.state.IdNumber,\r\n              //gender: this.state.gender\r\n          })\r\n        })\r\n   .then(response => response.json())\r\n   .then(user => {\r\n    if(user){\r\n   //   this.props.loadUser(user);\r\n   //   window.location.href = \"/Explore\";\r\n    }\r\n   })\r\n      }\r\n  }\r\n        \r\n     \r\nradioChange = (e) =>{\r\n    this.setState({\r\n      gender: e.currentTarget.value\r\n    });\r\n  }\r\n\r\nenterEmail = (newEmail) =>{\r\n      this.setState({email: newEmail.target.value});\r\n\r\n  }\r\n\r\n  enterPassword = (newPassword) =>{\r\n      this.setState({password: newPassword.target.value});\r\n  }\r\n\r\n  \r\n\r\n  enterName = (name) =>{\r\n      this.setState({name: name.target.value});\r\n      \r\n  }\r\n\r\n  enterSurname = (secondName) =>{\r\n      this.setState({secondName: secondName.target.value});\r\n      console.log(secondName.target.value);\r\n    }\r\n\r\n  enterDateofBirth = (dateBirth) =>{\r\n      this.setState({dateOfBirth: dateBirth.target.value});\r\n  }\r\n\r\n  enterconPassword = (ConfirmPassWord) =>{\r\n      this.setState({passwordConfirm: ConfirmPassWord.target.value});\r\n  }\r\n   selectCountry (val) {\r\n    \r\n    this.setState({ Country: val });\r\n    countryHolder = val;\r\n  }\r\n\r\n  enterIDNum = (idNum) =>{\r\n      this.setState({IdNumber:idNum});      \r\n  }\r\n\r\n  enterUsername = (countrys) =>{\r\n      this.setState({Country: countrys.target.value});\r\n  }\r\n\r\n  render() {\r\n    //Just making variables for each state, so i dont have to \r\n    //say this.state every time\r\n    const {country} = this.state;\r\n\r\n\r\n\r\n \r\n\r\n    //Okay, so I am making an condition. If we are on first page of\r\n    //create account then show this part of the form\r\n  \r\n   \r\n    let first;\r\n    let final;\r\n\r\n\r\n    if(currentPage === 1){\r\n      first = <div>\r\n\r\n              <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\">Full Name</label>\r\n                        <input \r\n                        placeholder=\"IE John Smith\"\r\n                        type='name'\r\n                        onChange={this.enterName}\r\n\r\n                        className={nameStyle}/>\r\n\r\n              </div>\r\n             \r\n                  \r\n                <div className=\"mt3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Date of Birth</label>\r\n                      <input\r\n                            onChange={this.enterDateofBirth}\r\n                            type=\"date\"\r\n                            placeholder='YYYY/MM/DD'\r\n                            className={DateBirthStyle}\r\n                      />\r\n              \r\n                </div>\r\n\r\n                 <div className=\"mt3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Email Adress</label>\r\n                      <input \r\n                          onChange={this.enterEmail}\r\n                           className={emailStyles} \r\n                           placeholder = \"Example@gmail.com\"\r\n                      />\r\n                      {emailMessage}\r\n                    </div>\r\n                <br/>\r\n\r\n\r\n                <div className=\"mt3 tl br2 ba pa3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Gender</label>\r\n                        <input type=\"radio\"\r\n                          value=\"Male\"\r\n                          checked={this.state.gender === \"Male\"}\r\n                          onChange={this.radioChange}\r\n                        \r\n                        />Male\r\n                  <br/>\r\n\r\n                        <input type=\"radio\"\r\n                          value=\"Female\"\r\n                          checked={this.state.gender === \"Female\"}\r\n                          onChange={this.radioChange}\r\n                          />Female\r\n\r\n                          <br/>\r\n\r\n                        <input type=\"radio\"\r\n                          value=\"Other\"\r\n                          checked={this.state.gender === \"Other\"}\r\n                          onChange={this.radioChange}\r\n                          />Other\r\n\r\n                          <br/>\r\n\r\n                        <input type=\"radio\"\r\n                          value=\"Rather\"\r\n                          checked={this.state.gender === \"Rather\"}\r\n                          onChange={this.radioChange}\r\n                          />Rather not say\r\n                  </div>\r\n\r\n                \r\n                    <h5><i>{FirstMSG}</i></h5>\r\n                    <br/>\r\n\r\n\r\n                  \r\n        \r\n\r\n                    <input\r\n                          onClick={this.ValidateFirst}\r\n                          className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                          type=\"submit\"\r\n                          value=\"Next\"\r\n                        />\r\n            </div>\r\n\r\n            final = <div></div>\r\n}else{\r\n\r\n  first= <div></div>\r\n            final = <div>\r\n              \r\n                 \r\n\r\n                    <div className=\"mv3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Password</label>\r\n                      <input type=\"password\"\r\n                        onChange={this.enterPassword}\r\n                        className={passwordStyle}/>\r\n                        {passwordMsg}\r\n                      </div>\r\n\r\n                      <div className=\"mv3\">\r\n                       <label className=\"db fw6 lh-copy f6\">Confirm Password</label>\r\n                        <input type=\"password\"\r\n                        onChange={this.enterconPassword}\r\n                          className={passwordStyle} />\r\n                      </div>\r\n                        <div className=\"mt3\">\r\n                          <label className=\"db fw6 lh-copy f6\">Country of Residence</label>\r\n                          <CountryDropdown\r\n                          defaultOptionLabel= {countryHolder}\r\n                            value={\"country\"}\r\n                            className={countryStyles}\r\n                            onChange={(val) => this.selectCountry(val)} />\r\n                      </div>\r\n\r\n                      <div className=\"mt3\">\r\n                          <label className=\"db fw6 lh-copy f6\">{country} Idenitifaction Number</label>\r\n                          <input \r\n                          type='text'\r\n                          className={idStyles}\r\n                          onChange={this.enterIDNum}\r\n                         />\r\n                         <br/>\r\n                         {idNumberMessage}\r\n                      </div>\r\n\r\n                      <div className=\"mt3\">\r\n                        <input\r\n                          onClick={this.ValidateFinal}\r\n                          className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                          type=\"submit\"\r\n                          value=\"Create Account!\"\r\n                        />\r\n                      </div>\r\n\r\n                      <br/>\r\n                      <hr/>\r\n                      <br/>\r\n                      <div className='br3 ba tl pa3'>\r\n                      For security purposes, your password must contain: <br/>\r\n                      - An Upper case<br/>\r\n                      - A Lower Case<br/>\r\n                      - A Letter<br/>\r\n                      - A Number<br/>\r\n                      - At least seven charactors\r\n\r\n                        \r\n\r\n                      </div>\r\n\r\n\r\n\r\n            </div>\r\n}\r\n    return (\r\n\r\n\r\n      //Depending on page, im changing current, but whatever it is\r\n      //current is always displayed\r\n      <div>\r\n         <div className=\"mw5 mw7-ns center br5 black\">\r\n              <br />\r\n              <br />\r\n\r\n              <article className=\"br3 ba --black-10 w-100 w-100-m center shadow-5 solidBR\">\r\n                <main className=\"pa4 black-80 tc\">\r\n                  <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 ph0 mh0\">Register</legend>\r\n                    <a\r\n                      href = \"/sign-In\"\r\n                      className=\"f6 link dim black db pointer tc\">\r\n                      Already have an account?\r\n                    </a>\r\n                    {first} \r\n                    {final}\r\n\r\n                    \r\n                      <br />\r\n                          \r\n                    </fieldset>\r\n                 </main>\r\n              </article>\r\n            </div>\r\n            <br/> <br/> <br/>\r\n  \r\n \r\n\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}