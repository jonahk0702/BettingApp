{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\MyBets.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport NavbarIn from './navbar/NavbarIn';\nimport IndividaulBet from './IndividaulBet/IndividaulBet';\nlet Holder = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n});\n\nclass MyBets extends Component {\n  constructor(props) {\n    super();\n\n    this.changeRoute = name => {\n      this.props.changeRoute(name);\n    };\n\n    this.unloadUser = () => {\n      this.props.unloadUser();\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/getMyBets', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: this.props.email\n      })\n    }).then(response => response.json()).then(data => {//THis is just used to make sure that a bet was returned\n      //console.log(data) \n    });\n    fetch('http://localhost:3000/returnBets', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sorter: sorter\n      })\n    }).then(response => response.json()).then(data => {\n      //  console.log(data);\n      Holder = data.map((user, i) => {\n        return React.createElement(IndividaulBet, {\n          key: i,\n          id: data[i].id,\n          name: data[i].description,\n          amount: data[i].total,\n          Odds: (data[i].amountfor + data[i].total) / (data[i].amountagainst + data[i].total),\n          expiry: data[i].expiry,\n          email: this.props.email,\n          bought: this.bought,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        });\n      });\n\n      if (this.state.b === '1') {\n        this.setState({\n          b: '2'\n        });\n      } else {\n        this.setState({\n          b: '1'\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(NavbarIn, {\n      changeRoute: this.changeRoute,\n      unloadUser: this.unloadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"tc white i f1 font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"My Bets!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"tc f3 solidBR bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(IndividaulBet, {\n      name: \"I bet that Ramaposa is an Alien\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(IndividaulBet, {\n      name: \"I bet the Mac Miller faked his death\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(IndividaulBet, {\n      name: \"I bet that Micheal Obama is \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyBets;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\MyBets.js"],"names":["React","Component","Container","Row","Col","ButtonToolbar","ToggleButton","ToggleButtonGroup","NavbarIn","IndividaulBet","Holder","MyBets","constructor","props","changeRoute","name","unloadUser","state","componentDidMount","fetch","method","headers","body","JSON","stringify","email","then","response","json","data","sorter","map","user","i","id","description","total","amountfor","amountagainst","expiry","bought","b","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport NavbarIn from './navbar/NavbarIn'\r\nimport IndividaulBet from './IndividaulBet/IndividaulBet';\r\n\r\nlet Holder = <div></div>;\r\n\r\n\r\nclass MyBets extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n    \r\n\r\n  };\r\n}\r\n\r\n\r\nchangeRoute = (name) =>{ \r\n  this.props.changeRoute(name); \r\n}\r\n\r\nunloadUser = () => {\r\n  this.props.unloadUser();\r\n}\r\n\r\ncomponentDidMount(){  \r\n    fetch('http://localhost:3000/getMyBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      email: this.props.email\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    //THis is just used to make sure that a bet was returned\r\n      //console.log(data) \r\n   });\r\n\r\n   fetch('http://localhost:3000/returnBets', {\r\n     method: 'post',\r\n     headers: {'Content-Type': 'application/json'},\r\n     body: JSON.stringify({\r\n      sorter:sorter\r\n     })\r\n    }) \r\n    .then(response => response.json())\r\n    .then(data => {\r\n    //  console.log(data);\r\n        \r\n       Holder = data.map((user, i) => { \r\n          return <IndividaulBet key={i} id={data[i].id} name={data[i].description} amount={data[i].total}\r\n                  Odds={(((data[i].amountfor + data[i].total)/(data[i].amountagainst + data[i].total) ))}\r\n                  expiry={data[i].expiry} email={this.props.email} bought={this.bought}       />\r\n\r\n        }) \r\n       if(this.state.b === '1'){\r\n        this.setState({b:'2'});\r\n       }else{\r\n        this.setState({b: '1'});\r\n       }\r\n    });\r\n}\r\n\r\n  render() {\r\n\r\n    return (\r\n     <div>\r\n     <NavbarIn changeRoute={this.changeRoute} unloadUser={this.unloadUser}/>\r\n     <br/><br/><br/>\r\n     <h1 className=\"tc white i f1 font\">My Bets!</h1>\r\n     <br/><br/>\r\n        <Container>\r\n  \t\t\t<Row>\r\n \t\t\t   <Col className='tc f3 solidBR bg-white'>\r\n \t\t\t   \r\n\r\n        \r\n          <hr/><br/>\r\n          <IndividaulBet name={\"I bet that Ramaposa is an Alien\"}/>\r\n           <IndividaulBet name={\"I bet the Mac Miller faked his death\"}/> \r\n           <IndividaulBet name={\"I bet that Micheal Obama is \"}/>\r\n\r\n \t\t\t   </Col>\r\n  \t\t\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n    <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyBets;  "]},"metadata":{},"sourceType":"module"}