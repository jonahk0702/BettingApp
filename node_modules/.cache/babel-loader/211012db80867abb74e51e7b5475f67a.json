{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\betting\\\\BettingApp\\\\src\\\\components\\\\CreateBet.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, Button, InputGroup, FormControl } from \"react-bootstrap\";\nimport NavbarIn from './navbar/NavbarIn';\n\nclass CreateBet extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      Choice: 1\n    };\n  }\n\n  render() {\n    let choiceOne = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"tl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \" I bet that\", React.createElement(InputGroup, {\n      className: \"mb-3 sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      \"aria-label\": \"Default\",\n      \"aria-describedby\": \"inputGroup-sizing-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })), \"Will\", React.createElement(InputGroup, {\n      className: \"mb-3 sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      \"aria-label\": \"Default\",\n      \"aria-describedby\": \"inputGroup-sizing-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }))));\n    let choiceTwo = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"b\");\n    let choiceThree = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"tl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \" I bet that\", React.createElement(InputGroup, {\n      className: \"mb-3 sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      \"aria-label\": \"Default\",\n      \"aria-describedby\": \"inputGroup-sizing-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })), \"Will Happen before\", React.createElement(InputGroup, {\n      className: \"mb-3 sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      \"aria-label\": \"Default\",\n      \"aria-describedby\": \"inputGroup-sizing-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))));\n    let current;\n\n    if (this.state.Choice === 1) {\n      current = choiceOne;\n    }\n\n    if (this.state.Choice === 2) {\n      current = choiceTwo;\n    }\n\n    if (this.state.Choice === 3) {\n      current = choiceThree;\n    }\n\n    let selected = \"outline-dark\";\n    let disSelected = \"outline-primary\";\n    let shadeOne;\n    let shadeTwo;\n    let shadeThree;\n    let holder;\n\n    if (holder != 1) {\n      shadeOne = disSelected;\n    }\n\n    if (holder !== 2) {\n      shadeTwo = disSelected;\n    }\n\n    if (holder !== 3) {\n      shadeThree = disSelected;\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(NavbarIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"tc white i f1 font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Create a bet!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"f4 solidBR bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \".\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"We Offer three main types of bets. With proper wording, almost any bet should fit.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \"Ps. If you need, there is a proper discription at the bottom.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), \"I bet That ______ will happen before [Date] will happen\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), \"I bet That ______ will ______ \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), \"I bet that ______ is really actualy ______ \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), \"I bet that ______ happened ________ \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: shadeOne,\n      onClick: () => this.setState({\n        Choice: 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"I bet that ______ will happen before ______.\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: shadeTwo,\n      onClick: () => {\n        shadeTwo = selected;\n        this.setState({\n          Choice: 2\n        });\n        console.log(holder);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"I bet that ______ will ______.\")), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: shadeThree,\n      onClick: () => this.setState({\n        Choice: 3\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"I bet that ______ will happen before ______.\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \" \", current), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Okay, heres the deal...\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), \"We only use three bet types to make the whole betting and taking bets simpler. The first type is that: I bet that ______ will happen before.\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CreateBet;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\betting\\BettingApp\\src\\components\\CreateBet.js"],"names":["React","Component","Container","Row","Col","Button","InputGroup","FormControl","NavbarIn","CreateBet","constructor","props","state","Choice","render","choiceOne","choiceTwo","choiceThree","current","selected","disSelected","shadeOne","shadeTwo","shadeThree","holder","setState","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Button, InputGroup, FormControl } from \"react-bootstrap\";\r\nimport NavbarIn from './navbar/NavbarIn'\r\n\r\nclass CreateBet extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n      Choice: 1\r\n    \r\n\r\n  };\r\n  \r\n}\r\n\r\n  render() {\r\n    let choiceOne = \r\n    <div>\r\n      <h3 className='tl'> I bet that \r\n     <InputGroup className=\"mb-3 sm\">\r\n        <FormControl aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\"/>\r\n      </InputGroup>\r\n      Will\r\n      <InputGroup className=\"mb-3 sm\">\r\n        <FormControl aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\"/>\r\n      </InputGroup>\r\n      </h3>\r\n    </div>;\r\n\r\n\r\n    let choiceTwo = \r\n    <div>\r\n      b\r\n    </div>;\r\n\r\n\r\n    let choiceThree = \r\n    <div>\r\n      <h3 className='tl'> I bet that \r\n     <InputGroup className=\"mb-3 sm\">\r\n        <FormControl aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\"/>\r\n      </InputGroup>\r\n      Will Happen before\r\n      <InputGroup className=\"mb-3 sm\">\r\n        <FormControl aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\"/>\r\n      </InputGroup>\r\n      </h3>\r\n    </div>;\r\n    \r\n    let current;\r\n    if(this.state.Choice === 1){\r\n      current = choiceOne;\r\n    }\r\n    if(this.state.Choice === 2){\r\n      current = choiceTwo;\r\n    }\r\n    if(this.state.Choice === 3){ \r\n      current = choiceThree;\r\n    }\r\n\r\n    let selected = \"outline-dark\";\r\n    let disSelected = \"outline-primary\";\r\n\r\n    let shadeOne;\r\n    let shadeTwo;\r\n    let shadeThree;\r\n   let holder;\r\n    if(holder != 1 ){\r\n      shadeOne = disSelected;  \r\n    }\r\n    if(holder !== 2 ){\r\n      shadeTwo = disSelected; \r\n    }\r\n    if(holder !== 3 ){\r\n      shadeThree = disSelected;  \r\n    }\r\n    \r\n    \r\n\r\n\r\n \r\n    return (\r\n     <div>\r\n     <NavbarIn/>\r\n     <br/><br/><br/>\r\n     <h1 className=\"tc white i f1 font\">Create a bet!</h1>\r\n     <br/><br/>\r\n        <Container>\r\n  \t\t\t<Row>\r\n \t\t\t   <Col className='f4 solidBR bg-white'>.\r\n         <br/>\r\n          <Container className='tc'>\r\n            <Row>\r\n              <Col>We Offer three main types of bets. With proper wording, almost any bet should fit.\r\n              <br/>Ps. If you need, there is a proper discription at the bottom.\r\n              <br/>\r\n\r\n              I bet That ______ will happen before [Date] will happen<br/>\r\n              I bet That ______ will ______ <br/>\r\n              I bet that ______ is really actualy ______ <br/>\r\n              I bet that ______ happened ________ <br/>\r\n              <hr/>\r\n\r\n\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n             \r\n                  <Button variant={shadeOne} onClick={() => this.setState({Choice: 1})}>\r\n                    I bet that ______ will happen before ______.\r\n                  </Button>\r\n               \r\n              </Col>\r\n              <Col>\r\n                \r\n                  <Button variant={shadeTwo} onClick={() => {\r\n                      shadeTwo = selected;\r\n                      this.setState({Choice: 2});\r\n                      console.log(holder  );\r\n                      \r\n                    }  }>\r\n                    I bet that ______ will ______.\r\n                  </Button>\r\n          \r\n              </Col>\r\n              <Col>\r\n                  <Button variant={shadeThree} onClick={() => this.setState({Choice: 3})}>\r\n                    I bet that ______ will happen before ______.\r\n                  </Button>\r\n              </Col>\r\n            </Row>\r\n            <hr/>\r\n            <h1> {current}</h1>\r\n            <br/>\r\n\r\n            <hr/>\r\n            <br/>\r\n            <Row>\r\n              <Col>Okay, heres the deal... \r\n              <br/>\r\n              We only use three bet types to make the whole betting and taking bets simpler.\r\n              The first type is that: I bet that ______ will happen before.   \r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          \r\n          <br/>\r\n          \r\n\r\n \t\t\t   </Col>\r\n  \t\t\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n    <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateBet;  "]},"metadata":{},"sourceType":"module"}