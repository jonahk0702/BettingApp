{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\MyBets.js\";\nimport React, { Component } from \"react\";\nimport { Button, Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport NavbarIn from './navbar/NavbarIn';\nimport MyIndividaulBet from './IndividaulBet/MyIndividaulBet';\nimport IndividaulBet from './IndividaulBet/IndividaulBet';\nimport ExpiredIndiBet from './IndividaulBet/ExpiredIndiBet';\nimport PileIndiBet from './IndividaulBet/PileIndiBet';\nimport ExpiredPileBet from './IndividaulBet/ExpiredPileBet'; //HolderM is for mathed. P is for Pile\n\nlet blueActive = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n});\nlet blueExpired = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n});\nlet bluePending = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n});\nlet blueVoted = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n});\nlet redActive = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n});\nlet redExpired = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n});\nlet redPending = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n});\nlet redVoted = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n});\nlet blue = true;\nlet tab = 'active';\nlet final = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n});\nlet Holder = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n});\n\nclass MyBets extends Component {\n  constructor(props) {\n    super();\n\n    this.changeRoute = name => {\n      this.props.changeRoute(name);\n    };\n\n    this.unloadUser = () => {\n      this.props.unloadUser();\n    };\n\n    this.getAllBets = () => {\n      fetch('http://localhost:3000/getMyBets', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: this.props.userId,\n          database: 'expiredmatched'\n        })\n      }).then(response => response.json()).then(data => {\n        for (var i = 0; i < data.length; i++) {\n          if (data[i].better) {\n            if (data[i].better === this.props.userId) {\n              data[i].side = \"for\";\n            } else {\n              data[i].side = \"against\";\n            }\n          }\n        }\n\n        blueExpired = data.map((user, i) => {\n          return React.createElement(ExpiredIndiBet, {\n            key: i,\n            betid: data[i].betid,\n            name: data[i].description,\n            expiry: data[i].expires,\n            creator: data[i].creator,\n            amount: data[i].amount,\n            side: data[i].side,\n            better: this.props.better,\n            userId: this.props.userId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          });\n        });\n        this.setState({\n          a: 1254\n        });\n      });\n\n      if (1 === 1) {\n        fetch('http://localhost:3000/getMyBetOffers', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: this.props.userId,\n            database: \"matchingoffers\"\n          })\n        }).then(response => response.json()).then(data => {\n          bluePending = data.map((user, i) => {\n            return React.createElement(IndividaulBet, {\n              key: i,\n              betid: data[i].betid,\n              name: data[i].description,\n              amount: data[i].amount,\n              expiry: data[i].expires,\n              creator: data[i].creator,\n              price: data[i].amount,\n              side: \"for\",\n              better: data[i].better,\n              userId: this.props.userId,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105\n              },\n              __self: this\n            });\n          });\n        });\n      }\n\n      if (true) {\n        fetch('http://localhost:3000/getMyBets', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: this.props.userId,\n            database: 'matchedbets',\n            expiredBets: 'false'\n          })\n        }).then(response => response.json()).then(data => {\n          if (data.length > 0) {\n            for (var i = 0; i < data.length; i++) {\n              if (data[i].better) {\n                if (data[i].better === this.props.userId) {\n                  data[i].side = \"for\";\n                } else {\n                  data[i].side = \"against\";\n                }\n              }\n            }\n\n            blueActive = data.map((user, i) => {\n              return React.createElement(IndividaulBet, {\n                key: i,\n                betid: data[i].betid,\n                name: data[i].description,\n                amount: data[i].total,\n                expiry: data[i].expires,\n                userId: this.props.creator,\n                price: data[i].amount,\n                email: this.props.email,\n                side: data[i].side,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 138\n                },\n                __self: this\n              });\n            });\n          }\n\n          this.setState({\n            a: 1254\n          });\n        });\n      }\n\n      if (1 === 2) {\n        fetch('http://localhost:3000/getMyBetVotes', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: this.props.userId,\n            database: \"matchingoffers\"\n          })\n        }).then(response => response.json()).then(data => {\n          blueVoted = data.map((user, i) => {\n            return React.createElement(IndividaulBet, {\n              key: i,\n              betid: data[i].betid,\n              name: data[i].description,\n              amount: data[i].amount,\n              expiry: data[i].expires,\n              creator: data[i].creator,\n              price: data[i].amount,\n              side: \"for\",\n              better: data[i].better,\n              userId: this.props.userId,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165\n              },\n              __self: this\n            });\n          });\n          this.setState({\n            a: 1254\n          });\n        });\n      }\n\n      fetch('http://localhost:3000/getPileBets', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: this.props.userId,\n          database: \"matchingoffers\",\n          setting: 'untaken'\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(\"Will desplay data\");\n        console.log(data);\n        redPending = data.map((user, i) => {\n          return React.createElement(PileIndiBet, {\n            key: i,\n            betid: data[i].betid,\n            name: data[i].description,\n            amount: data[i].amount,\n            expiry: data[i].expires,\n            creator: data[i].creator,\n            haveB: \"true\",\n            userId: this.props.userId,\n            currentFor: data[i].currentfor,\n            currentAgainst: data[i].currentagainst,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193\n            },\n            __self: this\n          });\n        });\n        this.setState({\n          a: 1254\n        });\n      });\n      fetch('http://localhost:3000/getPileBets', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: this.props.userId,\n          database: 'expiredmatched',\n          setting: 'dones'\n        })\n      }).then(response => response.json()).then(data => {\n        redExpired = data.map((user, i) => {\n          return React.createElement(ExpiredPileBet, {\n            key: i,\n            betid: data[i].betid,\n            name: data[i].description,\n            expiry: data[i].expires,\n            creator: data[i].creator,\n            amount: data[i].amount,\n            side: data[i].side,\n            better: this.props.better,\n            userId: this.props.userId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217\n            },\n            __self: this\n          });\n        });\n        this.setState({\n          a: 1254\n        });\n      });\n      fetch('http://localhost:3000/getPileBets', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: this.props.userId,\n          database: 'pilestransactions',\n          setting: 'starts'\n        })\n      }).then(response => response.json()).then(data => {\n        if (data.length > 0) {\n          for (var i = 0; i < data.length; i++) {\n            if (data[i].better) {\n              if (data[i].better === this.props.userId) {\n                data[i].side = \"for\";\n              } else {\n                data[i].side = \"against\";\n              }\n            }\n          }\n\n          redActive = data.map((user, i) => {\n            return React.createElement(PileIndiBet, {\n              key: i,\n              betid: data[i].betid,\n              name: data[i].description,\n              amount: data[i].total,\n              expiry: data[i].expires,\n              userId: this.props.creator,\n              price: data[i].amount,\n              currentFor: data[i].currentfor,\n              side: data[i].side,\n              currentAgainst: data[i].currentagainst,\n              haveB: \"nope\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 254\n              },\n              __self: this\n            });\n          });\n        }\n\n        this.setState({\n          a: 1254\n        });\n      });\n\n      if (1 === 2) {\n        fetch('http://localhost:3000/getPileVotes', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: this.props.userId,\n            database: \"matchingoffers\",\n            setting: 'untaken'\n          })\n        }).then(response => response.json()).then(data => {\n          console.log(\"Will desplay data\");\n          console.log(data);\n          redVoted = data.map((user, i) => {\n            return React.createElement(PileIndiBet, {\n              key: i,\n              betid: data[i].betid,\n              name: data[i].description,\n              amount: data[i].amount,\n              expiry: data[i].expires,\n              creator: data[i].creator,\n              haveB: \"true\",\n              userId: this.props.userId,\n              currentFor: data[i].currentfor,\n              currentAgainst: data[i].currentagainst,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 281\n              },\n              __self: this\n            });\n          });\n          this.setState({\n            a: 1254\n          });\n        });\n      }\n    };\n\n    this.expiredBets = () => {\n      console.log('runnins');\n      this.setState({\n        tab: 'expired'\n      });\n    };\n\n    this.untaken = () => {\n      this.setState({\n        tab: 'untaken'\n      });\n    };\n\n    this.activeBets = () => {\n      tab = 'active';\n      this.setState({\n        a: 12\n      });\n    };\n\n    this.voted = () => {\n      tab = 'voted';\n      this.setState({\n        a: 51254\n      }); //this is quite cool\n      //I need to find all his transations, then find all the ones where the other side is 0 \n    };\n\n    this.grabbingBetsM = () => {\n      blue = true;\n      this.setState({\n        a: 4\n      });\n    };\n\n    this.grabbingBetsP = () => {\n      blue = false;\n      this.setState({\n        a: 13\n      });\n      this.setState({\n        a: 51254\n      });\n    };\n\n    this.state = {\n      tab: \"active\"\n    };\n  }\n\n  componentDidMount() {\n    this.getAllBets();\n  }\n\n  render() {\n    if (blue) {\n      if (this.state.tab === 'active') {\n        final = blueActive;\n      }\n\n      if (this.state.tab === 'expired') {\n        final = blueExpired;\n      }\n\n      if (this.state.tab === 'voted') {\n        final = blueVoted;\n      }\n\n      if (this.state.tab === 'untaken') {\n        final = bluePending;\n      }\n    } else {\n      if (this.state.tab === 'active') {\n        final = redActive;\n      }\n\n      if (this.state.tab === 'expired') {\n        final = redExpired;\n      }\n\n      if (this.state.tab === 'voted') {\n        final = redVoted;\n      }\n\n      if (this.state.tab === 'untaken') {\n        final = redPending;\n      }\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(NavbarIn, {\n      changeRoute: this.changeRoute,\n      unloadUser: this.unloadUser,\n      userId: this.props.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"tc white i f1 font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"My Bets!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"tc f3 solidBR bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, React.createElement(ToggleButtonGroup, {\n      className: \"center \",\n      type: \"radio\",\n      name: \"options\",\n      defaultValue: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 1,\n      onClick: this.activeBets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Active Bets\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 2,\n      onClick: this.expiredBets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, \"Expired\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 3,\n      onClick: this.untaken,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }, \"Pending\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 3,\n      onClick: this.voted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Voted On\"))), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center  pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-info\",\n      className: \"center\",\n      onClick: this.grabbingBetsM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, \"One-on-One\"), ' ', React.createElement(Button, {\n      variant: \"outline-danger\",\n      className: \"center\",\n      onClick: this.grabbingBetsP,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, \"Pile-ons\"), ' '), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }), final, blueActive, blueExpired, bluePending, blueVoted, React.createElement(ExpiredIndiBet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyBets;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\MyBets.js"],"names":["React","Component","Button","Container","Row","Col","ButtonToolbar","ToggleButton","ToggleButtonGroup","NavbarIn","MyIndividaulBet","IndividaulBet","ExpiredIndiBet","PileIndiBet","ExpiredPileBet","blueActive","blueExpired","bluePending","blueVoted","redActive","redExpired","redPending","redVoted","blue","tab","final","Holder","MyBets","constructor","props","changeRoute","name","unloadUser","getAllBets","fetch","method","headers","body","JSON","stringify","userId","database","then","response","json","data","i","length","better","side","map","user","betid","description","expires","creator","amount","setState","a","expiredBets","total","email","setting","console","log","currentfor","currentagainst","untaken","activeBets","voted","grabbingBetsM","grabbingBetsP","state","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Button, Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport NavbarIn from './navbar/NavbarIn'\r\nimport MyIndividaulBet from './IndividaulBet/MyIndividaulBet';\r\nimport IndividaulBet from './IndividaulBet/IndividaulBet';\r\nimport ExpiredIndiBet from './IndividaulBet/ExpiredIndiBet';\r\nimport PileIndiBet from './IndividaulBet/PileIndiBet';\r\nimport ExpiredPileBet from './IndividaulBet/ExpiredPileBet';\r\n\r\n\r\n//HolderM is for mathed. P is for Pile\r\nlet blueActive = <div></div>;\r\nlet blueExpired = <div></div>;\r\nlet bluePending = <div></div>;\r\nlet blueVoted = <div></div>;\r\n\r\nlet redActive = <div></div>;\r\nlet redExpired = <div></div>;\r\nlet redPending = <div></div>;\r\nlet redVoted = <div></div>;\r\n\r\nlet blue = true;\r\nlet tab = 'active';\r\n\r\nlet final = <div></div>;\r\n\r\nlet Holder = <div></div>;\r\n\r\n\r\n\r\nclass MyBets extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n      tab:\"active\"\r\n    };\r\n  }\r\n\r\n\r\n  changeRoute = (name) =>{ \r\n    this.props.changeRoute(name); \r\n  }\r\n\r\n\r\n\r\n  unloadUser = () => {\r\n    this.props.unloadUser();\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getAllBets()\r\n\r\n  }\r\n\r\n  getAllBets = () => {\r\n\r\n   fetch('http://localhost:3000/getMyBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: 'expiredmatched'\r\n    })\r\n    })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    for (var i = 0; i < data.length; i++) {\r\n      if(data[i].better){\r\n        if(data[i].better === this.props.userId){\r\n          data[i].side = \"for\";\r\n        }else{\r\n          data[i].side = \"against\";\r\n        } \r\n      }\r\n    }\r\n\r\n    blueExpired = data.map((user, i) => { \r\n     return <ExpiredIndiBet key={i} betid={data[i].betid} name={data[i].description} \r\n     expiry={data[i].expires} creator={data[i].creator} amount={data[i].amount}  \r\n     side={data[i].side}  better={this.props.better}  userId={this.props.userId}/>\r\n\r\n   })\r\n\r\n    this.setState({a:1254});\r\n\r\n\r\n  });\r\n \r\n\r\n if(1 === 1){\r\n  fetch('http://localhost:3000/getMyBetOffers', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: \"matchingoffers\" \r\n    })\r\n  })\r\n  .then(response => response.json())\r\n  .then(data => {\r\n\r\n\r\n   bluePending = data.map((user, i) => { \r\n     return <IndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].amount}\r\n     expiry={data[i].expires} creator={data[i].creator} price={data[i].amount} \r\n     side='for'  better={data[i].better}  userId={this.props.userId}/>\r\n\r\n   })\r\n });\r\n}\r\n\r\nif(true){\r\n  fetch('http://localhost:3000/getMyBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: 'matchedbets',\r\n      expiredBets: 'false'\r\n    })\r\n  })\r\n  .then(response => response.json())\r\n  .then(data => {\r\n\r\n    if(data.length > 0){    \r\n      for (var i = 0; i < data.length; i++) {\r\n        if(data[i].better){\r\n          if(data[i].better === this.props.userId){\r\n            data[i].side = \"for\";\r\n          }else{\r\n            data[i].side = \"against\";\r\n          } \r\n        }\r\n      }\r\n\r\n      blueActive = data.map((user, i) => { \r\n       return <IndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\r\n       expiry={data[i].expires} userId={this.props.creator} price={data[i].amount} email={this.props.email} \r\n       side={data[i].side}    />\r\n\r\n     })\r\n    }\r\n\r\n    this.setState({a:1254});\r\n\r\n\r\n  });\r\n}\r\n\r\n  if(1 === 2){\r\n    fetch('http://localhost:3000/getMyBetVotes', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        userId: this.props.userId,\r\n        database: \"matchingoffers\" \r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n\r\n\r\n     blueVoted = data.map((user, i) => { \r\n       return <IndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].amount}\r\n       expiry={data[i].expires} creator={data[i].creator} price={data[i].amount} \r\n       side='for'  better={data[i].better}  userId={this.props.userId}/>\r\n\r\n     })\r\n\r\n     this.setState({a:1254});\r\n\r\n     \r\n   });\r\n  }\r\n\r\n\r\n  fetch('http://localhost:3000/getPileBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: \"matchingoffers\" ,\r\n      setting: 'untaken'\r\n    })\r\n  })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    console.log(\"Will desplay data\");\r\n    console.log(data) ;\r\n    \r\n    redPending = data.map((user, i) => { \r\n     return <PileIndiBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].amount}\r\n     expiry={data[i].expires} creator={data[i].creator} haveB='true' \r\n     userId={this.props.userId} currentFor={data[i].currentfor} currentAgainst={data[i].currentagainst}/>\r\n\r\n   })\r\n\r\n    this.setState({a:1254});\r\n\r\n\r\n  });\r\n\r\nfetch('http://localhost:3000/getPileBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: 'expiredmatched',\r\n      setting: 'dones'\r\n    })\r\n  })\r\n  .then(response => response.json())\r\n  .then(data => {\r\n\r\n   redExpired = data.map((user, i) => { \r\n     return <ExpiredPileBet key={i} betid={data[i].betid} name={data[i].description} \r\n     expiry={data[i].expires} creator={data[i].creator} amount={data[i].amount}  \r\n     side={data[i].side}  better={this.props.better}  userId={this.props.userId}/>\r\n\r\n   })\r\n\r\n   this.setState({a:1254});\r\n\r\n\r\n });\r\n\r\n\r\n  \r\n  fetch('http://localhost:3000/getPileBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: 'pilestransactions',\r\n      setting: 'starts'\r\n    })\r\n  })\r\n  .then(response => response.json())\r\n  .then(data => {\r\n\r\n    if(data.length > 0){    \r\n      for (var i = 0; i < data.length; i++) {\r\n        if(data[i].better){\r\n          if(data[i].better === this.props.userId){\r\n            data[i].side = \"for\";\r\n          }else{\r\n            data[i].side = \"against\";\r\n          } \r\n        }\r\n      }\r\n\r\n      redActive = data.map((user, i) => { \r\n       return <PileIndiBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\r\n       expiry={data[i].expires} userId={this.props.creator} price={data[i].amount} currentFor={data[i].currentfor}  \r\n       side={data[i].side}  currentAgainst={data[i].currentagainst} haveB='nope' />\r\n\r\n     })\r\n    }\r\n\r\n    this.setState({a:1254});\r\n\r\n\r\n  });\r\nif(1 === 2){\r\n   fetch('http://localhost:3000/getPileVotes', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: \"matchingoffers\" ,\r\n      setting: 'untaken'\r\n    })\r\n  })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    console.log(\"Will desplay data\");\r\n    console.log(data) ;\r\n    \r\n    redVoted = data.map((user, i) => { \r\n     return <PileIndiBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].amount}\r\n     expiry={data[i].expires} creator={data[i].creator} haveB='true' \r\n     userId={this.props.userId} currentFor={data[i].currentfor} currentAgainst={data[i].currentagainst}/>\r\n\r\n   })\r\n\r\n    this.setState({a:1254});\r\n\r\n\r\n  });\r\n\r\n }\r\n\r\n}\r\n\r\nexpiredBets = () => {\r\n console.log('runnins')\r\n  this.setState({tab:'expired'});\r\n}\r\n\r\nuntaken = () => {\r\n\r\n  this.setState({tab:'untaken'});\r\n}\r\n\r\nactiveBets = () =>{\r\n  tab = 'active';\r\n  this.setState({a:12});\r\n}\r\n\r\nvoted = () => {\r\n\r\n  tab = 'voted';\r\n  this.setState({a:51254});\r\n   //this is quite cool\r\n   //I need to find all his transations, then find all the ones where the other side is 0 \r\n}\r\n\r\ngrabbingBetsM = () => {\r\n  blue = true;\r\n  this.setState({a:4});\r\n}\r\n\r\ngrabbingBetsP = () => {\r\n  blue = false;\r\n  this.setState({a:13});\r\n  this.setState({a:51254});\r\n}\r\n\r\n render() {\r\n\r\n  if(blue){\r\n    if(this.state.tab === 'active'){\r\n      final = blueActive;\r\n    }\r\n    if(this.state.tab === 'expired'){\r\n      final = blueExpired;\r\n    }\r\n    if(this.state.tab === 'voted'){\r\n      final = blueVoted;\r\n    }\r\n    if(this.state.tab === 'untaken'){\r\n      final = bluePending;\r\n    }\r\n  }else{\r\n    if(this.state.tab === 'active'){\r\n      final = redActive;\r\n    }\r\n    if(this.state.tab === 'expired'){\r\n      final = redExpired;\r\n    }\r\n    if(this.state.tab === 'voted'){\r\n      final = redVoted;\r\n    }\r\n    if(this.state.tab === 'untaken'){\r\n      final = redPending;\r\n    }\r\n  }\r\n\r\n  return (\r\n   <div>\r\n   <NavbarIn changeRoute={this.changeRoute} unloadUser={this.unloadUser} userId={this.props.userId}/>\r\n   <br/><br/><br/>\r\n   <h1 className=\"tc white i f1 font\">My Bets!</h1>\r\n   <br/><br/>\r\n   <Container>\r\n   <Row>\r\n   <Col className='tc f3 solidBR bg-white'>\r\n\r\n\r\n\r\n   <hr/><br/>\r\n\r\n   <ButtonToolbar className=\"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\">\r\n\r\n   <ToggleButtonGroup\r\n   className=\"center \"\r\n   type=\"radio\"\r\n   name=\"options\"\r\n   defaultValue={1}\r\n   >\r\n\r\n   <ToggleButton className=\"ma2\" size='lg' value={1} onClick={this.activeBets}>\r\n   Active Bets\r\n   </ToggleButton>\r\n   <ToggleButton className=\"ma2\" size='lg' value={2} onClick={this.expiredBets}>\r\n   Expired\r\n   </ToggleButton>\r\n   <ToggleButton className=\"ma2\" size='lg' value={3} onClick={this.untaken}>\r\n   Pending\r\n   </ToggleButton>\r\n   <ToggleButton className=\"ma2\" size='lg' value={3} onClick={this.voted}>\r\n   Voted On\r\n   </ToggleButton>\r\n   </ToggleButtonGroup>\r\n   </ButtonToolbar> \r\n   <ButtonToolbar className=\"center mw5 mw7-ns center  pa2 ma3 ph5-ns\">\r\n\r\n\r\n   </ButtonToolbar>\r\n   <br/>\r\n   <ButtonToolbar className=\"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\">\r\n\r\n   <Button variant=\"outline-info\" className='center' onClick={this.grabbingBetsM}>One-on-One</Button>{' '}\r\n\r\n   <Button variant=\"outline-danger\" className='center' onClick={this.grabbingBetsP}>Pile-ons</Button>{' '}\r\n   </ButtonToolbar> \r\n\r\n   <br/>\r\n   <hr/>\r\n   <br/>\r\n\r\n   {final}\r\n   {blueActive}\r\n   {blueExpired}\r\n   {bluePending}   \r\n   {blueVoted}\r\n   <ExpiredIndiBet/>\r\n   </Col>\r\n\r\n   </Row>\r\n   </Container>\r\n   <br/>\r\n   </div>\r\n   );\r\n}\r\n}\r\n\r\nexport default MyBets;  "]},"metadata":{},"sourceType":"module"}