{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\IndividaulBet\\\\ExpiredIndiBet.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Container, Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./bets.css\";\nimport MyVerticallyCenteredModal from './MyVerticallyCenteredModal';\nlet side = \"\";\nlet winner = \"\";\nexport default class NavBar extends Component {\n  constructor(props) {\n    super();\n\n    this.changeRoute = route => {\n      this.props.changeRoute(route);\n    };\n\n    this.lose = () => {\n      this.choose(\"lose\");\n    };\n\n    this.win = () => {\n      this.choose('win');\n    };\n\n    this.choose = outcome => {\n      side = \"\";\n      winner = \"\";\n\n      if (this.props.userId == this.props.creator) {\n        console.log(\"I am the creator\");\n        side = \"creator\";\n\n        if (outcome == 'lose') {\n          winner = 'be';\n        } else {\n          winner = 'cr';\n        }\n      } else {\n        console.log(this.props.userId + \" my ID\");\n        console.log(this.props.creator + \" - creatorid\");\n        side = \"better\";\n\n        if (outcome == 'lose') {\n          winner = 'cr';\n        } else {\n          winner = 'be';\n        }\n      }\n\n      fetch('http://localhost:3000/chooseMatchWin', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          betid: this.props.betid,\n          userId: this.props.userId\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n\n        if (data == null) {\n          this.firstSide();\n        } else {\n          this.secondSide(data[0].betid);\n        }\n      });\n    };\n\n    this.firstSide = () => {\n      console.log(\"side: \" + this.props.side);\n      fetch('http://localhost:3000/chooseMatchWinp2', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: this.props.userId,\n          creator: this.props.creator,\n          better: this.props.better,\n          amount: this.props.amount,\n          betid: this.props.betid,\n          side: side,\n          sideWon: winner\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.secondSide = betid => {\n      console.log(\"So i Start\");\n      fetch('http://localhost:3000/chooseMatchWinTaken', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: this.props.userId,\n          creator: this.props.creator,\n          better: this.props.better,\n          amount: this.props.amount,\n          betid: this.props.betid,\n          side: side,\n          sideWon: winner\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n      this.setState({\n        b: 110\n      }); //I need to get the bet, insert the other side. The see if they match! If they do, pay out\n      // if they do not match, also pay out\n    };\n\n    this.state = {\n      id: 111111,\n      Price: 0,\n      Odds: \"\",\n      Expiry: \"\",\n      BetDiscription: \"XXX\",\n      modalShow: false\n    };\n  }\n\n  render() {\n    let modalClose = () => {\n      this.setState({\n        modalShow: false\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bl br tc\",\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: true,\n      className: \"f4 tc bt bb ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.props.name), React.createElement(Col, {\n      xs: 2,\n      className: \"bb bt ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"-\"), React.createElement(Col, {\n      xs: 2,\n      className: \"bb bt ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.props.amount), React.createElement(Col, {\n      xs: 2,\n      className: \"bb bt ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.props.expiry)), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Row, {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.lose,\n      className: \"ma1 reds tc w-20 h-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Not Me\"), \"Who Won?\", React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.win,\n      className: \"ma1 reds tc w-20 h-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Me\"))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\IndividaulBet\\ExpiredIndiBet.js"],"names":["React","Component","Col","Row","Container","Button","MyVerticallyCenteredModal","side","winner","NavBar","constructor","props","changeRoute","route","lose","choose","win","outcome","userId","creator","console","log","fetch","method","headers","body","JSON","stringify","betid","then","response","json","data","firstSide","secondSide","better","amount","sideWon","setState","b","state","id","Price","Odds","Expiry","BetDiscription","modalShow","render","modalClose","name","expiry"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Col, Row, Container, Button} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./bets.css\";\r\nimport MyVerticallyCenteredModal from './MyVerticallyCenteredModal';\r\n\r\n\r\nlet side = \"\";\r\nlet winner = \"\";\r\n\r\nexport default class NavBar extends Component{\r\nconstructor(props) {\r\n    super();\r\n    this.state = {\r\n      id: 111111, \r\n      Price: 0,\r\n      Odds: \"\",\r\n      Expiry:\"\",\r\n      BetDiscription:\"XXX\",\r\n      modalShow: false,\r\n\r\n    };\r\n  }\r\n\r\n\r\n\r\n  changeRoute = (route) => {\r\n    this.props.changeRoute(route);\r\n  }\r\n\r\n  lose = () =>{\r\n    this.choose(\"lose\");\r\n  }\r\n\r\n  win = () => {\r\n    this.choose('win');\r\n  }\r\n\r\n  choose = (outcome) =>{\r\n    \r\n    side = \"\"; \r\n    winner = \"\";\r\n    if(this.props.userId == this.props.creator){\r\n      console.log(\"I am the creator\");\r\n      side = \"creator\";\r\n      if(outcome == 'lose'){\r\n        winner = 'be';\r\n      }else{\r\n        winner = 'cr';\r\n      }\r\n    }else{\r\n      console.log(this.props.userId + \" my ID\");\r\n      console.log(this.props.creator + \" - creatorid\")\r\n      side = \"better\";\r\n      if(outcome == 'lose'){\r\n        winner = 'cr';\r\n      }else{\r\n        winner = 'be';\r\n      }\r\n    }\r\n    fetch('http://localhost:3000/chooseMatchWin', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      betid: this.props.betid,\r\n      userId: this.props.userId\r\n\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    console.log(data)\r\n    if(data == null){\r\n      this.firstSide();            \r\n    }else{\r\n      this.secondSide(data[0].betid);\r\n    }\r\n    \r\n\r\n  })\r\n }\r\n\r\nfirstSide = () =>{\r\n  console.log(\"side: \" + this.props.side)\r\n    fetch('http://localhost:3000/chooseMatchWinp2', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      creator: this.props.creator,\r\n      better: this.props.better,\r\n      amount: this.props.amount,\r\n      betid: this.props.betid,\r\n      side:side,\r\n      sideWon:winner\r\n\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    console.log(data)\r\n  \r\n    \r\n\r\n  })\r\n\r\n\r\n}\r\n\r\nsecondSide = (betid) => {\r\n  console.log(\"So i Start\");\r\n   fetch('http://localhost:3000/chooseMatchWinTaken', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      creator: this.props.creator,\r\n      better: this.props.better,\r\n      amount: this.props.amount,\r\n      betid: this.props.betid,\r\n      side:side,\r\n      sideWon:winner\r\n\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    console.log(data)\r\n\r\n  })\r\n\r\n   this.setState({b:110});\r\n\r\n\r\n\r\n  //I need to get the bet, insert the other side. The see if they match! If they do, pay out\r\n  // if they do not match, also pay out\r\n\r\n}\r\n\r\n\r\n  render(){\r\n    let modalClose = () => {\r\n      this.setState({ modalShow: false });\r\n        \r\n    }\r\n  return (\r\n    \r\n\r\n    <div >\r\n\r\n\r\n    \r\n\r\n      <div className='bl br tc' href=\"\">\r\n        <Container>\r\n          <Row>\r\n            <Col md className='f4 tc bt bb ma1'>{this.props.name}</Col>\r\n            <Col xs={2} className='bb bt ma1'>-</Col>\r\n            <Col xs={2} className='bb bt ma1'>{ this.props.amount }</Col>\r\n            \r\n            <Col xs={2} className='bb bt ma1'>{this.props.expiry}</Col>\r\n          </Row>\r\n          <hr/> \r\n          <Row className='tc'>\r\n            <Col className='xl'>\r\n            \r\n                <Button \r\n                  variant=\"primary\"\r\n                  onClick={this.lose}\r\n                  className='ma1 reds tc w-20 h-20'\r\n                >\r\n                  Not Me\r\n                </Button>\r\n                Who Won?\r\n                <Button \r\n                  variant=\"primary\"\r\n                  onClick={this.win}\r\n                  className='ma1 reds tc w-20 h-20'\r\n                >\r\n                  Me\r\n                </Button>\r\n                 \r\n              \r\n\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n      </div>\r\n      <br/>\r\n    </div>\r\n  );\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}