{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\MyBets.js\";\n//Defs need to be rewritten with change to bet stroarge\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport NavbarIn from './navbar/NavbarIn';\nimport MyIndividaulBet from './IndividaulBet/MyIndividaulBet';\nimport ExpiredIndiBet from './IndividaulBet/ExpiredIndiBet';\nlet Holder = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n});\nlet amountOfBets = 0;\nlet betAmount = []; //let amountFor = [];\n//let amountAgainst = [];\n\nlet descriptions = [];\nlet betForr = [];\nlet betIds = [];\n\nclass MyBets extends Component {\n  constructor(props) {\n    super();\n\n    this.changeRoute = name => {\n      this.props.changeRoute(name);\n    };\n\n    this.unloadUser = () => {\n      this.props.unloadUser();\n    };\n\n    this.expiredBets = () => {\n      fetch('http://localhost:3000/getMyBets', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: this.props.userId,\n          database: 'expiredmatched '\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n\n        for (var i = 0; i < data.length; i++) {\n          if (data[i].better) {\n            if (data[i].better === this.props.userId) {\n              data[i].side = \"for\";\n            } else {\n              data[i].side = \"against\";\n            }\n          }\n        }\n\n        Holder = data.map((user, i) => {\n          return React.createElement(ExpiredIndiBet, {\n            key: i,\n            betid: data[i].betid,\n            name: data[i].description,\n            expiry: data[i].expires,\n            creator: data[i].creator,\n            amount: data[i].amount,\n            side: data[i].side,\n            better: this.props.better,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          });\n        });\n        this.setState({\n          a: 1254\n        });\n      });\n    };\n\n    this.untaken = () => {\n      fetch('http://localhost:3000/getMyBetOffers', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: this.props.userId,\n          database: \"matchingoffers\"\n        })\n      }).then(response => response.json()).then(data => {\n        Holder = data.map((user, i) => {\n          return React.createElement(MyIndividaulBet, {\n            key: i,\n            betid: data[i].betid,\n            name: data[i].description,\n            amount: data[i].amount,\n            expiry: data[i].expires,\n            creator: data[i].creator,\n            price: data[i].amount,\n            side: \"for\",\n            better: data[i].better,\n            userId: this.props.userId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          });\n        });\n        this.setState({\n          a: 1254\n        });\n      });\n    };\n\n    this.activeBets = () => {\n      this.starter(\"matchedbets\");\n    };\n\n    this.starter = database => {\n      fetch('http://localhost:3000/getMyBets', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: this.props.userId,\n          database: database,\n          expiredBets: 'false'\n        })\n      }).then(response => response.json()).then(data => {\n        if (data.length > 0) {\n          for (var i = 0; i < data.length; i++) {\n            if (data[i].better) {\n              if (data[i].better === this.props.userId) {\n                data[i].side = \"for\";\n              } else {\n                data[i].side = \"against\";\n              }\n            }\n          }\n\n          Holder = data.map((user, i) => {\n            return React.createElement(MyIndividaulBet, {\n              key: i,\n              betid: data[i].betid,\n              name: data[i].description,\n              amount: data[i].total,\n              expiry: data[i].expires,\n              userId: this.props.creator,\n              price: data[i].amount,\n              email: this.props.email,\n              side: data[i].side,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139\n              },\n              __self: this\n            });\n          });\n        }\n\n        this.setState({\n          a: 1254\n        });\n      });\n    };\n\n    this.state = {\n      Re: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.starter(\"matchedbets\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(NavbarIn, {\n      changeRoute: this.changeRoute,\n      unloadUser: this.unloadUser,\n      userId: this.props.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"tc white i f1 font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"My Bets!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"tc f3 solidBR bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(ToggleButtonGroup, {\n      className: \"center \",\n      type: \"radio\",\n      name: \"options\",\n      defaultValue: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 1,\n      onClick: this.activeBets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Active Bets\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 2,\n      onClick: this.expiredBets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Expired\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 3,\n      onClick: this.untaken,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Pending\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(MyIndividaulBet, {\n      name: \"Description\",\n      side: \"Side of bet\",\n      price: \"Amount\",\n      expiry: \"Expiry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), Holder))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyBets;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\MyBets.js"],"names":["React","Component","Container","Row","Col","ButtonToolbar","ToggleButton","ToggleButtonGroup","NavbarIn","MyIndividaulBet","ExpiredIndiBet","Holder","amountOfBets","betAmount","descriptions","betForr","betIds","MyBets","constructor","props","changeRoute","name","unloadUser","expiredBets","fetch","method","headers","body","JSON","stringify","userId","database","then","response","json","data","console","log","i","length","better","side","map","user","betid","description","expires","creator","amount","setState","a","untaken","activeBets","starter","total","email","state","Re","componentDidMount","render"],"mappings":"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","sourcesContent":["//Defs need to be rewritten with change to bet stroarge\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport NavbarIn from './navbar/NavbarIn'\r\nimport MyIndividaulBet from './IndividaulBet/MyIndividaulBet';\r\nimport ExpiredIndiBet from './IndividaulBet/ExpiredIndiBet';\r\n\r\n\r\nlet Holder = <div></div>;\r\n\r\nlet amountOfBets = 0;\r\nlet betAmount = [];\r\n//let amountFor = [];\r\n//let amountAgainst = [];\r\nlet descriptions = [];\r\nlet betForr = [];\r\nlet betIds = [];\r\n\r\nclass MyBets extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n      Re:\"\"\r\n  };\r\n}\r\n\r\n\r\nchangeRoute = (name) =>{ \r\n  this.props.changeRoute(name); \r\n}\r\n\r\nunloadUser = () => {\r\n  this.props.unloadUser();\r\n}\r\n\r\ncomponentDidMount(){\r\n  this.starter(\"matchedbets\");\r\n\r\n}\r\n \r\n\r\n expiredBets = () =>{\r\n fetch('http://localhost:3000/getMyBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: 'expiredmatched '\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    console.log(data)\r\n    for (var i = 0; i < data.length; i++) {\r\n      if(data[i].better){\r\n        if(data[i].better === this.props.userId){\r\n          data[i].side = \"for\";\r\n        }else{\r\n          data[i].side = \"against\";\r\n        } \r\n      }\r\n    }\r\n\r\n     Holder = data.map((user, i) => { \r\n           return <ExpiredIndiBet key={i} betid={data[i].betid} name={data[i].description} \r\n                   expiry={data[i].expires} creator={data[i].creator} amount={data[i].amount}  \r\n                   side={data[i].side}  better={this.props.better}  />\r\n\r\n         })\r\n\r\n     this.setState({a:1254});\r\n\r\n     \r\n     });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nuntaken = () => {\r\n  fetch('http://localhost:3000/getMyBetOffers', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: \"matchingoffers\" \r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n\r\n    \r\n     Holder = data.map((user, i) => { \r\n           return <MyIndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].amount}\r\n                   expiry={data[i].expires} creator={data[i].creator} price={data[i].amount} \r\n                   side='for'  better={data[i].better}  userId={this.props.userId}/>\r\n\r\n         })\r\n\r\n     this.setState({a:1254});\r\n\r\n     \r\n     });\r\n\r\n\r\n}\r\n activeBets = () =>{\r\n  this.starter(\"matchedbets\");\r\n }\r\n\r\n starter = (database) =>{ \r\n    fetch('http://localhost:3000/getMyBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: database,\r\n      expiredBets: 'false'\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n\r\n  if(data.length > 0){    \r\n    for (var i = 0; i < data.length; i++) {\r\n      if(data[i].better){\r\n        if(data[i].better === this.props.userId){\r\n          data[i].side = \"for\";\r\n        }else{\r\n          data[i].side = \"against\";\r\n        } \r\n      }\r\n    }\r\n\r\n     Holder = data.map((user, i) => { \r\n           return <MyIndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\r\n                   expiry={data[i].expires} userId={this.props.creator} price={data[i].amount} email={this.props.email} \r\n                   side={data[i].side}    />\r\n\r\n         })\r\n     }\r\n\r\n     this.setState({a:1254});\r\n\r\n     \r\n     });\r\n\r\n}\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n     <div>\r\n     <NavbarIn changeRoute={this.changeRoute} unloadUser={this.unloadUser} userId={this.props.userId}/>\r\n     <br/><br/><br/>\r\n     <h1 className=\"tc white i f1 font\">My Bets!</h1>\r\n     <br/><br/>\r\n        <Container>\r\n  \t\t\t<Row>\r\n \t\t\t   <Col className='tc f3 solidBR bg-white'>\r\n \t\t\t   \r\n\r\n        \r\n          <hr/><br/>\r\n\r\n           <ButtonToolbar className=\"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\">\r\n              \r\n                <ToggleButtonGroup\r\n                  className=\"center \"\r\n                  type=\"radio\"\r\n                  name=\"options\"\r\n                  defaultValue={1}\r\n                >\r\n\r\n                  <ToggleButton className=\"ma2\" size='lg' value={1} onClick={this.activeBets}>\r\n                    Active Bets\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" size='lg' value={2} onClick={this.expiredBets}>\r\n                    Expired\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" size='lg' value={3} onClick={this.untaken}>\r\n                    Pending\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </ButtonToolbar> \r\n              <br/>\r\n              <hr/>\r\n              <MyIndividaulBet name=\"Description\" side=\"Side of bet\" price=\"Amount\" expiry=\"Expiry\"/>\r\n              <br/>\r\n\r\n          {Holder}\r\n \t\t\t   </Col>\r\n  \t\t\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n    <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyBets;  "]},"metadata":{},"sourceType":"module"}