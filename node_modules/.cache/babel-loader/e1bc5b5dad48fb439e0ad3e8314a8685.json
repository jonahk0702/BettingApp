{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\MyBets.js\";\nimport React, { Component } from \"react\";\nimport { Button, Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport NavbarIn from './navbar/NavbarIn';\nimport MyIndividaulBet from './IndividaulBet/MyIndividaulBet';\nimport ExpiredIndiBet from './IndividaulBet/ExpiredIndiBet';\nimport PileIndiBet from './IndividaulBet/PileIndiBet';\nimport ExpiredPileBet from './IndividaulBet/ExpiredPileBet'; //HolderM is for mathed. P is for Pile\n\nlet Holder = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n});\nlet secHolder = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n});\nlet blue = true;\nlet current = \"active\"; // let amountOfBets = 0;\n// let betAmount = [];\n// //let amountFor = [];\n// //let amountAgainst = [];\n// let descriptions = [];\n// let betForr = [];\n// let betIds = [];\n\nclass MyBets extends Component {\n  constructor(props) {\n    super();\n\n    this.changeRoute = name => {\n      this.props.changeRoute(name);\n    };\n\n    this.unloadUser = () => {\n      this.props.unloadUser();\n    };\n\n    this.grabbingBetsM = () => {\n      blue = true;\n    };\n\n    this.grabbingBetsP = () => {\n      blue = false;\n    };\n\n    this.getBets = type => {\n      if (type === \"expired\") {\n        if (blue === true) {\n          fetch('http://localhost:3000/getMyBets', {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              userId: this.props.userId,\n              database: 'expiredmatched'\n            })\n          }).then(response => response.json()).then(data => {\n            for (var i = 0; i < data.length; i++) {\n              if (data[i].better) {\n                if (data[i].better === this.props.userId) {\n                  data[i].side = \"for\";\n                } else {\n                  data[i].side = \"against\";\n                }\n              }\n            }\n\n            Holder = data.map((user, i) => {\n              return React.createElement(ExpiredIndiBet, {\n                key: i,\n                betid: data[i].betid,\n                name: data[i].description,\n                expiry: data[i].expires,\n                creator: data[i].creator,\n                amount: data[i].amount,\n                side: data[i].side,\n                better: this.props.better,\n                userId: this.props.userId,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78\n                },\n                __self: this\n              });\n            });\n          });\n        } else {\n          fetch('http://localhost:3000/getPileBets', {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              userId: this.props.userId,\n              database: 'expiredmatched',\n              setting: 'dones'\n            })\n          }).then(response => response.json()).then(data => {\n            Holder = data.map((user, i) => {\n              return React.createElement(ExpiredPileBet, {\n                key: i,\n                betid: data[i].betid,\n                name: data[i].description,\n                expiry: data[i].expires,\n                userId: this.props.userId,\n                currentFor: data[i].currentfor,\n                currentAgainst: data[i].currentagainst,\n                side: data[i].side,\n                amount: data[i].amount,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 98\n                },\n                __self: this\n              });\n            });\n          });\n        }\n\n        this.setState({\n          a: 1254\n        });\n      }\n\n      if (type === \"active\") {\n        if (blue === true) {\n          fetch('http://localhost:3000/getMyBets', {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              userId: this.props.userId,\n              database: \"matchedbets\",\n              expiredBets: 'false'\n            })\n          }).then(response => response.json()).then(data => {\n            if (data.length > 0) {\n              for (var i = 0; i < data.length; i++) {\n                if (data[i].better) {\n                  if (data[i].better === this.props.userId) {\n                    data[i].side = \"for\";\n                  } else {\n                    data[i].side = \"against\";\n                  }\n                }\n              }\n\n              Holder = data.map((user, i) => {\n                return React.createElement(MyIndividaulBet, {\n                  key: i,\n                  betid: data[i].betid,\n                  name: data[i].description,\n                  amount: data[i].total,\n                  expiry: data[i].expires,\n                  userId: this.props.creator,\n                  price: data[i].amount,\n                  email: this.props.email,\n                  side: data[i].side,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 135\n                  },\n                  __self: this\n                });\n              });\n            }\n\n            this.setState({\n              a: 1254\n            });\n          });\n        } else {\n          fetch('http://localhost:3000/getPileBets', {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              userId: this.props.userId,\n              database: 'pilestransactions',\n              setting: 'starts'\n            })\n          }).then(response => response.json()).then(data => {\n            if (data.length > 0) {\n              for (var i = 0; i < data.length; i++) {\n                if (data[i].better) {\n                  if (data[i].better === this.props.userId) {\n                    data[i].side = \"for\";\n                  } else {\n                    data[i].side = \"against\";\n                  }\n                }\n              }\n\n              Holder = data.map((user, i) => {\n                return React.createElement(PileIndiBet, {\n                  key: i,\n                  betid: data[i].betid,\n                  name: data[i].description,\n                  amount: data[i].total,\n                  expiry: data[i].expires,\n                  userId: this.props.creator,\n                  price: data[i].amount,\n                  currentFor: data[i].currentfor,\n                  side: data[i].side,\n                  currentAgainst: data[i].currentagainst,\n                  haveB: \"nope\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 172\n                  },\n                  __self: this\n                });\n              });\n            }\n          });\n        }\n\n        this.setState({\n          a: 1254\n        });\n      }\n\n      if (type === 'untaken') {\n        if (blue === true) {\n          fetch('http://localhost:3000/getMyBetOffers', {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              userId: this.props.userId,\n              database: \"matchingoffers\"\n            })\n          }).then(response => response.json()).then(data => {\n            Holder = data.map((user, i) => {\n              return React.createElement(MyIndividaulBet, {\n                key: i,\n                betid: data[i].betid,\n                name: data[i].description,\n                amount: data[i].amount,\n                expiry: data[i].expires,\n                creator: data[i].creator,\n                price: data[i].amount,\n                side: \"for\",\n                better: data[i].better,\n                userId: this.props.userId,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 198\n                },\n                __self: this\n              });\n            });\n          });\n        } else {\n          fetch('http://localhost:3000/getPileBets', {\n            method: 'post',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              userId: this.props.userId,\n              database: \"matchingoffers\",\n              setting: 'untaken'\n            })\n          }).then(response => response.json()).then(data => {\n            Holder = data.map((user, i) => {\n              return React.createElement(PileIndiBet, {\n                key: i,\n                betid: data[i].betid,\n                name: data[i].description,\n                amount: data[i].amount,\n                expiry: data[i].expires,\n                creator: data[i].creator,\n                haveB: \"true\",\n                userId: this.props.userId,\n                currentFor: data[i].currentfor,\n                currentAgainst: data[i].currentagainst,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 220\n                },\n                __self: this\n              });\n            });\n          });\n        }\n\n        this.setState({\n          a: 1254\n        });\n      }\n\n      if (type === \"voted\") {\n        if (blue === true) {} else {}\n      }\n    };\n\n    this.activeBets = () => {\n      this.starter(\"matchedbets\");\n    };\n\n    this.starterP = () => {};\n\n    this.state = {\n      Re: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.starterM(\"matchedbets\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(NavbarIn, {\n      changeRoute: this.changeRoute,\n      unloadUser: this.unloadUser,\n      userId: this.props.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"tc white i f1 font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"My Bets!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"tc f3 solidBR bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(ToggleButtonGroup, {\n      className: \"center \",\n      type: \"radio\",\n      name: \"options\",\n      defaultValue: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 1,\n      onClick: this.getBets('active'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Active Bets\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 2,\n      onClick: this.getBets('expired'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"Expired\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 3,\n      onClick: this.getBets('untaken'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Pending\"))), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center  pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-info\",\n      className: \"center\",\n      onClick: this.grabbingBetsM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"One-on-One\"), ' ', React.createElement(Button, {\n      variant: \"outline-danger\",\n      className: \"center\",\n      onClick: this.grabbingBetsP,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Pile-ons\"), ' '), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(MyIndividaulBet, {\n      name: \"Description\",\n      side: \"Side of bet\",\n      price: \"Amount\",\n      expiry: \"Expiry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }), Holder, React.createElement(ExpiredIndiBet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyBets;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\MyBets.js"],"names":["React","Component","Button","Container","Row","Col","ButtonToolbar","ToggleButton","ToggleButtonGroup","NavbarIn","MyIndividaulBet","ExpiredIndiBet","PileIndiBet","ExpiredPileBet","Holder","secHolder","blue","current","MyBets","constructor","props","changeRoute","name","unloadUser","grabbingBetsM","grabbingBetsP","getBets","type","fetch","method","headers","body","JSON","stringify","userId","database","then","response","json","data","i","length","better","side","map","user","betid","description","expires","creator","amount","setting","currentfor","currentagainst","setState","a","expiredBets","total","email","activeBets","starter","starterP","state","Re","componentDidMount","starterM","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Button, Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport NavbarIn from './navbar/NavbarIn'\r\nimport MyIndividaulBet from './IndividaulBet/MyIndividaulBet';\r\nimport ExpiredIndiBet from './IndividaulBet/ExpiredIndiBet';\r\nimport PileIndiBet from './IndividaulBet/PileIndiBet';\r\nimport ExpiredPileBet from './IndividaulBet/ExpiredPileBet';\r\n\r\n\r\n//HolderM is for mathed. P is for Pile\r\nlet Holder = <div></div>;\r\nlet secHolder = <div></div>; \r\nlet blue = true; \r\nlet current = \"active\";\r\n\r\n// let amountOfBets = 0;\r\n// let betAmount = [];\r\n// //let amountFor = [];\r\n// //let amountAgainst = [];\r\n// let descriptions = [];\r\n// let betForr = [];\r\n// let betIds = [];\r\n\r\nclass MyBets extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n      Re:\"\"\r\n  };\r\n}\r\n\r\n\r\nchangeRoute = (name) =>{ \r\n  this.props.changeRoute(name); \r\n}\r\n\r\n\r\nunloadUser = () => {\r\n  this.props.unloadUser();\r\n}\r\n\r\ngrabbingBetsM = () => {\r\n  blue = true;\r\n}\r\n\r\ngrabbingBetsP = () => {\r\n  blue =  false;\r\n}\r\n\r\ncomponentDidMount(){\r\n  this.starterM(\"matchedbets\");\r\n\r\n}\r\n\r\ngetBets = (type) => {\r\n  if(type === \"expired\"){\r\n    if(blue === true){\r\n      fetch('http://localhost:3000/getMyBets', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          userId: this.props.userId,\r\n          database: 'expiredmatched'\r\n        })\r\n      })\r\n     .then(response => response.json())\r\n     .then(data => {\r\n      for (var i = 0; i < data.length; i++) {\r\n        if(data[i].better){\r\n          if(data[i].better === this.props.userId){\r\n            data[i].side = \"for\";\r\n          }else{\r\n            data[i].side = \"against\";\r\n          } \r\n        }\r\n      }\r\n      Holder = data.map((user, i) => {     \r\n        return <ExpiredIndiBet key= {i} betid={data[i].betid} name={data[i].description} \r\n              expiry={data[i].expires} creator={data[i].creator} amount={data[i].amount}  \r\n                   side={data[i].side}  better={this.props.better}  userId={this.props.userId}/>\r\n\r\n      })\r\n    });\r\n    }else{\r\n      fetch('http://localhost:3000/getPileBets', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        userId: this.props.userId,\r\n        database: 'expiredmatched',\r\n        setting: 'dones'\r\n      })\r\n     })\r\n     .then(response => response.json())\r\n     .then(data => {\r\n\r\n       Holder = data.map((user, i) => { \r\n             return <ExpiredPileBet key={i} betid={data[i].betid} name={data[i].description} \r\n                     expiry={data[i].expires} userId ={this.props.userId}\r\n                     currentFor={data[i].currentfor} currentAgainst={data[i].currentagainst}\r\n                     side={data[i].side} amount={data[i].amount}\r\n                     />\r\n           })   \r\n     });\r\n    }\r\n     this.setState({a:1254});\r\n\r\n  }\r\n  if(type === \"active\"){\r\n    if(blue === true){\r\n      fetch('http://localhost:3000/getMyBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: \"matchedbets\",\r\n      expiredBets: 'false'\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n\r\n  if(data.length > 0){    \r\n    for (var i = 0; i < data.length; i++) {\r\n      if(data[i].better){\r\n        if(data[i].better === this.props.userId){\r\n          data[i].side = \"for\";\r\n        }else{\r\n          data[i].side = \"against\";\r\n        } \r\n      }\r\n    }\r\n\r\n     Holder = data.map((user, i) => { \r\n           return <MyIndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\r\n                   expiry={data[i].expires} userId={this.props.creator} price={data[i].amount} email={this.props.email} \r\n                   side={data[i].side}    />\r\n\r\n         })\r\n     }\r\n\r\n     this.setState({a:1254});\r\n\r\n     \r\n     });\r\n\r\n\r\n    }else{\r\n      fetch('http://localhost:3000/getPileBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: 'pilestransactions',\r\n      setting: 'starts'\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n     .then(data => {\r\n\r\n  if(data.length > 0){    \r\n    for (var i = 0; i < data.length; i++) {\r\n      if(data[i].better){\r\n        if(data[i].better === this.props.userId){\r\n          data[i].side = \"for\";\r\n        }else{\r\n          data[i].side = \"against\";\r\n        } \r\n      }\r\n    }\r\n     Holder = data.map((user, i) => { \r\n           return <PileIndiBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\r\n                   expiry={data[i].expires} userId={this.props.creator} price={data[i].amount} currentFor={data[i].currentfor}  \r\n                   side={data[i].side}  currentAgainst={data[i].currentagainst} haveB='nope' />\r\n         })\r\n     }\r\n     });\r\n    }\r\n     this.setState({a:1254});\r\n\r\n  }\r\n\r\n\r\n  if(type === 'untaken'){\r\n    if(blue === true){\r\n      fetch('http://localhost:3000/getMyBetOffers', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        userId: this.props.userId,\r\n        database: \"matchingoffers\" \r\n      })\r\n     })\r\n     .then(response => response.json())\r\n     .then(data => {\r\n      \r\n       Holder = data.map((user, i) => { \r\n             return <MyIndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].amount}\r\n                   expiry={data[i].expires} creator={data[i].creator} price={data[i].amount} \r\n                   side='for'  better={data[i].better}  userId={this.props.userId}/>\r\n\r\n         })\r\n    \r\n     });\r\n    }else{ \r\n\r\n     fetch('http://localhost:3000/getPileBets', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        userId: this.props.userId,\r\n        database: \"matchingoffers\" ,\r\n        setting: 'untaken'\r\n      })\r\n     })\r\n     .then(response => response.json())\r\n     .then(data => {\r\n\r\n       Holder = data.map((user, i) => { \r\n             return <PileIndiBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].amount}\r\n                     expiry={data[i].expires} creator={data[i].creator} haveB='true' \r\n                     userId={this.props.userId} currentFor={data[i].currentfor} currentAgainst={data[i].currentagainst}/>\r\n           })\r\n     });\r\n    }\r\n     this.setState({a:1254});\r\n  }\r\n  if(type === \"voted\"){\r\n    if(blue === true){\r\n\r\n\r\n    }else{\r\n      \r\n    }\r\n\r\n  }\r\n}\r\n\r\n activeBets = () =>{\r\n  this.starter(\"matchedbets\");\r\n }\r\n\r\n\r\nstarterP = () => {\r\n  \r\n\r\n\r\n}\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n     <div>\r\n     <NavbarIn changeRoute={this.changeRoute} unloadUser={this.unloadUser} userId={this.props.userId}/>\r\n     <br/><br/><br/>\r\n     <h1 className=\"tc white i f1 font\">My Bets!</h1>\r\n     <br/><br/>\r\n        <Container>\r\n  \t\t\t<Row>\r\n \t\t\t   <Col className='tc f3 solidBR bg-white'>\r\n \t\t\t   \r\n\r\n        \r\n          <hr/><br/>\r\n\r\n           <ButtonToolbar className=\"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\">\r\n              \r\n                <ToggleButtonGroup\r\n                  className=\"center \"\r\n                  type=\"radio\"\r\n                  name=\"options\"\r\n                  defaultValue={1}\r\n                >\r\n\r\n                  <ToggleButton className=\"ma2\" size='lg' value={1} onClick={this.getBets('active')}>\r\n                    Active Bets\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" size='lg' value={2} onClick={this.getBets('expired')}>\r\n                    Expired\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" size='lg' value={3} onClick={this.getBets('untaken')}>\r\n                    Pending\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </ButtonToolbar> \r\n              <ButtonToolbar className=\"center mw5 mw7-ns center  pa2 ma3 ph5-ns\">\r\n              \r\n                \r\n              </ButtonToolbar>\r\n                <br/>\r\n              <ButtonToolbar className=\"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\">\r\n\r\n                <Button variant=\"outline-info\" className='center' onClick={this.grabbingBetsM}>One-on-One</Button>{' '}\r\n                 \r\n                <Button variant=\"outline-danger\" className='center' onClick={this.grabbingBetsP}>Pile-ons</Button>{' '}\r\n              </ButtonToolbar> \r\n\r\n              <br/>\r\n              <hr/>\r\n              <MyIndividaulBet name=\"Description\" side=\"Side of bet\" price=\"Amount\" expiry=\"Expiry\"/>\r\n              <br/>\r\n\r\n             {Holder}\r\n          \r\n          <ExpiredIndiBet/>\r\n \t\t\t   </Col>\r\n  \t\t\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n    <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyBets;  "]},"metadata":{},"sourceType":"module"}