{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\Register\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport { CountryDropdown } from 'react-country-region-selector';\nimport \"./Register.css\"; //Okay, this is quite messy, but here I go \n//For the states, i think we'll need to save all of the users\n//inputed data in this state. I havent done it yet\n\nlet stylesHolder = 'pa2 input-reset ba bg-transparent hover-bg-black w-100';\nlet countryHolder = 'Please select a country';\nlet countryStyles = \" \";\nlet idStyles = \"\";\nlet idNumberMessage = \"\";\nlet FirstMSG = '';\nlet nameStyle = stylesHolder;\nlet DateBirthStyle = stylesHolder;\nlet emailStyles = stylesHolder;\nlet passwordStyle = stylesHolder;\nlet emailMessage = '';\nlet passwordMsg = '';\nlet currentPage = 1;\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeRoute = home => {\n      this.props.changeRoute(home);\n    };\n\n    this.loadUser = (email, id) => {\n      this.props.loadUser(email, id);\n    };\n\n    this.ValidateFirst = () => {\n      let _this$state = this.state,\n          name = _this$state.name,\n          dateOfBirth = _this$state.dateOfBirth,\n          email = _this$state.email;\n\n      if (name === '') {\n        nameStyle += '  invalidbw1';\n        FirstMSG = 'Please note all fields are required';\n      }\n\n      if (dateOfBirth === '') {\n        DateBirthStyle += ' invalid bw1';\n        FirstMSG = 'Please note all fields are required';\n      }\n\n      if (name !== \"\") {\n        nameStyle = \"pa2 input-reset ba bg-transparent hover-bg-black w-100\";\n      }\n\n      if (dateOfBirth !== \"\") {\n        DateBirthStyle = \"pa2 input-reset ba bg-transparent hover-bg-black w-100\";\n      }\n\n      if (email === '') {\n        emailStyles += \" invalid bw1 \";\n      }\n\n      if (!email.includes('.') || !email.includes('@')) {\n        emailStyles += \" invalid bw1 \";\n        emailMessage = \"Please enter a valid email adress\";\n      } else {\n        emailStyles = stylesHolder;\n        emailMessage = \"\";\n      }\n\n      if (name !== \"\" && dateOfBirth !== \"\" && email.includes('.') && email.includes('@')) {\n        currentPage = 2;\n        FirstMSG = '';\n      }\n\n      this.createId();\n      this.setState({\n        num: 'a'\n      });\n    };\n\n    this.ValidateFinal = () => {\n      let success = true;\n      let _this$state2 = this.state,\n          Country = _this$state2.Country,\n          password = _this$state2.password,\n          passwordConfirm = _this$state2.passwordConfirm,\n          IdNumber = _this$state2.IdNumber,\n          name = _this$state2.name,\n          surname = _this$state2.surname,\n          email = _this$state2.email,\n          dateOfBirth = _this$state2.dateOfBirth,\n          gender = _this$state2.gender;\n\n      if (password === '') {\n        passwordStyle += \" invalid bw1 \";\n        success = false;\n      }\n\n      if (passwordConfirm === '') {\n        passwordStyle += \" invalid bw1 \";\n        success = false;\n      }\n\n      if (IdNumber === '') {\n        idStyles = \" invalid bw1\";\n        idNumberMessage = \"Please enter a valid Idenitifaction Number\";\n        success = false;\n      } else {\n        idStyles = \"\";\n        idNumberMessage = \"\";\n      }\n\n      if (Country === '') {\n        countryStyles = \" invalid bw1 \";\n        success = false;\n      } else {\n        countryStyles = \" black \";\n      }\n\n      if (password.length < 8 || password.toUpperCase() === password || password.toLowerCase() === password || isNaN(parseFloat(password)) && isFinite(password)) {\n        passwordMsg = 'Please chose a valid password. Check below for our password guidlines.';\n        success = false;\n      } else {\n        if (password === passwordConfirm) {\n          passwordMsg = '';\n          passwordStyle = stylesHolder;\n        } else {\n          passwordMsg = 'Please make sure the passwords match';\n          success = false;\n        }\n      }\n\n      this.setState({\n        num: 'a'\n      });\n\n      if (success) {\n        this.createId(); // Here is some great code but i need to sort out the ID first\n\n        fetch('http://localhost:3000/register', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password,\n            country: Country,\n            name: name,\n            surname: surname,\n            idnumber: IdNumber,\n            gender: gender,\n            birthday: dateOfBirth,\n            id: this.state.userid\n          })\n        }).then(response => response.json()).then(user => {\n          console.log(user);\n\n          if (user === \"Success\") {\n            this.loadUser(user.email, this.state.userid);\n            this.changeRoute(\"Explore\");\n          }\n        });\n      }\n    };\n\n    this.generate = () => {\n      console.log('generated');\n      const first = Math.round(Math.random() * 64);\n      let a;\n\n      if (first < 10) {\n        a = String.fromCharCode(first + 48);\n      }\n\n      if (first > 9 && first < 38) {\n        a = String.fromCharCode(first + 53);\n      }\n\n      if (first > 37 && first < 64) {\n        a = String.fromCharCode(first + 59);\n      }\n\n      return a;\n    };\n\n    this.createId = () => {\n      let id = \"\";\n\n      for (let a = 0; a < 5; a++) {\n        id += this.generate();\n      }\n\n      console.log(id);\n      this.setState({\n        userid: id\n      });\n      fetch('http://localhost:3000/checkId', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id\n        })\n      }).then(response => response.json()).then(user => {\n        if (user != 'Good') {\n          this.redo();\n        }\n      });\n    };\n\n    this.redo = () => {\n      this.createId();\n    };\n\n    this.radioChange = e => {\n      this.createId();\n      this.setState({\n        gender: e.currentTarget.vallue\n      });\n    };\n\n    this.enterEmail = newEmail => {\n      this.setState({\n        email: newEmail.target.value\n      });\n    };\n\n    this.enterPassword = newPassword => {\n      this.setState({\n        password: newPassword.target.value\n      });\n    };\n\n    this.enterName = name => {\n      this.setState({\n        name: name.target.value\n      });\n    };\n\n    this.enterSurname = surname => {\n      this.setState({\n        surname: surname.target.value\n      });\n      console.log(surname.target.value);\n    };\n\n    this.enterDateofBirth = dateBirth => {\n      this.setState({\n        dateOfBirth: dateBirth.target.value\n      });\n      console.log(dateBirth.target.value);\n    };\n\n    this.enterconPassword = ConfirmPassWord => {\n      this.setState({\n        passwordConfirm: ConfirmPassWord.target.value\n      });\n    };\n\n    this.enterIDNum = idNum => {\n      this.setState({\n        IdNumber: idNum.target.value\n      });\n    };\n\n    this.enterUsername = countrys => {\n      this.setState({\n        Country: countrys.target.value\n      });\n    };\n\n    this.state = {\n      Country: '',\n      name: '',\n      surname: '',\n      dateOfBirth: '',\n      //Time.now,\n      email: '',\n      password: '',\n      passwordConfirm: '',\n      IdNumber: '',\n      num: '',\n      gender: 'Male',\n      userid: ''\n    };\n  } //This just stores in state the country they are from\n\n\n  selectCountry(val) {\n    this.setState({\n      Country: val\n    });\n    countryHolder = val;\n  }\n\n  render() {\n    //Just making variables for each state, so i dont have to \n    //say this.state every time\n    const country = this.state.country; //Okay, so I am making an condition. If we are on first page of\n    //create account then show this part of the form\n\n    let first;\n    let final;\n\n    if (currentPage === 1) {\n      first = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        placeholder: \"IE John\",\n        type: \"name\",\n        onChange: this.enterName,\n        className: nameStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Surname\"), React.createElement(\"input\", {\n        placeholder: \"IE Smith\",\n        type: \"surname\",\n        onChange: this.enterSurname,\n        className: nameStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Date of Birth\"), React.createElement(\"input\", {\n        onChange: this.enterDateofBirth,\n        type: \"date\",\n        placeholder: \"YYYY/MM/DD\",\n        className: DateBirthStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Email Adress\"), React.createElement(\"input\", {\n        onChange: this.enterEmail,\n        className: emailStyles,\n        placeholder: \"Example@gmail.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }), emailMessage), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"mt3 tl br2 ba pa3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"Male\",\n        checked: this.state.gender === \"Male\",\n        onChange: this.radioChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), \"Male\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"Female\",\n        checked: this.state.gender === \"Female\",\n        onChange: this.radioChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }), \"Female\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"Other\",\n        checked: this.state.gender === \"Other\",\n        onChange: this.radioChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }), \"Other\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        value: \"Rather\",\n        checked: this.state.gender === \"Rather\",\n        onChange: this.radioChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }), \"Rather not say\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, FirstMSG)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onClick: this.ValidateFirst,\n        className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",\n        type: \"submit\",\n        value: \"Next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }));\n      final = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      });\n    } else {\n      first = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      });\n      final = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mv3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: this.enterPassword,\n        className: passwordStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }), passwordMsg), React.createElement(\"div\", {\n        className: \"mv3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: this.enterconPassword,\n        className: passwordStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, \"Country of Residence\"), React.createElement(CountryDropdown, {\n        defaultOptionLabel: countryHolder,\n        value: \"country\",\n        className: countryStyles,\n        onChange: val => this.selectCountry(val),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }, country, \" Idenitifaction Number\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: idStyles,\n        onChange: this.enterIDNum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }), idNumberMessage), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onClick: this.ValidateFinal,\n        className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",\n        type: \"submit\",\n        value: \"Create Account!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"br3 ba tl pa3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, \"For security purposes, your password must contain: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }), \"- An Upper case\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }), \"- A Lower Case\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }), \"- A Letter\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }), \"- A Number\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }), \"- At least seven charactors\"));\n    }\n\n    return (//Depending on page, im changing current, but whatever it is\n      //current is always displayed\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mw5 mw7-ns center br5 black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }), React.createElement(\"article\", {\n        className: \"br3 ba --black-10 w-100 w-100-m center shadow-5 solidBR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        className: \"pa4 black-80 tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        id: \"sign_up\",\n        className: \"ba b--transparent ph0 mh0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"f1 ph0 mh0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"a\", {\n        href: \"/sign-In\",\n        className: \"f6 link dim black db pointer tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, \"Already have an account?\"), first, final, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\Register\\Register.js"],"names":["React","Component","CountryDropdown","stylesHolder","countryHolder","countryStyles","idStyles","idNumberMessage","FirstMSG","nameStyle","DateBirthStyle","emailStyles","passwordStyle","emailMessage","passwordMsg","currentPage","Register","constructor","props","changeRoute","home","loadUser","email","id","ValidateFirst","state","name","dateOfBirth","includes","createId","setState","num","ValidateFinal","success","Country","password","passwordConfirm","IdNumber","surname","gender","length","toUpperCase","toLowerCase","isNaN","parseFloat","isFinite","fetch","method","headers","body","JSON","stringify","country","idnumber","birthday","userid","then","response","json","user","console","log","generate","first","Math","round","random","a","String","fromCharCode","redo","radioChange","e","currentTarget","vallue","enterEmail","newEmail","target","value","enterPassword","newPassword","enterName","enterSurname","enterDateofBirth","dateBirth","enterconPassword","ConfirmPassWord","enterIDNum","idNum","enterUsername","countrys","selectCountry","val","render","final"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { CountryDropdown} from 'react-country-region-selector';\r\nimport \"./Register.css\";\r\n\r\n//Okay, this is quite messy, but here I go \r\n\r\n//For the states, i think we'll need to save all of the users\r\n//inputed data in this state. I havent done it yet\r\nlet stylesHolder = 'pa2 input-reset ba bg-transparent hover-bg-black w-100';\r\nlet countryHolder = 'Please select a country'; \r\nlet countryStyles = \" \";\r\nlet idStyles = \"\";\r\nlet idNumberMessage = \"\";\r\nlet FirstMSG = '';\r\nlet nameStyle = stylesHolder;\r\nlet DateBirthStyle =stylesHolder;\r\n\r\nlet emailStyles = stylesHolder;\r\nlet passwordStyle = stylesHolder;\r\n  \r\n let emailMessage = '';\r\n let passwordMsg =''; \r\n let currentPage = 1;\r\n\r\n  class Register extends Component {\r\n   constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        Country:'',\r\n        \r\n        name:'',\r\n        surname:'',\r\n        dateOfBirth: '',//Time.now,\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n\r\n        IdNumber: '',\r\n        num:'', \r\n        gender: 'Male',\r\n        userid: ''\r\n      }\r\n    }\r\n\r\n\r\n//This just stores in state the country they are from\r\n \r\n changeRoute = (home) => {\r\n  this.props.changeRoute(home);\r\n }\r\n\r\n loadUser = (email, id) =>{\r\n  this.props.loadUser(email, id);\r\n }\r\n\r\nValidateFirst = () => {\r\n  let {name, dateOfBirth, email} = this.state;\r\n\r\n  if(name === ''){\r\n    \r\n    \r\n    nameStyle += '  invalidbw1';\r\n    FirstMSG = 'Please note all fields are required';\r\n     \r\n  }\r\n\r\n  if(dateOfBirth === ''){\r\n      DateBirthStyle += ' invalid bw1';\r\n      FirstMSG = 'Please note all fields are required';\r\n     \r\n\r\n  }\r\n  if(name !== \"\"){\r\n    nameStyle = \"pa2 input-reset ba bg-transparent hover-bg-black w-100\";\r\n  }\r\n  if(dateOfBirth !== \"\"){\r\n      DateBirthStyle =\"pa2 input-reset ba bg-transparent hover-bg-black w-100\";\r\n  }\r\n \r\n\r\n  \r\n   if(email === ''){\r\n      emailStyles += \" invalid bw1 \";\r\n    }\r\n\r\n    if(!email.includes('.') || !email.includes('@')){\r\n        emailStyles += \" invalid bw1 \";\r\n        emailMessage = \"Please enter a valid email adress\";\r\n        \r\n    }else{\r\n       emailStyles = stylesHolder;\r\n      emailMessage = \"\";\r\n    }\r\n\r\n    if(name !== \"\" && dateOfBirth !== \"\"\r\n      && email.includes('.') && email.includes('@')){\r\n        currentPage = 2;\r\n        FirstMSG = '';\r\n\r\n      }\r\n    this.createId();\r\n\r\n    this.setState({num: 'a'});\r\n\r\n\r\n}\r\n\r\n\r\n\r\nValidateFinal = () => {\r\n  let success = true;\r\n  let {Country, password, passwordConfirm, IdNumber, name, surname, email, dateOfBirth, gender} = this.state;\r\n  \r\n  if(password === ''){\r\n    passwordStyle += \" invalid bw1 \";\r\n    success = false;\r\n  }  \r\n  if(passwordConfirm === ''){\r\n    passwordStyle += \" invalid bw1 \";\r\n    success = false;\r\n  } \r\n\r\n  if(IdNumber === ''){\r\n    idStyles = \" invalid bw1\";\r\n    idNumberMessage = \"Please enter a valid Idenitifaction Number\";\r\n    success = false;\r\n  }else{\r\n    idStyles = \"\";\r\n    idNumberMessage =\"\";\r\n  }\r\n \r\n  \r\n  if(Country === ''){\r\n    countryStyles = \" invalid bw1 \";\r\n    success = false;\r\n  }else{\r\n    countryStyles = \" black \";     \r\n  }\r\n       \r\n  \r\n\r\n \r\n  if (password.length < 8 || password.toUpperCase() === password || password.toLowerCase()\r\n          === password || (isNaN(parseFloat(password)) && isFinite(password))){\r\n          passwordMsg = 'Please chose a valid password. Check below for our password guidlines.';\r\n          success = false;\r\n        }else{\r\n          if(password === passwordConfirm){\r\n            passwordMsg = '';\r\n            passwordStyle = stylesHolder;\r\n           }\r\n           else{\r\n              passwordMsg = 'Please make sure the passwords match';\r\n              success = false;\r\n           }\r\n        }\r\n         this.setState({num: 'a'});\r\n\r\n      if(success){\r\n\r\n        this.createId();\r\n      // Here is some great code but i need to sort out the ID first\r\n        fetch('http://localhost:3000/register', {\r\n             method: 'post',\r\n             headers: {'Content-Type': 'application/json'},\r\n             body:JSON.stringify({\r\n               email:email,\r\n               password: password, \r\n               country: Country,\r\n               name: name,\r\n               surname: surname,\r\n               idnumber: IdNumber,\r\n               gender: gender, \r\n               birthday: dateOfBirth,\r\n               id: this.state.userid\r\n           })\r\n        })\r\n         .then(response => response.json())\r\n         .then(user => {\r\n          console.log(user);\r\n          if(user === \"Success\"){\r\n            this.loadUser(user.email, this.state.userid);\r\n            this.changeRoute(\"Explore\");\r\n          }\r\n         })\r\n       }\r\n\r\n  }\r\n\r\n// 1111111111Aa\r\n\r\n generate = () => {\r\n  console.log('generated')\r\n   const first = Math.round(Math.random() * 64);\r\n   let a;\r\n   if(first < 10){\r\n      a = String.fromCharCode(first + 48);\r\n   }\r\n   if(first > 9 && first < 38){\r\n      a = String.fromCharCode(first + 53);\r\n   }\r\n   if(first > 37 && first < 64){\r\n      a = String.fromCharCode(first + 59);\r\n   }\r\n   return a;\r\n  }\r\n\r\n  createId = () => {\r\n    let id = \"\";\r\n    for(let a = 0; a < 5; a++){\r\n      id += this.generate();\r\n    }\r\n    console.log(id);\r\n    this.setState({userid: id});\r\n\r\n     fetch('http://localhost:3000/checkId', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n              id: id\r\n          })\r\n        })\r\n         .then(response => response.json())\r\n         .then(user => {\r\n            if(user != 'Good'){\r\n                this.redo();\r\n            }\r\n         })\r\n\r\n\r\n\r\n  }\r\n        \r\n\r\n//Be careful! this is some tough code to really test!\r\nredo = () => {\r\n  this.createId();\r\n}\r\n     \r\nradioChange = (e) =>{\r\n  this.createId();\r\n\r\n    this.setState({\r\n      gender: e.currentTarget.vallue\r\n    });\r\n  }\r\n\r\nenterEmail = (newEmail) =>{\r\n      this.setState({email: newEmail.target.value});\r\n\r\n  }\r\n\r\n  enterPassword = (newPassword) =>{\r\n      this.setState({password: newPassword.target.value});\r\n  }\r\n\r\n  \r\n\r\n  enterName = (name) =>{\r\n      this.setState({name: name.target.value});\r\n      \r\n  }\r\n\r\n  enterSurname = (surname) =>{\r\n      this.setState({surname: surname.target.value});\r\n      console.log(surname.target.value);\r\n    }\r\n\r\n  enterDateofBirth = (dateBirth) =>{\r\n      this.setState({dateOfBirth: dateBirth.target.value});\r\n      console.log(dateBirth.target.value);\r\n  }\r\n\r\n  enterconPassword = (ConfirmPassWord) =>{\r\n      this.setState({passwordConfirm: ConfirmPassWord.target.value});\r\n  }\r\n   selectCountry (val) {\r\n    \r\n    this.setState({ Country: val });\r\n    countryHolder = val;\r\n  }\r\n\r\n  enterIDNum = (idNum) =>{\r\n      this.setState({IdNumber:idNum.target.value});\r\n\r\n  }\r\n\r\n  enterUsername = (countrys) =>{\r\n      this.setState({Country: countrys.target.value});\r\n  }\r\n\r\n\r\n  render() {\r\n    //Just making variables for each state, so i dont have to \r\n    //say this.state every time\r\n    const {country} = this.state;\r\n\r\n\r\n\r\n \r\n\r\n    //Okay, so I am making an condition. If we are on first page of\r\n    //create account then show this part of the form\r\n  \r\n   \r\n    let first;\r\n    let final;\r\n\r\n\r\n    if(currentPage === 1){\r\n      first = <div>\r\n\r\n              <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\">First Name</label>\r\n                        <input \r\n                        placeholder=\"IE John\"\r\n                        type='name'\r\n                        onChange={this.enterName}\r\n\r\n                        className={nameStyle}/>\r\n\r\n              </div>\r\n\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\">Surname</label>\r\n                <input\r\n                placeholder= \"IE Smith\"\r\n                type=\"surname\"\r\n                onChange={this.enterSurname}\r\n                className={nameStyle}/>\r\n              </div>\r\n\r\n                <div className=\"mt3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Date of Birth</label>\r\n                      <input\r\n                            onChange={this.enterDateofBirth}\r\n                            type=\"date\"\r\n                            placeholder='YYYY/MM/DD'\r\n                            className={DateBirthStyle}\r\n                      />\r\n              \r\n                </div>\r\n\r\n                 <div className=\"mt3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Email Adress</label>\r\n                      <input \r\n                          onChange={this.enterEmail}\r\n                           className={emailStyles} \r\n                           placeholder = \"Example@gmail.com\"\r\n                      />\r\n                      {emailMessage}\r\n                    </div>\r\n                <br/>\r\n\r\n\r\n                <div className=\"mt3 tl br2 ba pa3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Gender</label>\r\n                        <input type=\"radio\"\r\n                          value=\"Male\"\r\n                          checked={this.state.gender === \"Male\"}\r\n                          onChange={this.radioChange}\r\n                        \r\n                        />Male\r\n                  <br/>\r\n\r\n                        <input type=\"radio\"\r\n                          value=\"Female\"\r\n                          checked={this.state.gender === \"Female\"}\r\n                          onChange={this.radioChange}\r\n                          />Female\r\n\r\n                          <br/>\r\n\r\n                        <input type=\"radio\"\r\n                          value=\"Other\"\r\n                          checked={this.state.gender === \"Other\"}\r\n                          onChange={this.radioChange}\r\n                          />Other\r\n\r\n                          <br/>\r\n\r\n                        <input type=\"radio\"\r\n                          value=\"Rather\"\r\n                          checked={this.state.gender === \"Rather\"}\r\n                          onChange={this.radioChange}\r\n                          />Rather not say\r\n                  </div>\r\n\r\n                \r\n                    <h5><i>{FirstMSG}</i></h5>\r\n                    <br/>\r\n\r\n\r\n                  \r\n        \r\n\r\n                    <input\r\n                          onClick={this.ValidateFirst}\r\n                          className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                          type=\"submit\"\r\n                          value=\"Next\"\r\n                        />\r\n            </div>\r\n\r\n            final = <div></div>\r\n}else{\r\n\r\n  first= <div></div>\r\n            final = <div>\r\n              \r\n                 \r\n\r\n                    <div className=\"mv3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Password</label>\r\n                      <input type=\"password\"\r\n                        onChange={this.enterPassword}\r\n                        className={passwordStyle}/>\r\n                        {passwordMsg}\r\n                      </div>\r\n\r\n                      <div className=\"mv3\">\r\n                       <label className=\"db fw6 lh-copy f6\">Confirm Password</label>\r\n                        <input type=\"password\"\r\n                        onChange={this.enterconPassword}\r\n                          className={passwordStyle} />\r\n                      </div>\r\n                        <div className=\"mt3\">\r\n                          <label className=\"db fw6 lh-copy f6\">Country of Residence</label>\r\n                          <CountryDropdown\r\n                          defaultOptionLabel= {countryHolder}\r\n                            value={\"country\"}\r\n                            className={countryStyles}\r\n                            onChange={(val) => this.selectCountry(val)} />\r\n                      </div>\r\n\r\n                      <div className=\"mt3\">\r\n                          <label className=\"db fw6 lh-copy f6\">{country} Idenitifaction Number</label>\r\n                          <input \r\n                          type='text'\r\n                          className={idStyles}\r\n                          onChange={this.enterIDNum}\r\n                         />\r\n                         <br/>\r\n                         {idNumberMessage}\r\n                      </div>\r\n\r\n                      <div className=\"mt3\">\r\n                        <input\r\n                          onClick={this.ValidateFinal}\r\n                          className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                          type=\"submit\"\r\n                          value=\"Create Account!\"\r\n                        />\r\n                      </div>\r\n\r\n                      <br/>\r\n                      <hr/>\r\n                      <br/>\r\n                      <div className='br3 ba tl pa3'>\r\n                      For security purposes, your password must contain: <br/>\r\n                      - An Upper case<br/>\r\n                      - A Lower Case<br/>\r\n                      - A Letter<br/>\r\n                      - A Number<br/>\r\n                      - At least seven charactors\r\n\r\n                        \r\n\r\n                      </div>\r\n\r\n\r\n\r\n            </div>\r\n}\r\n    return (\r\n\r\n\r\n      //Depending on page, im changing current, but whatever it is\r\n      //current is always displayed\r\n      <div>\r\n      \r\n         <div className=\"mw5 mw7-ns center br5 black\">\r\n              <br />\r\n              <br />\r\n\r\n              <article className=\"br3 ba --black-10 w-100 w-100-m center shadow-5 solidBR\">\r\n                <main className=\"pa4 black-80 tc\">\r\n                  <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 ph0 mh0\">Register</legend>\r\n                    <a\r\n                      href = \"/sign-In\"\r\n                      className=\"f6 link dim black db pointer tc\">\r\n                      Already have an account?\r\n                    </a>\r\n                    {first} \r\n                    {final}\r\n\r\n                    \r\n                      <br />\r\n                          \r\n                    </fieldset>\r\n                 </main>\r\n              </article>\r\n            </div>\r\n            <br/> <br/> <br/>\r\n  \r\n \r\n\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}