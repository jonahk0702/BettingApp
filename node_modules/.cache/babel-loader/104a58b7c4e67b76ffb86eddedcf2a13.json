{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\IndividaulBet\\\\MyVerticallyCenteredModal.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { Modal, Button } from \"react-bootstrap\";\nlet holder;\nlet buttons; // TO do Make the messge mean something\n\nexport default class MyVerticallyCenteredModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.buyAgainst = () => {\n      let date = new Date();\n      let properDate = date.getFullYear() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate();\n      fetch('http://localhost:3000/betAgainst', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: this.props.total,\n          betid: this.props.betid,\n          userId: this.props.userid,\n          date: properDate\n        })\n      }).then(response => response.json()).then(data => {\n        this.hideme();\n      });\n    };\n\n    this.buyFor = () => {\n      let date = new Date();\n      let properDate = date.getFullYear() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate();\n      fetch('http://localhost:3000/betFor', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          amount: this.props.total,\n          betid: this.props.betid,\n          userId: this.props.userid,\n          date: properDate\n        })\n      }).then(response => response.json()).then(data => {\n        this.props.onHide();\n      });\n    };\n\n    this.hideme = () => {\n      this.props.onHide();\n    };\n\n    this.buy = () => {\n      fetch('http://localhost:3000/buyMatch', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          betid: this.props.betid,\n          email: this.props.email,\n          amount: this.props.total,\n          expiry: this.props.expiry,\n          userId: this.props.userid,\n          description: this.props.description\n        })\n      }).then(response => response.json()).then(data => {\n        this.props.onHide();\n      });\n    };\n\n    this.changeRoute = route => {\n      this.props.changeRoute(route);\n    };\n  }\n\n  componentDidMount() {\n    let bettype = this.props.bettype;\n\n    if (bettype === 'pile') {\n      holder = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Current Bets For: \", this.props.betfor, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), \"Current Bets Against: \", this.props.betagainst);\n      buttons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"ma2\",\n        onClick: this.hideme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        className: \"ma2\",\n        onClick: this.buyFor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Bet for!\"), React.createElement(Button, {\n        className: \"ma2\",\n        onClick: this.buyAgainst,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Bet Against!\"));\n    }\n\n    if (bettype === 'match') {\n      buttons = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"ma2\",\n        onClick: this.hideme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        className: \"ma2\",\n        onClick: this.buy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Bet Against!\"));\n    }\n  } //this one is for pile on later.\n\n\n  render() {\n    return React.createElement(Modal, Object.assign({}, this.props, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Modal.Body, {\n      className: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"A summary of the bet: \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Bet Description: \", this.props.description, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), \"Amount: B\", this.props.total, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), holder)), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, buttons));\n  }\n\n} //export default MyVerticallyCenteredModal;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\IndividaulBet\\MyVerticallyCenteredModal.js"],"names":["React","Modal","Button","holder","buttons","MyVerticallyCenteredModal","Component","buyAgainst","date","Date","properDate","getFullYear","getMonth","getDate","fetch","method","headers","body","JSON","stringify","amount","props","total","betid","userId","userid","then","response","json","data","hideme","buyFor","onHide","buy","email","expiry","description","changeRoute","route","componentDidMount","bettype","betfor","betagainst","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport {Modal, Button} from \"react-bootstrap\";\r\n\r\n\r\nlet holder;\r\nlet buttons; \r\n// TO do Make the messge mean something\r\nexport default class MyVerticallyCenteredModal extends React.Component {\r\n\r\n\r\ncomponentDidMount(){  \r\n  \r\n  let {bettype} = this.props;\r\n\r\n  if(bettype === 'pile'){\r\n    holder = <div>\r\n      Current Bets For: {this.props.betfor}\r\n      <br/>\r\n      Current Bets Against: {this.props.betagainst}\r\n    </div>;\r\n\r\n      buttons = <div>\r\n      <Button className='ma2' onClick={this.hideme}>Cancel</Button>\r\n      <Button className='ma2' onClick={this.buyFor}>Bet for!</Button>\r\n      <Button className='ma2' onClick={this.buyAgainst}>Bet Against!</Button>\r\n\r\n      </div>;  \r\n    }\r\n\r\n  if(bettype === 'match'){\r\n    buttons = <div>\r\n      <Button className='ma2' onClick={this.hideme}>Cancel</Button>\r\n      <Button className='ma2' onClick={this.buy}>Bet Against!</Button>  \r\n    </div>;\r\n\r\n  }\r\n\r\n  \r\n    \r\n}\r\n\r\n\r\n//this one is for pile on later.\r\n buyAgainst = () =>{\r\n    let date = new Date();\r\n    let properDate = date.getFullYear() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate();\r\n    \r\n    fetch('http://localhost:3000/betAgainst', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      amount: this.props.total,\r\n      betid: this.props.betid,\r\n      userId: this.props.userid,\r\n      date: properDate, \r\n\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n\r\n     this.hideme();\r\n    \r\n   });\r\n  }\r\n\r\nbuyFor = () =>{\r\n    let date = new Date();\r\n    let properDate = date.getFullYear() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getDate();\r\n    \r\n    fetch('http://localhost:3000/betFor', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      amount: this.props.total,\r\n      betid: this.props.betid,\r\n      userId: this.props.userid,\r\n      date: properDate,\r\n\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n\r\n     this.props.onHide();\r\n    \r\n   });\r\n  }  \r\nhideme = () => {\r\n     this.props.onHide();\r\n\r\n}\r\n  buy = () =>{\r\n\r\n    fetch('http://localhost:3000/buyMatch', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      betid: this.props.betid,\r\n      email: this.props.email,\r\n      amount: this.props.total,\r\n      expiry: this.props.expiry,\r\n      userId: this.props.userid,\r\n      description: this.props.description,\r\n\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    \r\n   this.props.onHide();\r\n    \r\n   });\r\n    }\r\n\r\n    changeRoute =(route) => {\r\n      this.props.changeRoute(route); \r\n    }\r\n    \r\n  render() {\r\n\r\n\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          \r\n        </Modal.Header>\r\n        <Modal.Body className='total'>\r\n          <h4 className='tc'>A summary of the bet: </h4>\r\n          <div>\r\n          Bet Description: {this.props.description}\r\n          <br/>\r\n          Amount: B{this.props.total} \r\n          <br/>\r\n          {holder}\r\n          \r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer> \r\n        {buttons}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\n//export default MyVerticallyCenteredModal;"]},"metadata":{},"sourceType":"module"}