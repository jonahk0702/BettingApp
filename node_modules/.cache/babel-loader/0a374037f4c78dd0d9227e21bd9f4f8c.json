{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\SignInHome.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport NavbarIn from \"./navbar/NavbarIn\";\nimport IndividaulBet from \"./IndividaulBet/IndividaulBet\"; //TO do\n// Alot of descructeering, especcially in the mapping (search for 'map')\n// What happends when the bet descrpio is too long? Test it and make a method that displays the first like 20 charactrs when longer\n\nlet Holder = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n});\nlet balance = 0;\n\nclass SignInHome extends Component {\n  constructor(props) {\n    super();\n\n    this.reload = num => {\n      this.props.reload(num);\n    };\n\n    this.changeRoute = name => {\n      this.props.changeRoute(name);\n    };\n\n    this.unloadUser = () => {\n      this.props.unloadUser();\n    };\n\n    this.cheap = () => {\n      this.makeItEfficieant('total');\n    };\n\n    this.goodOdds = () => {\n      this.makeItEfficieant('odds');\n    };\n\n    this.expires = () => {\n      this.makeItEfficieant('expiry');\n    };\n\n    this.popular = () => {\n      this.makeItEfficieant('popular');\n    };\n\n    this.makeItEfficieant = sortBy => {\n      this.getTotal();\n      Holder = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n      this.grabbingBets(sortBy);\n      this.setState({\n        a: sortBy\n      });\n    };\n\n    this.bought = () => {\n      if (this.state.a === 'total') {\n        this.makeItEfficieant('total');\n      }\n\n      if (this.state.a === 'popular') {\n        this.makeItEfficieant('popular');\n      }\n\n      if (this.state.a === 'expiry') {\n        this.makeItEfficieant('expiry');\n      }\n\n      if (this.state.a === 'odds') {\n        this.makeItEfficieant('odds');\n      }\n    };\n\n    this.getTotal = () => {\n      fetch('http://localhost:3000/getBalance', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: this.props.userId\n        })\n      }).then(response => response.json()).then(data => {\n        balance = data;\n        this.setState({\n          b: '5'\n        });\n      });\n    };\n\n    this.grabbingBets = sorter => {\n      //I dont think I ever use display bets endpoint\n      fetch('http://localhost:3000/returnBets', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({})\n      }).then(response => response.json()).then(data => {\n        Holder = data.map((user, i) => {\n          return React.createElement(IndividaulBet, {\n            key: i,\n            betid: data[i].betid,\n            name: data[i].description,\n            amount: data[i].total,\n            expiry: data[i].expires,\n            userId: this.props.creator,\n            price: data[i].amount,\n            email: this.props.email,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          });\n        }); //This is used for the pile ones\n        // return <IndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\n        //           Odds={(((data[i].amountfor + data[i].total)/(data[i].amountagainst + data[i].total) ))}\n        //           expiry={data[i].expiry} email={this.props.email} bought={this.bought} userId={this.props.userId}      />\n        // })\n\n        if (this.state.b === '1') {\n          this.setState({\n            b: '2'\n          });\n        } else {\n          this.setState({\n            b: '1'\n          });\n        }\n      });\n      this.getExpiredBets();\n    };\n\n    this.getExpiredBets = () => {\n      fetch('http://localhost:3000/expireBets', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({})\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.swapExpireds = data => {\n      fetch('http://localhost:3000/swapExpireds', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          bets: data\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      });\n    };\n\n    this.state = {\n      //I know this is messy but hear me out. To reload a page we need a state change.\n      //SO if I cannt change a (because it is used for sorting as well as reloads)\n      //I will just change B\n      a: 'total',\n      b: '1'\n    };\n  }\n\n  componentDidMount() {\n    this.grabbingBets('total');\n    this.getTotal();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(NavbarIn, {\n      changeRoute: this.changeRoute,\n      unloadUser: this.unloadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"tc white i f1 font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Explore Open Bets!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"tc f3 solidBR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), \"Your balance is: \", balance, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"tc h6 center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Sort Bets By:\"), React.createElement(ToggleButtonGroup, {\n      className: \"center \",\n      type: \"radio\",\n      name: \"options\",\n      defaultValue: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      className: \"ma2\",\n      value: 1,\n      onClick: this.cheap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Cheapest\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      value: 2,\n      onClick: this.goodOdds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Highest odds\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      value: 3,\n      onClick: this.expires,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Expire Soonest\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      value: 4,\n      onClick: this.popular,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Most Popular\"))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: true,\n      className: \"f4 tc bl ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"A short descripton of bet\"), React.createElement(Col, {\n      xs: 2,\n      className: \"ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"The Odds\"), React.createElement(Col, {\n      xs: 2,\n      className: \" ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Amount (in B)\"), React.createElement(Col, {\n      xs: 2,\n      className: \"br ma1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"End date\")))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), Holder))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SignInHome;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\SignInHome.js"],"names":["React","Component","Container","Row","Col","ButtonToolbar","ToggleButton","ToggleButtonGroup","NavbarIn","IndividaulBet","Holder","balance","SignInHome","constructor","props","reload","num","changeRoute","name","unloadUser","cheap","makeItEfficieant","goodOdds","expires","popular","sortBy","getTotal","grabbingBets","setState","a","bought","state","fetch","method","headers","body","JSON","stringify","id","userId","then","response","json","data","b","sorter","map","user","i","betid","description","total","creator","amount","email","getExpiredBets","console","log","swapExpireds","bets","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport NavbarIn from \"./navbar/NavbarIn\";\r\nimport IndividaulBet from \"./IndividaulBet/IndividaulBet\";\r\n\r\n //TO do\r\n\r\n // Alot of descructeering, especcially in the mapping (search for 'map')\r\n// What happends when the bet descrpio is too long? Test it and make a method that displays the first like 20 charactrs when longer\r\n \r\nlet Holder = <div></div>; \r\nlet balance=0;\r\nclass SignInHome extends Component {\r\n  constructor(props) {\r\n    super(); \r\n    this.state = {\r\n      //I know this is messy but hear me out. To reload a page we need a state change.\r\n      //SO if I cannt change a (because it is used for sorting as well as reloads)\r\n      //I will just change B\r\n      a:'total', \r\n      b:'1'\r\n      \r\n    };\r\n  }\r\n\r\nreload = (num) => {\r\n  this.props.reload(num);\r\n}\r\n\r\n  changeRoute = (name) => {\r\n    this.props.changeRoute(name);\r\n  }\r\n\r\n  unloadUser = () => {\r\n  this.props.unloadUser();\r\n}\r\n\r\ncheap = () => {\r\n  this.makeItEfficieant('total');  \r\n}\r\n\r\ngoodOdds = () => {\r\n  this.makeItEfficieant('odds');  \r\n}\r\n\r\nexpires = () => {\r\n  this.makeItEfficieant('expiry');  \r\n}\r\n\r\npopular = () => {\r\n  this.makeItEfficieant('popular');\r\n}\r\n\r\nmakeItEfficieant = (sortBy) => {\r\n  this.getTotal();\r\n  Holder = <div></div>; \r\n  this.grabbingBets(sortBy);\r\n    \r\n  this.setState({a:sortBy});\r\n\r\n\r\n}\r\n\r\nbought = () => {\r\n  if(this.state.a === 'total'){\r\n    this.makeItEfficieant('total');\r\n  }\r\n  if(this.state.a === 'popular'){\r\n    this.makeItEfficieant('popular');\r\n  }\r\n  if(this.state.a === 'expiry'){\r\n    this.makeItEfficieant('expiry');\r\n  }\r\n  if(this.state.a === 'odds'){\r\n    this.makeItEfficieant('odds');\r\n  }\r\n}\r\n\r\n \r\n\r\ncomponentDidMount(){  \r\n  this.grabbingBets('total');\r\n  this.getTotal()\r\n}\r\n\r\ngetTotal = () => {\r\n  fetch('http://localhost:3000/getBalance', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      id: this.props.userId\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n     balance = data;\r\n     this.setState({b:'5'});\r\n   });\r\n\r\n}\r\n\r\ngrabbingBets = (sorter) => {\r\n\r\n  //I dont think I ever use display bets endpoint\r\n \r\n   fetch('http://localhost:3000/returnBets', {\r\n     method: 'post',\r\n     headers: {'Content-Type': 'application/json'},\r\n     body: JSON.stringify({\r\n     })\r\n    }) \r\n    .then(response => response.json())\r\n    .then(data => {\r\n       Holder = data.map((user, i) => { \r\n          return <IndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\r\n                  expiry={data[i].expires} userId={this.props.creator} price={data[i].amount} email={this.props.email}     />\r\n\r\n        })\r\n\r\n       //This is used for the pile ones\r\n        // return <IndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\r\n        //           Odds={(((data[i].amountfor + data[i].total)/(data[i].amountagainst + data[i].total) ))}\r\n        //           expiry={data[i].expiry} email={this.props.email} bought={this.bought} userId={this.props.userId}      />\r\n\r\n        // })\r\n\r\n       if(this.state.b === '1'){\r\n        this.setState({b:'2'});\r\n       }else{\r\n        this.setState({b: '1'});\r\n       }\r\n    });\r\n\r\n    this.getExpiredBets();\r\n}\r\n\r\ngetExpiredBets = () => {\r\n  fetch('http://localhost:3000/expireBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      \r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    console.log(data);\r\n   })\r\n } \r\n\r\nswapExpireds = (data) => {\r\n  fetch('http://localhost:3000/swapExpireds', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      bets: data\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n     console.log(data);\r\n   });\r\n\r\n}\r\n  render() {  \r\n    return (\r\n      <div>\r\n        <NavbarIn changeRoute={this.changeRoute} unloadUser={this.unloadUser} />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h1 className=\"tc white i f1 font\">Explore Open Bets!</h1>\r\n        <br />\r\n        <br />\r\n        <Container>\r\n          <Row>\r\n              <Col className=\"tc f3 solidBR\">\r\n              <span className=''>\r\n                <br/>    \r\n                Your balance is: {balance}\r\n                <hr/> \r\n              </span> \r\n              <ButtonToolbar className=\"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\">\r\n              <span className='tc h6 center'>Sort Bets By:</span> \r\n                <ToggleButtonGroup\r\n                  className=\"center \"\r\n                  type=\"radio\"\r\n                  name=\"options\"\r\n                  defaultValue={1}\r\n                >\r\n\r\n                  <ToggleButton className=\"ma2\" value={1} onClick={this.cheap}>\r\n                    Cheapest\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" value={2} onClick={this.goodOdds}>\r\n                    Highest odds\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" value={3} onClick={this.expires}>\r\n                    Expire Soonest\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" value={4} onClick={this.popular}>\r\n                    Most Popular\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </ButtonToolbar> \r\n\r\n            \r\n              <hr />\r\n              <br/> \r\n              <div className='tc'>\r\n                <Container>\r\n                  <Row>\r\n                    <Col md className='f4 tc bl ma1'>A short descripton of bet</Col>\r\n                    <Col xs={2} className='ma1'>The Odds</Col>\r\n                    <Col xs={2} className=' ma1'>Amount (in B)</Col>\r\n                    <Col xs={2} className='br ma1'>End date</Col>\r\n                  </Row>   \r\n                </Container>\r\n              </div>\r\n              <hr/>\r\n              \r\n              {Holder} \r\n              \r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInHome;\r\n"]},"metadata":{},"sourceType":"module"}