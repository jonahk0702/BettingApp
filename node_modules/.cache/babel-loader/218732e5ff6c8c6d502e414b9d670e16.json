{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\learn\\\\BetInfo.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport NavbarIn from \"../navbar/NavbarIn\";\n\nclass BetInfo extends Component {\n  constructor(props) {\n    super();\n\n    this.changeRoute = name => {\n      this.props.changeRoute(name);\n      console.log(\"sent\");\n    };\n\n    this.unloadUser = () => {\n      this.props.unloadUser();\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(NavbarIn, {\n      changeRoute: this.changeRoute,\n      unloadUser: this.unloadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"tc i f1 font white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"A guide to creating bets\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"tc f3 solidBR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pa4 i\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"  Types of bets \"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"pa3 ma3 ba\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"i pointer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"A One - One Matchup\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"f4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"This is the most simple type of bet. Every single bet for is matched with someone who wants to bet agaisnt. As the chances of something happening are not always 50/50, the bet creator decides on the odds for this bet. It must be noted that the bet is only created if there is someone for and someone against. If you buy one side, it will be pending until there is someone to be matched with. Thus it is possible for you to push buy, and the bet never to go through. \")), React.createElement(Col, {\n      className: \"pa3 ma3 ba\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"i pointer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"A Pile on\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"f4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"This type of bet is certainly more fun. Whenever you buy into it, you are added into a pool of every other person who has taken the same side as you. The odds are created on the fly by the amount of people betting for over amount betting against. Thus, once you buy in, the bet will take place. It must be noted that when the best is over, all the total bet is grouped together and shared between the winners. When shared, two metric are considered. First, amount bet and second, the odds when bet. For example someone who bet For when everyone else bet Against will be rewarded more than one who bet when it was 50/50.\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"pa3 ma3 ba\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"i pointer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Friend's Bet\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \"This can be either a Pile on or One - One Matchup but only availbe to a specific group to which you must belong. When creating the bet, the creator will need to select group to which the bet is offered.\"), React.createElement(Col, {\n      className: \"pa4 ma5 ba\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"i pointer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Terms and conditions\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BetInfo;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\learn\\BetInfo.js"],"names":["React","Component","Container","Row","Col","NavbarIn","BetInfo","constructor","props","changeRoute","name","console","log","unloadUser","state","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport NavbarIn from \"../navbar/NavbarIn\";\r\n\r\nclass BetInfo extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  changeRoute = (name) => { \r\n    this.props.changeRoute(name); \r\n    console.log(\"sent\");\r\n  }\r\n\r\n  unloadUser = () => {\r\n  this.props.unloadUser();\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n       \r\n        <NavbarIn changeRoute={this.changeRoute} unloadUser={this.unloadUser}/>\r\n         <br />\r\n        <br />\r\n        <h1 className=\"tc i f1 font white\">A guide to creating bets</h1>\r\n        <br />\r\n        \r\n\r\n        <Container className='tc f3 solidBR'>\r\n\r\n          <div className='pa4 i'>  Types of bets </div>\r\n          <Row>\r\n\r\n          <Col className='pa3 ma3 ba'>\r\n          <br/>\r\n            <h3 className='i pointer'>A One - One Matchup</h3>\r\n            <hr/>\r\n            <br/> \r\n            <span className='f4'>This is the most simple type of bet. Every single bet for is matched with \r\n            someone who wants to bet agaisnt. As the chances of something happening are not\r\n             always 50/50, the bet creator decides on the odds for this bet. It must be noted \r\n             that the bet is only created if there is someone for and someone against. If you \r\n             buy one side, it will be pending until there is someone to be matched with. Thus \r\n             it is possible for you to push buy, and the bet never to go through. </span>\r\n          </Col>       \r\n\r\n            <Col className='pa3 ma3 ba'>\r\n            <br/>\r\n            <h3 className='i pointer'>A Pile on</h3>\r\n            <hr/>\r\n            <br/>\r\n              <span className = 'f4'>\r\n              This type of bet is certainly more fun. Whenever you buy into it, you are added \r\n              into a pool of every other person who has taken the same side as you. The odds are \r\n              created on the fly by the amount of people betting for over amount betting against. \r\n              Thus, once you buy in, the bet will take place. It must be noted that when the best \r\n              is over, all the total bet is grouped together and shared between the winners. When \r\n              shared, two metric are considered. First, amount bet and second, the odds when bet. For \r\n              example someone who bet For when everyone else bet Against will be rewarded more than one \r\n              who bet when it was 50/50.\r\n              </span>\r\n          </Col>\r\n          </Row>\r\n              \r\n          <Row>\r\n          <Col className='pa3 ma3 ba'>\r\n          <br/> \r\n            <h3 className='i pointer'>Friend's Bet</h3>\r\n            <hr/>\r\n            <br/>\r\n            This can be either a Pile on or One - One Matchup but only availbe to a specific \r\n            group to which you must belong. When creating the bet, the creator will need to \r\n            select group to which the bet is offered. \r\n          </Col>\r\n          <Col className='pa4 ma5 ba'>\r\n          <br/>\r\n            <h3 className='i pointer'>Terms and conditions</h3>\r\n            <hr/>\r\n            <br/>\r\n          </Col>    \r\n          </Row>\r\n        \r\n        </Container>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BetInfo;"]},"metadata":{},"sourceType":"module"}