{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\MyBets.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport NavbarIn from './navbar/NavbarIn';\nimport IndividaulBet from './IndividaulBet/IndividaulBet';\nlet Holder = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n});\nlet amountBet = [];\nlet amountFor = [];\nlet amountAgainst = [];\nlet descriptionFor = [];\nlet descriptionAgainst = [];\nlet betForr = [];\n\nclass MyBets extends Component {\n  constructor(props) {\n    super();\n\n    this.changeRoute = name => {\n      this.props.changeRoute(name);\n    };\n\n    this.unloadUser = () => {\n      this.props.unloadUser();\n    };\n\n    this.addAmount = raw => {\n      let str = '';\n\n      for (let i = 0; i < raw.length; i++) {\n        if (raw[i] !== 'o') {\n          str += raw[i];\n        }\n      }\n    };\n\n    this.makeArray = () => {//Get the amount of things in array\n      //seprate into the array\n      //Make a way of colour coding them to show for and against\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/getMyBets', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: this.props.email\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      amountBet = data.amount;\n\n      for (let i = 0; i < amountBet; i++) {\n        if (data.betfor.substring(i * 7 + 5, i * 7 + 11) === '000000') {\n          betForr.push(false);\n          let rawAmount = data.amountagainst.substring(i * 7 + 5, i * 7 + 11);\n          this.addAmount(rawAmount);\n          amountBet.push(data.amountagainst);\n        } else {\n          betForr.push(true);\n        }\n      }\n\n      console.log(data.am); // Holder = data.map((user, i) => { \n      //    return <IndividaulBet key={i} id={data[i].id} name={data[i].description} amount={data[i].total}\n      //            Odds={(((data[i].amountfor + data[i].total)/(data[i].amountagainst + data[i].total) ))}\n      //            expiry={data[i].expiry} email={this.props.email} bought={this.bought}       />\n      //  }) \n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(NavbarIn, {\n      changeRoute: this.changeRoute,\n      unloadUser: this.unloadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"tc white i f1 font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"My Bets!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"tc f3 solidBR bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(IndividaulBet, {\n      name: \"I bet that Ramaposa is an Alien\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(IndividaulBet, {\n      name: \"I bet the Mac Miller faked his death\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(IndividaulBet, {\n      name: \"I bet that Micheal Obama is \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyBets;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\MyBets.js"],"names":["React","Component","Container","Row","Col","ButtonToolbar","ToggleButton","ToggleButtonGroup","NavbarIn","IndividaulBet","Holder","amountBet","amountFor","amountAgainst","descriptionFor","descriptionAgainst","betForr","MyBets","constructor","props","changeRoute","name","unloadUser","addAmount","raw","str","i","length","makeArray","state","componentDidMount","fetch","method","headers","body","JSON","stringify","email","then","response","json","data","console","log","amount","betfor","substring","push","rawAmount","amountagainst","am","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport NavbarIn from './navbar/NavbarIn'\r\nimport IndividaulBet from './IndividaulBet/IndividaulBet';\r\n\r\nlet Holder = <div></div>;\r\nlet amountBet = [];\r\nlet amountFor = [];\r\nlet amountAgainst = [];\r\nlet descriptionFor = [];\r\nlet descriptionAgainst = [];\r\nlet betForr = [];\r\n\r\nclass MyBets extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n    \r\n\r\n  };\r\n}\r\n\r\n\r\nchangeRoute = (name) =>{ \r\n  this.props.changeRoute(name); \r\n}\r\n\r\nunloadUser = () => {\r\n  this.props.unloadUser();\r\n}\r\n\r\naddAmount = (raw) => {\r\n  let str = '';\r\n  for(let i = 0; i < raw.length; i++ ){\r\n      if(raw[i] !== 'o'){\r\n        str += raw[i];\r\n      }\r\n  }\r\n}\r\n\r\nmakeArray = () => \r\n{\r\n  //Get the amount of things in array\r\n  //seprate into the array\r\n  //Make a way of colour coding them to show for and against\r\n}\r\n\r\ncomponentDidMount(){  \r\n\r\n   fetch('http://localhost:3000/getMyBets', {\r\n     method: 'post',\r\n     headers: {'Content-Type': 'application/json'},\r\n     body: JSON.stringify({\r\n      email:this.props.email\r\n     })\r\n    }) \r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data);\r\n      amountBet = data.amount;\r\n      for(let i = 0; i < amountBet; i ++){\r\n\r\n        if( (data.betfor.substring(((i*7) + 5), ( (i*7) + 11))) === '000000' ){\r\n          betForr.push(false);\r\n          let rawAmount = data.amountagainst.substring(((i*7) + 5), ( (i*7) + 11));\r\n          this.addAmount(rawAmount);\r\n          amountBet.push(data.amountagainst);\r\n        }else{\r\n          betForr.push(true);\r\n        }\r\n      }\r\n      console.log(data.am);\r\n        \r\n       // Holder = data.map((user, i) => { \r\n       //    return <IndividaulBet key={i} id={data[i].id} name={data[i].description} amount={data[i].total}\r\n       //            Odds={(((data[i].amountfor + data[i].total)/(data[i].amountagainst + data[i].total) ))}\r\n       //            expiry={data[i].expiry} email={this.props.email} bought={this.bought}       />\r\n\r\n       //  }) \r\n     \r\n    });\r\n}\r\n\r\n  render() {\r\n\r\n    return (\r\n     <div>\r\n     <NavbarIn changeRoute={this.changeRoute} unloadUser={this.unloadUser}/>\r\n     <br/><br/><br/>\r\n     <h1 className=\"tc white i f1 font\">My Bets!</h1>\r\n     <br/><br/>\r\n        <Container>\r\n  \t\t\t<Row>\r\n \t\t\t   <Col className='tc f3 solidBR bg-white'>\r\n \t\t\t   \r\n\r\n        \r\n          <hr/><br/>\r\n          <IndividaulBet name={\"I bet that Ramaposa is an Alien\"}/>\r\n           <IndividaulBet name={\"I bet the Mac Miller faked his death\"}/> \r\n           <IndividaulBet name={\"I bet that Micheal Obama is \"}/>\r\n\r\n \t\t\t   </Col>\r\n  \t\t\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n    <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyBets;  "]},"metadata":{},"sourceType":"module"}