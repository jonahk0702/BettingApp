{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\MyBets.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport NavbarIn from './navbar/NavbarIn';\nimport IndividaulBet from './IndividaulBet/IndividaulBet';\nlet Holder = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n});\nlet amountOfBets = 0;\nlet betAmount = []; //let amountFor = [];\n//let amountAgainst = [];\n\nlet descriptions = [];\nlet betForr = [];\nlet betIds = [];\n\nclass MyBets extends Component {\n  constructor(props) {\n    super();\n\n    this.changeRoute = name => {\n      this.props.changeRoute(name);\n    };\n\n    this.unloadUser = () => {\n      this.props.unloadUser();\n    };\n\n    this.addAmount = raw => {\n      let str = '';\n\n      for (let i = 0; i < raw.length; i++) {\n        if (raw[i] !== 'o') {\n          str += raw[i];\n        }\n      }\n\n      betAmount.push(str); //parseInt(str));\n    };\n\n    this.makeArray = () => {//Get the amount of things in array\n      //seprate into the array\n      //Make a way of colour coding them to show for and against\n    };\n\n    this.getDiscription = () => {\n      fetch('http://localhost:3000/getBetDescriptions', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: this.props.email\n        })\n      }).then(response => response.json()).then(data => {\n        let allBets = data;\n\n        for (let a = 0; a < amountOfBets; a++) {\n          for (let b = 0; b < allBets.length; b++) {\n            if (betIds[a] === allBets[b].id) {\n              descriptions.push(allBets[b].description);\n              console.log(\"match at \" + allBets[b].description);\n            }\n          }\n        }\n\n        console.log(descriptions);\n        Holder = betAmount.map((user, i) => {\n          return React.createElement(IndividaulBet, {\n            key: i,\n            id: data[i].id,\n            name: data[i].description,\n            amount: data[i].total,\n            Odds: (data[i].amountfor + data[i].total) / (data[i].amountagainst + data[i].total),\n            expiry: data[i].expiry,\n            email: this.props.email,\n            bought: this.bought,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          });\n        });\n      });\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    // this.getDiscription();\n    fetch('http://localhost:3000/getMyBets', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: this.props.email\n      })\n    }).then(response => response.json()).then(data => {\n      amountOfBets = data.amount;\n\n      for (let i = 0; i < amountOfBets; i++) {\n        let start = i * 7 + 5;\n        let end = i * 7 + 11;\n\n        if (data.betfor.substring(start, end) === '000000') {\n          betForr.push(false);\n          let rawAmount = data.amountagainst.substring(start, end);\n          this.addAmount(rawAmount);\n          betIds.push(data.betagainst.substring(start, end));\n        } else {\n          betForr.push(true);\n          let rawAmount = data.amountfor.substring(start, end);\n          betIds.push(data.betfor.substring(start, end));\n          this.addAmount(rawAmount);\n        }\n      }\n\n      this.getDiscription();\n      console.log(betIds + ' are the ids');\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(NavbarIn, {\n      changeRoute: this.changeRoute,\n      unloadUser: this.unloadUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"tc white i f1 font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"My Bets!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"tc f3 solidBR bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(IndividaulBet, {\n      name: \"I bet that Ramaposa is an Alien\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(IndividaulBet, {\n      name: \"I bet the Mac Miller faked his death\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(IndividaulBet, {\n      name: \"I bet that Micheal Obama is \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyBets;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\MyBets.js"],"names":["React","Component","Container","Row","Col","NavbarIn","IndividaulBet","Holder","amountOfBets","betAmount","descriptions","betForr","betIds","MyBets","constructor","props","changeRoute","name","unloadUser","addAmount","raw","str","i","length","push","makeArray","getDiscription","fetch","method","headers","body","JSON","stringify","email","then","response","json","data","allBets","a","b","id","description","console","log","map","user","total","amountfor","amountagainst","expiry","bought","state","componentDidMount","amount","start","end","betfor","substring","rawAmount","betagainst","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Row, Col} from \"react-bootstrap\";\r\nimport NavbarIn from './navbar/NavbarIn'\r\nimport IndividaulBet from './IndividaulBet/IndividaulBet';\r\n\r\nlet Holder = <div></div>;\r\n\r\nlet amountOfBets = 0;\r\nlet betAmount = [];\r\n//let amountFor = [];\r\n//let amountAgainst = [];\r\nlet descriptions = [];\r\nlet betForr = [];\r\nlet betIds = [];\r\n\r\nclass MyBets extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n    \r\n\r\n  };\r\n}\r\n\r\n\r\nchangeRoute = (name) =>{ \r\n  this.props.changeRoute(name); \r\n}\r\n\r\nunloadUser = () => {\r\n  this.props.unloadUser();\r\n}\r\n\r\naddAmount = (raw) => {\r\n  let str = '';\r\n  for(let i = 0; i < raw.length; i++ ){\r\n      if(raw[i] !== 'o'){\r\n        str += raw[i];\r\n      }\r\n  }\r\n  betAmount.push(str);//parseInt(str));\r\n}\r\n\r\nmakeArray = () => \r\n{\r\n  //Get the amount of things in array\r\n  //seprate into the array\r\n  //Make a way of colour coding them to show for and against\r\n}\r\n\r\ncomponentDidMount(){  \r\n // this.getDiscription();\r\n\r\n   fetch('http://localhost:3000/getMyBets', {\r\n     method: 'post',\r\n     headers: {'Content-Type': 'application/json'},\r\n     body: JSON.stringify({\r\n      email:this.props.email\r\n     })\r\n    }) \r\n    .then(response => response.json())\r\n    .then(data => {\r\n      \r\n      amountOfBets = data.amount;\r\n      for(let i = 0; i < amountOfBets; i ++){\r\n        let start = (i*7) + 5;\r\n        let end = ((i*7) + 11);\r\n        if( (data.betfor.substring( start, end)) === '000000' ){\r\n          betForr.push(false);\r\n          let rawAmount = data.amountagainst.substring( start, end);\r\n          this.addAmount(rawAmount);\r\n          betIds.push( (data.betagainst.substring(start, end))) ;\r\n        }else{\r\n          betForr.push(true);\r\n          let rawAmount = data.amountfor.substring(start, end);\r\n          betIds.push( (data.betfor.substring(start, end)));\r\n          this.addAmount(rawAmount);\r\n        }\r\n      }\r\n      this.getDiscription();\r\n      console.log(betIds + ' are the ids');\r\n     \r\n    });\r\n}\r\n\r\ngetDiscription = () => {\r\n  fetch('http://localhost:3000/getBetDescriptions', {\r\n     method: 'post',\r\n     headers: {'Content-Type': 'application/json'},\r\n     body: JSON.stringify({\r\n      email:this.props.email\r\n     })\r\n    }) \r\n    .then(response => response.json())\r\n    .then(data => {\r\n        let allBets = data;\r\n        for(let a = 0; a < amountOfBets; a ++){\r\n          for(let b = 0; b < allBets.length; b ++){\r\n            if(betIds[a] === allBets[b].id){\r\n              descriptions.push(allBets[b].description);\r\n              console.log(\"match at \" + allBets[b].description);\r\n            }\r\n          }\r\n        }\r\n        console.log(descriptions);\r\n\r\n        Holder = betAmount.map((user, i) => { \r\n          return <IndividaulBet key={i} id={data[i].id} name={data[i].description} amount={data[i].total}\r\n                  Odds={(((data[i].amountfor + data[i].total)/(data[i].amountagainst + data[i].total) ))}\r\n                  expiry={data[i].expiry} email={this.props.email} bought={this.bought}       />\r\n\r\n        }) \r\n      });\r\n\r\n}\r\n\r\n  render() {\r\n\r\n    return (\r\n     <div>\r\n     <NavbarIn changeRoute={this.changeRoute} unloadUser={this.unloadUser}/>\r\n     <br/><br/><br/>\r\n     <h1 className=\"tc white i f1 font\">My Bets!</h1>\r\n     <br/><br/>\r\n        <Container>\r\n  \t\t\t<Row>\r\n \t\t\t   <Col className='tc f3 solidBR bg-white'>\r\n \t\t\t   \r\n\r\n        \r\n          <hr/><br/>\r\n          <IndividaulBet name={\"I bet that Ramaposa is an Alien\"}/>\r\n           <IndividaulBet name={\"I bet the Mac Miller faked his death\"}/> \r\n           <IndividaulBet name={\"I bet that Micheal Obama is \"}/>\r\n\r\n \t\t\t   </Col>\r\n  \t\t\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n    <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyBets;  "]},"metadata":{},"sourceType":"module"}