{"ast":null,"code":"var _jsxFileName = \"/Users/jonahkollenberg/Documents/bets/BettingApp/src/components/Register/Register.js\";\nimport React, { Component } from \"react\";\nimport { CountryDropdown } from 'react-country-region-selector'; //Okay, this is quite messy, but here I go\n//For the states, i think we'll need to save all of the users\n//inputed data in this state. I havent done it yet\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Country: '',\n      firstName: ' ',\n      secondName: ' ',\n      dateOfBirth: ' ',\n      //Time.now,\n      email: ' ',\n      password: ' ',\n      passwordConfirm: ' ',\n      IdNumber: ' ',\n      currentPage: 1\n    };\n\n    this.ValidateFirst = () => {\n      let _this$state = this.state,\n          firstName = _this$state.firstName,\n          secondName = _this$state.secondName,\n          dateOfBirth = _this$state.dateOfBirth;\n\n      if (firstName === ' ' || secondName === ' ' || dateOfBirth === ' ') {\n        console.log(\"Please fill in all infomation\");\n      } else {\n        console.log(\"Sucess!\");\n        this.setState({\n          currentPage: 2\n        });\n      }\n    };\n\n    this.ValidateFinal = () => {\n      let _this$state2 = this.state,\n          Country = _this$state2.Country,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          passwordConfirm = _this$state2.passwordConfirm,\n          IdNumber = _this$state2.IdNumber;\n\n      if (email === ' ' || password === ' ' || passwordConfirm === ' ' || IdNumber === ' ' || Country === ' ') {\n        console.log(\"Please fill in all infomation\");\n      } else if (!email.includes('.')) {\n        if (!email.includes('@')) {\n          console.log(\"Not a valid Email\");\n        }\n      } else if (password.length < 8) {\n        console.log(\"Password is too short\");\n      } //password contains special cases\n      else if (password.toUpperCase() === password || password.toLowerCase() === password) {\n          console.log(\"Password has only upper or lowers cases\");\n        } else if (!isNaN(parseFloat(password)) && isFinite(password)) {\n          console.log('It may contain a nymber');\n        } else if (password !== passwordConfirm) {\n          console.log(\"make sure the passwords match\");\n        } else {\n          console.log(\"Sucess!\");\n        }\n    };\n\n    this.enterEmail = newEmail => {\n      this.setState({\n        email: newEmail.target.value\n      });\n    };\n\n    this.enterPassword = newPassword => {\n      this.setState({\n        password: newPassword.target.value\n      });\n    };\n\n    this.enterName = name => {\n      this.setState({\n        firstName: name.target.value\n      });\n      console.log(name.target.value);\n    };\n\n    this.enterSurname = secondName => {\n      this.setState({\n        secondName: secondName.target.value\n      });\n      console.log(secondName.target.value);\n    };\n\n    this.enterDateofBirth = dateBirth => {\n      this.setState({\n        dateOfBirth: dateBirth.target.value\n      });\n    };\n\n    this.enterconPassword = ConfirmPassWord => {\n      this.setState({\n        passwordConfirm: ConfirmPassWord.target.value\n      });\n    };\n\n    this.enterIDNum = idNum => {\n      this.setState({\n        IdNumber: idNum.target.value\n      });\n    };\n\n    this.enterUsername = countrys => {\n      this.setState({\n        Country: countrys.target.value\n      });\n    };\n  }\n\n  //This just stores in state the country they are from\n  selectCountry(val) {\n    this.setState({\n      country: val\n    });\n  }\n\n  render() {\n    //Just making variables for each state, so i dont have to \n    //say this.state every time\n    const country = this.state.country; //Okay, so I am making an condition. If we are on first page of\n    //create account then show this part of the form\n\n    let first;\n    let final;\n\n    if (this.state.currentPage === 1) {\n      first = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        onChange: this.enterName,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mv3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Surname\"), React.createElement(\"input\", {\n        onChange: this.enterSurname,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Date of Birth\"), React.createElement(\"input\", {\n        onChange: this.enterDateofBirth,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onClick: this.ValidateFirst,\n        className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",\n        type: \"submit\",\n        value: \"Next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }));\n      final = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      });\n    } else {\n      first = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      });\n      final = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"email Adress\"), React.createElement(\"input\", {\n        onChange: this.enterEmail,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mv3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: this.enterPassword,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mv3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: this.enterconPassword,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Country of Residence\"), React.createElement(CountryDropdown, {\n        value: country,\n        onChange: val => this.selectCountry(val),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, country, \" Idenitifaction Number\"), React.createElement(\"input\", {\n        type: \"number\",\n        onChange: this.enterIDNum,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onClick: this.ValidateFinal,\n        className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",\n        type: \"submit\",\n        value: \"Create Account!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })));\n    }\n\n    return (//Depending on page, im changing current, but whatever it is\n      //current is always displayed\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mw5 mw7-ns center br5 black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(\"article\", {\n        className: \"br3 ba --black-10 w-100 w-100-m center shadow-5 solidBR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        className: \"pa4 black-80 tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        id: \"sign_up\",\n        className: \"ba b--transparent ph0 mh0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"f1 ph0 mh0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"p\", {\n        onClick: () => this.props.handleSwitch(false),\n        className: \"f6 link dim black db pointer tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Already have an account?\"), first, final, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/jonahkollenberg/Documents/bets/BettingApp/src/components/Register/Register.js"],"names":["React","Component","CountryDropdown","Register","state","Country","firstName","secondName","dateOfBirth","email","password","passwordConfirm","IdNumber","currentPage","ValidateFirst","console","log","setState","ValidateFinal","includes","length","toUpperCase","toLowerCase","isNaN","parseFloat","isFinite","enterEmail","newEmail","target","value","enterPassword","newPassword","enterName","name","enterSurname","enterDateofBirth","dateBirth","enterconPassword","ConfirmPassWord","enterIDNum","idNum","enterUsername","countrys","selectCountry","val","country","render","first","final","props","handleSwitch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { CountryDropdown} from 'react-country-region-selector';\n\n//Okay, this is quite messy, but here I go\n\n//For the states, i think we'll need to save all of the users\n//inputed data in this state. I havent done it yet\nclass Register extends Component {\n  state = {\n    Country:'',\n    \n      firstName: ' ',\n      secondName: ' ',\n      dateOfBirth: ' ',//Time.now,\n      email: ' ',\n      password: ' ',\n      passwordConfirm: ' ',\n      IdNumber: ' ',\n\n      currentPage:1\n\n    \n  };\n\n//This just stores in state the country they are from\n  selectCountry (val) {\n    this.setState({ country: val });\n  }\n\nValidateFirst = () => {\n  let {firstName, secondName, dateOfBirth} = this.state;\n\n  if(firstName === ' ' || secondName === ' ' || dateOfBirth === ' '){\n      console.log(\"Please fill in all infomation\");\n    }else{\n          console.log(\"Sucess!\");\n          this.setState({currentPage:2});\n        }\n        \n\n}\n\nValidateFinal = () => {\n  let {Country, email, password, passwordConfirm, IdNumber} = this.state;\n  \n  if(email === ' ' || password === ' '\n      || passwordConfirm === ' ' || IdNumber === ' '\n      || Country === ' '){\n      console.log(\"Please fill in all infomation\");\n    }\n\n   else if(!email.includes('.')) {\n              if(!email.includes('@')){\n                 console.log(\"Not a valid Email\");\n               }\n        }\n\n        else if (password.length < 8){\n          console.log(\"Password is too short\");\n        }\n        //password contains special cases\n        else if (password.toUpperCase() === password || password.toLowerCase()\n          === password){\n            console.log(\"Password has only upper or lowers cases\");\n        }\n\n        else if(!isNaN(parseFloat(password)) && isFinite(password)){\n          console.log('It may contain a nymber');\n        }\n\n        else if(password !== passwordConfirm){\n          console.log(\"make sure the passwords match\");\n\n        }else{\n          console.log(\"Sucess!\");\n        }\n        \n}    \n        \n     \n    \n\nenterEmail = (newEmail) =>{\n      this.setState({email: newEmail.target.value});\n\n  }\n\n  enterPassword = (newPassword) =>{\n      this.setState({password: newPassword.target.value});\n  }\n\n  \n\n  enterName = (name) =>{\n      this.setState({firstName: name.target.value});\n      console.log(name.target.value);\n  }\n\n  enterSurname = (secondName) =>{\n      this.setState({secondName: secondName.target.value});\n      console.log(secondName.target.value);\n  }\n\n  enterDateofBirth = (dateBirth) =>{\n      this.setState({dateOfBirth: dateBirth.target.value});\n  }\n\n  enterconPassword = (ConfirmPassWord) =>{\n      this.setState({passwordConfirm: ConfirmPassWord.target.value});\n  }\n\n  enterIDNum = (idNum) =>{\n      this.setState({IdNumber: idNum.target.value});\n  }\n\n  enterUsername = (countrys) =>{\n      this.setState({Country: countrys.target.value});\n  }\n\n  render() {\n    //Just making variables for each state, so i dont have to \n    //say this.state every time\n    const {country} = this.state;\n\n\n\n \n\n    //Okay, so I am making an condition. If we are on first page of\n    //create account then show this part of the form\n  \n   \n    let first;\n    let final;\n\n\n    if(this.state.currentPage === 1){\n      first = <div><div className=\"mt3\">\n                        <label className=\"db fw6 lh-copy f6\">First Name</label>\n                        <input \n                        onChange={this.enterName}\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\" />\n              </div>\n              <div className=\"mv3\">\n                        <label className=\"db fw6 lh-copy f6\">Surname</label>\n                        <input \n                        onChange={this.enterSurname}\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\" \n                        />\n              </div>\n                  \n                <div className=\"mt3\">\n                      <label className=\"db fw6 lh-copy f6\">Date of Birth</label>\n                      <input\n                            onChange={this.enterDateofBirth}\n                            className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\"\n                            type=\"date\"\n                      />\n                </div>\n\n                    <br/>\n                    <input\n                          onClick={this.ValidateFirst}\n                          className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                          type=\"submit\"\n                          value=\"Next\"\n                        />\n            </div>\n\n            final = <div></div>\n}else{\n\n  first= <div></div>\n            final = <div>\n              \n                  <div className=\"mt3\">\n                      <label className=\"db fw6 lh-copy f6\">email Adress</label>\n                      <input \n                          onChange={this.enterEmail} className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\" \n                      />\n                    </div>\n\n                    <div className=\"mv3\">\n                      <label className=\"db fw6 lh-copy f6\">Password</label>\n                      <input type=\"password\"\n                        onChange={this.enterPassword}\n                        className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\" />\n                      </div>\n\n                      <div className=\"mv3\">\n                       <label className=\"db fw6 lh-copy f6\">Confirm Password</label>\n                        <input type=\"password\"\n                        onChange={this.enterconPassword}\n                          className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\" />\n                      </div>\n                        <div className=\"mt3\">\n                          <label className=\"db fw6 lh-copy f6\">Country of Residence</label>\n                          <CountryDropdown\n                            value={country}\n                            onChange={(val) => this.selectCountry(val)} />\n                      </div>\n\n                      <div className=\"mt3\">\n                          <label className=\"db fw6 lh-copy f6\">{country} Idenitifaction Number</label>\n                          <input \n                          type='number'\n                          onChange={this.enterIDNum}\n                          className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\" />\n                      </div>\n\n                      <div className=\"mt3\">\n                        <input\n                          onClick={this.ValidateFinal}\n                          className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                          type=\"submit\"\n                          value=\"Create Account!\"\n                        />\n                      </div>\n\n\n\n            </div>\n}\n    return (\n\n\n      //Depending on page, im changing current, but whatever it is\n      //current is always displayed\n      <div>\n          <div className=\"mw5 mw7-ns center br5 black\">\n              <br />\n              <br />\n\n              <article className=\"br3 ba --black-10 w-100 w-100-m center shadow-5 solidBR\">\n                <main className=\"pa4 black-80 tc\">\n                  <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                    <legend className=\"f1 ph0 mh0\">Register</legend>\n                    <p\n                      onClick={() => this.props.handleSwitch(false)}\n                      className=\"f6 link dim black db pointer tc\">\n                      Already have an account?\n                    </p>\n                   \n\n\n                    {first} \n\n                    {final}\n\n                    \n                      <br />\n                          \n                    </fieldset>\n                 </main>\n              </article>\n            </div>\n            <br/> <br/> <br/>\n  \n \n\n      </div>\n      \n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}