{"ast":null,"code":"var _jsxFileName = \"/Users/DanRom/Desktop/GitHub/BettingApp/src/components/Register/Register.js\";\nimport React, { Component } from \"react\";\nimport { CountryDropdown } from \"react-country-region-selector\"; //Okay, this is quite messy, but here I go\n//For the states, i think we'll need to save all of the users\n//inputed data in this state. I havent done it yet\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Country: \"\",\n      firstName: \" \",\n      secondName: \" \",\n      dateOfBirth: \" \",\n      //Time.now,\n      email: \" \",\n      password: \" \",\n      passwordConfirm: \" \",\n      IdNumber: \" \",\n      currentPage: 1\n    };\n\n    this.detAge = () => {\n      var Bdate = document.getElementById(\"bday\").value;\n      var Bday = +new Date(Bdate);\n      return ~~((Date.now() - Bday) / 31557600000);\n    };\n\n    this.ValidateFirst = () => {\n      let _this$state = this.state,\n          firstName = _this$state.firstName,\n          secondName = _this$state.secondName,\n          dateOfBirth = _this$state.dateOfBirth;\n\n      if (firstName === \" \" || secondName === \" \" || dateOfBirth === \" \") {\n        console.log(\"Please fill in all infomation\");\n      } else if (this.detAge < 18) {\n        console.log(\"You are too young to bet !\");\n      } else {\n        console.log(\"Sucess!\");\n        this.setState({\n          currentPage: 2\n        });\n      }\n    };\n\n    this.ValidateFinal = () => {\n      let _this$state2 = this.state,\n          Country = _this$state2.Country,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          passwordConfirm = _this$state2.passwordConfirm,\n          IdNumber = _this$state2.IdNumber;\n\n      if (email === \" \" || password === \" \" || passwordConfirm === \" \" || IdNumber === \" \" || Country === \" \") {\n        console.log(\"Please fill in all infomation\");\n      } else if (!email.includes(\".\") || !email.includes(\"@\")) {\n        console.log(\"Not a valid Email\");\n      } else if (password.length < 8) {\n        console.log(\"Password is too short\");\n      } //password contains special cases\n      else if (password.toUpperCase() === password || password.toLowerCase() === password) {\n          console.log(\"Password has only upper or lowers cases\");\n        } else if (!isNaN(parseFloat(password)) && isFinite(password)) {\n          console.log(\"It may contain a number\");\n        } else if (password !== passwordConfirm) {\n          console.log(\"make sure the passwords match\");\n        } else {\n          console.log(\"Sucess!\");\n        }\n    };\n\n    this.enterEmail = newEmail => {\n      this.setState({\n        email: newEmail.target.value\n      });\n    };\n\n    this.enterPassword = newPassword => {\n      this.setState({\n        password: newPassword.target.value\n      });\n    };\n\n    this.enterName = name => {\n      this.setState({\n        firstName: name.target.value\n      });\n      console.log(name.target.value);\n    };\n\n    this.enterSurname = secondName => {\n      this.setState({\n        secondName: secondName.target.value\n      });\n      console.log(secondName.target.value);\n    };\n\n    this.enterDateofBirth = dateBirth => {\n      this.setState({\n        dateOfBirth: dateBirth.target.value\n      });\n    };\n\n    this.enterconPassword = ConfirmPassWord => {\n      this.setState({\n        passwordConfirm: ConfirmPassWord.target.value\n      });\n    };\n\n    this.enterIDNum = idNum => {\n      this.setState({\n        IdNumber: idNum.target.value\n      });\n    };\n\n    this.enterUsername = countrys => {\n      this.setState({\n        Country: countrys.target.value\n      });\n    };\n  }\n\n  //This just stores in state the country they are from\n  selectCountry(val) {\n    this.setState({\n      country: val\n    });\n  }\n\n  render() {\n    //Just making variables for each state, so i dont have to\n    //say this.state every time\n    const country = this.state.country; //Okay, so I am making an condition. If we are on first page of\n    //create account then show this part of the form\n\n    let first;\n    let final;\n\n    if (this.state.currentPage === 1) {\n      first = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(\"input\", {\n        onChange: this.enterName,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mv3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Surname\"), React.createElement(\"input\", {\n        onChange: this.enterSurname,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Date of Birth\"), React.createElement(\"input\", {\n        onChange: this.enterDateofBirth,\n        id: \"bday\",\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        type: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        onClick: this.ValidateFirst,\n        className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",\n        type: \"submit\",\n        value: \"Next\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }));\n      final = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    } else {\n      first = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      });\n      final = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"email Adress\"), React.createElement(\"input\", {\n        onChange: this.enterEmail,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mv3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: this.enterPassword,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mv3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Confirm Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: this.enterconPassword,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Country of Residence\"), React.createElement(CountryDropdown, {\n        value: country,\n        onChange: val => this.selectCountry(val),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, country, \" Idenitifaction Number\"), React.createElement(\"input\", {\n        type: \"\",\n        onChange: this.enterIDNum,\n        className: \"pa2 input-reset ba bg-transparent hover-bg-black w-100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"mt3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onClick: this.ValidateFinal,\n        className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\",\n        type: \"submit\",\n        value: \"Create Account!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })));\n    }\n\n    return (//Depending on page, im changing current, but whatever it is\n      //current is always displayed\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mw5 mw7-ns center br5 black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"article\", {\n        className: \"br3 ba --black-10 w-100 w-100-m center shadow-5 solidBR\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        className: \"pa4 black-80 tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        id: \"sign_up\",\n        className: \"ba b--transparent ph0 mh0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"f1 ph0 mh0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"p\", {\n        onClick: () => this.props.handleSwitch(false),\n        className: \"f6 link dim black db pointer tc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Already have an account?\"), first, final, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/DanRom/Desktop/GitHub/BettingApp/src/components/Register/Register.js"],"names":["React","Component","CountryDropdown","Register","state","Country","firstName","secondName","dateOfBirth","email","password","passwordConfirm","IdNumber","currentPage","detAge","Bdate","document","getElementById","value","Bday","Date","now","ValidateFirst","console","log","setState","ValidateFinal","includes","length","toUpperCase","toLowerCase","isNaN","parseFloat","isFinite","enterEmail","newEmail","target","enterPassword","newPassword","enterName","name","enterSurname","enterDateofBirth","dateBirth","enterconPassword","ConfirmPassWord","enterIDNum","idNum","enterUsername","countrys","selectCountry","val","country","render","first","final","props","handleSwitch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { CountryDropdown } from \"react-country-region-selector\";\n\n//Okay, this is quite messy, but here I go\n\n//For the states, i think we'll need to save all of the users\n//inputed data in this state. I havent done it yet\nclass Register extends Component {\n  state = {\n    Country: \"\",\n    firstName: \" \",\n    secondName: \" \",\n    dateOfBirth: \" \", //Time.now,\n    email: \" \",\n    password: \" \",\n    passwordConfirm: \" \",\n    IdNumber: \" \",\n\n    currentPage: 1\n  };\n\n  //This just stores in state the country they are from\n  selectCountry(val) {\n    this.setState({ country: val });\n  }\n\n  detAge = () => {\n    var Bdate = document.getElementById(\"bday\").value;\n    var Bday = +new Date(Bdate);\n    return ~~((Date.now() - Bday) / 31557600000);\n  };\n\n  ValidateFirst = () => {\n    let { firstName, secondName, dateOfBirth } = this.state;\n\n    if (firstName === \" \" || secondName === \" \" || dateOfBirth === \" \") {\n      console.log(\"Please fill in all infomation\");\n    } else if (this.detAge < 18) {\n      console.log(\"You are too young to bet !\");\n    } else {\n      console.log(\"Sucess!\");\n      this.setState({ currentPage: 2 });\n    }\n  };\n\n  ValidateFinal = () => {\n    let { Country, email, password, passwordConfirm, IdNumber } = this.state;\n\n    if (\n      email === \" \" ||\n      password === \" \" ||\n      passwordConfirm === \" \" ||\n      IdNumber === \" \" ||\n      Country === \" \"\n    ) {\n      console.log(\"Please fill in all infomation\");\n    } else if (!email.includes(\".\") || !email.includes(\"@\")) {\n      console.log(\"Not a valid Email\");\n    } else if (password.length < 8) {\n      console.log(\"Password is too short\");\n    }\n    //password contains special cases\n    else if (\n      password.toUpperCase() === password ||\n      password.toLowerCase() === password\n    ) {\n      console.log(\"Password has only upper or lowers cases\");\n    } else if (!isNaN(parseFloat(password)) && isFinite(password)) {\n      console.log(\"It may contain a number\");\n    } else if (password !== passwordConfirm) {\n      console.log(\"make sure the passwords match\");\n    } else {\n      console.log(\"Sucess!\");\n    }\n  };\n\n  enterEmail = newEmail => {\n    this.setState({ email: newEmail.target.value });\n  };\n\n  enterPassword = newPassword => {\n    this.setState({ password: newPassword.target.value });\n  };\n\n  enterName = name => {\n    this.setState({ firstName: name.target.value });\n    console.log(name.target.value);\n  };\n\n  enterSurname = secondName => {\n    this.setState({ secondName: secondName.target.value });\n    console.log(secondName.target.value);\n  };\n\n  enterDateofBirth = dateBirth => {\n    this.setState({ dateOfBirth: dateBirth.target.value });\n  };\n\n  enterconPassword = ConfirmPassWord => {\n    this.setState({ passwordConfirm: ConfirmPassWord.target.value });\n  };\n\n  enterIDNum = idNum => {\n    this.setState({ IdNumber: idNum.target.value });\n  };\n\n  enterUsername = countrys => {\n    this.setState({ Country: countrys.target.value });\n  };\n\n  render() {\n    //Just making variables for each state, so i dont have to\n    //say this.state every time\n    const { country } = this.state;\n\n    //Okay, so I am making an condition. If we are on first page of\n    //create account then show this part of the form\n\n    let first;\n    let final;\n\n    if (this.state.currentPage === 1) {\n      first = (\n        <div>\n          <div className=\"mt3\">\n            <label className=\"db fw6 lh-copy f6\">First Name</label>\n            <input\n              onChange={this.enterName}\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\"\n            />\n          </div>\n          <div className=\"mv3\">\n            <label className=\"db fw6 lh-copy f6\">Surname</label>\n            <input\n              onChange={this.enterSurname}\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\"\n            />\n          </div>\n\n          <div className=\"mt3\">\n            <label className=\"db fw6 lh-copy f6\">Date of Birth</label>\n            <input\n              onChange={this.enterDateofBirth}\n              id=\"bday\"\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\"\n              type=\"date\"\n            />\n          </div>\n\n          <br />\n          <input\n            onClick={this.ValidateFirst}\n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n            type=\"submit\"\n            value=\"Next\"\n          />\n        </div>\n      );\n\n      final = <div />;\n    } else {\n      first = <div />;\n      final = (\n        <div>\n          <div className=\"mt3\">\n            <label className=\"db fw6 lh-copy f6\">email Adress</label>\n            <input\n              onChange={this.enterEmail}\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\"\n            />\n          </div>\n\n          <div className=\"mv3\">\n            <label className=\"db fw6 lh-copy f6\">Password</label>\n            <input\n              type=\"password\"\n              onChange={this.enterPassword}\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\"\n            />\n          </div>\n\n          <div className=\"mv3\">\n            <label className=\"db fw6 lh-copy f6\">Confirm Password</label>\n            <input\n              type=\"password\"\n              onChange={this.enterconPassword}\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\"\n            />\n          </div>\n          <div className=\"mt3\">\n            <label className=\"db fw6 lh-copy f6\">Country of Residence</label>\n            <CountryDropdown\n              value={country}\n              onChange={val => this.selectCountry(val)}\n            />\n          </div>\n\n          <div className=\"mt3\">\n            <label className=\"db fw6 lh-copy f6\">\n              {country} Idenitifaction Number\n            </label>\n            <input\n              type=\"\"\n              onChange={this.enterIDNum}\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black w-100\"\n            />\n          </div>\n\n          <div className=\"mt3\">\n            <input\n              onClick={this.ValidateFinal}\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n              type=\"submit\"\n              value=\"Create Account!\"\n            />\n          </div>\n        </div>\n      );\n    }\n    return (\n      //Depending on page, im changing current, but whatever it is\n      //current is always displayed\n      <div>\n        <div className=\"mw5 mw7-ns center br5 black\">\n          <br />\n          <br />\n\n          <article className=\"br3 ba --black-10 w-100 w-100-m center shadow-5 solidBR\">\n            <main className=\"pa4 black-80 tc\">\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                <legend className=\"f1 ph0 mh0\">Register</legend>\n                <p\n                  onClick={() => this.props.handleSwitch(false)}\n                  className=\"f6 link dim black db pointer tc\"\n                >\n                  Already have an account?\n                </p>\n\n                {first}\n\n                {final}\n\n                <br />\n              </fieldset>\n            </main>\n          </article>\n        </div>\n        <br /> <br /> <br />\n      </div>\n    );\n  }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}