{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonah\\\\Desktop\\\\school\\\\BettingApp\\\\src\\\\components\\\\MyBets.js\";\nimport React, { Component } from \"react\";\nimport { Button, Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport NavbarIn from './navbar/NavbarIn';\nimport MyIndividaulBet from './IndividaulBet/MyIndividaulBet';\nimport ExpiredIndiBet from './IndividaulBet/ExpiredIndiBet';\nimport PileIndiBet from './IndividaulBet/PileIndiBet';\nimport ExpiredPileBet from './IndividaulBet/ExpiredPileBet'; //HolderM is for mathed. P is for Pile\n\nlet Holder = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n});\nlet secHolder = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n});\nlet blue = true;\nlet current = \"active\"; // let amountOfBets = 0;\n// let betAmount = [];\n// //let amountFor = [];\n// //let amountAgainst = [];\n// let descriptions = [];\n// let betForr = [];\n// let betIds = [];\n\nclass MyBets extends Component {\n  constructor(props) {\n    super();\n\n    this.changeRoute = name => {\n      this.props.changeRoute(name);\n    };\n\n    this.grabbingBetsM = () => {\n      if (blue === true) {} else {\n        blue = true;\n\n        if (current === 'active') {\n          this.starter(\"matchedbets\");\n        }\n\n        if (current === 'exp') {\n          this.expiredBets();\n        }\n\n        if (current === 'unt') {\n          this.untaken();\n        }\n      }\n    };\n\n    this.grabbingBetsP = () => {\n      blue = false;\n\n      if (current === 'active') {\n        this.starter(\"matchedbets\");\n      }\n\n      if (current === 'exp') {\n        this.expiredBets();\n      }\n\n      if (current === 'unt') {\n        this.untaken();\n      }\n    };\n\n    this.unloadUser = () => {\n      this.props.unloadUser();\n    };\n\n    this.expiredBets = () => {\n      current = 'exp';\n\n      if (blue === true) {\n        fetch('http://localhost:3000/getMyBets', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: this.props.userId,\n            database: 'expiredmatched'\n          })\n        }).then(response => response.json()).then(data => {\n          for (var i = 0; i < data.length; i++) {\n            if (data[i].better) {\n              if (data[i].better === this.props.userId) {\n                data[i].side = \"for\";\n              } else {\n                data[i].side = \"against\";\n              }\n            }\n          }\n\n          Holder = data.map((user, i) => {\n            return React.createElement(ExpiredIndiBet, {\n              key: i,\n              betid: data[i].betid,\n              name: data[i].description,\n              expiry: data[i].expires,\n              creator: data[i].creator,\n              amount: data[i].amount,\n              side: data[i].side,\n              better: this.props.better,\n              userId: this.props.userId,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            });\n          });\n          this.setState({\n            a: 1254\n          });\n        });\n      } else {\n        fetch('http://localhost:3000/getPileBets', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: this.props.userId,\n            database: 'expiredmatched',\n            setting: 'dones'\n          })\n        }).then(response => response.json()).then(data => {\n          Holder = data.map((user, i) => {\n            return React.createElement(ExpiredPileBet, {\n              key: i,\n              betid: data[i].betid,\n              name: data[i].description,\n              expiry: data[i].expires,\n              creator: data[i].creator,\n              amount: data[i].amount,\n              side: data[i].side,\n              better: this.props.better,\n              userId: this.props.userId,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 127\n              },\n              __self: this\n            });\n          });\n          this.setState({\n            a: 1254\n          });\n        });\n      }\n    };\n\n    this.untaken = () => {\n      current = 'unt';\n\n      if (blue === true) {\n        fetch('http://localhost:3000/getMyBetOffers', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: this.props.userId,\n            database: \"matchingoffers\"\n          })\n        }).then(response => response.json()).then(data => {\n          Holder = data.map((user, i) => {\n            return React.createElement(MyIndividaulBet, {\n              key: i,\n              betid: data[i].betid,\n              name: data[i].description,\n              amount: data[i].amount,\n              expiry: data[i].expires,\n              creator: data[i].creator,\n              price: data[i].amount,\n              side: \"for\",\n              better: data[i].better,\n              userId: this.props.userId,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157\n              },\n              __self: this\n            });\n          });\n          this.setState({\n            a: 1254\n          });\n        });\n      } else {\n        //this is quite cool\n        //I need to find all his transations, then find all the ones where the other side is 0 \n        fetch('http://localhost:3000/getPileBets', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: this.props.userId,\n            database: \"matchingoffers\",\n            setting: 'untaken'\n          })\n        }).then(response => response.json()).then(data => {\n          console.log(\"Will desplay data\");\n          console.log(data);\n          Holder = data.map((user, i) => {\n            return React.createElement(PileIndiBet, {\n              key: i,\n              betid: data[i].betid,\n              name: data[i].description,\n              amount: data[i].amount,\n              expiry: data[i].expires,\n              creator: data[i].creator,\n              haveB: \"true\",\n              userId: this.props.userId,\n              currentFor: data[i].currentfor,\n              currentAgainst: data[i].currentagainst,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186\n              },\n              __self: this\n            });\n          });\n          this.setState({\n            a: 1254\n          });\n        });\n      }\n    };\n\n    this.starter = database => {\n      current = 'active';\n\n      if (blue === true) {\n        fetch('http://localhost:3000/getMyBets', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: this.props.userId,\n            database: database,\n            expiredBets: 'false'\n          })\n        }).then(response => response.json()).then(data => {\n          if (data.length > 0) {\n            for (var i = 0; i < data.length; i++) {\n              if (data[i].better) {\n                if (data[i].better === this.props.userId) {\n                  data[i].side = \"for\";\n                } else {\n                  data[i].side = \"against\";\n                }\n              }\n            }\n\n            Holder = data.map((user, i) => {\n              return React.createElement(MyIndividaulBet, {\n                key: i,\n                betid: data[i].betid,\n                name: data[i].description,\n                amount: data[i].total,\n                expiry: data[i].expires,\n                userId: this.props.creator,\n                price: data[i].amount,\n                email: this.props.email,\n                side: data[i].side,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 227\n                },\n                __self: this\n              });\n            });\n          }\n\n          this.setState({\n            a: 1254\n          });\n        });\n      } else {\n        fetch('http://localhost:3000/getPileBets', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userId: this.props.userId,\n            database: 'pilestransactions',\n            setting: 'starts'\n          })\n        }).then(response => response.json()).then(data => {\n          if (data.length > 0) {\n            for (var i = 0; i < data.length; i++) {\n              if (data[i].better) {\n                if (data[i].better === this.props.userId) {\n                  data[i].side = \"for\";\n                } else {\n                  data[i].side = \"against\";\n                }\n              }\n            }\n\n            Holder = data.map((user, i) => {\n              return React.createElement(PileIndiBet, {\n                key: i,\n                betid: data[i].betid,\n                name: data[i].description,\n                amount: data[i].total,\n                expiry: data[i].expires,\n                userId: this.props.creator,\n                price: data[i].amount,\n                currentFor: data[i].currentfor,\n                side: data[i].side,\n                currentAgainst: data[i].currentagainst,\n                haveB: \"nope\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 263\n                },\n                __self: this\n              });\n            });\n          }\n\n          this.setState({\n            a: 1254\n          });\n        });\n      }\n    };\n\n    this.activeBets = () => {\n      this.starter(\"matchedbets\");\n    };\n\n    this.starterP = () => {};\n\n    this.state = {\n      Re: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.starter(\"matchedbets\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(NavbarIn, {\n      changeRoute: this.changeRoute,\n      unloadUser: this.unloadUser,\n      userId: this.props.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"tc white i f1 font\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"My Bets!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"tc f3 solidBR bg-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(ToggleButtonGroup, {\n      className: \"center \",\n      type: \"radio\",\n      name: \"options\",\n      defaultValue: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 1,\n      onClick: this.activeBets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Active Bets\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 2,\n      onClick: this.expiredBets,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Expired\"), React.createElement(ToggleButton, {\n      className: \"ma2\",\n      size: \"lg\",\n      value: 3,\n      onClick: this.untakenPho,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Pending\"))), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center  pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(ButtonToolbar, {\n      className: \"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-info\",\n      className: \"center\",\n      onClick: this.grabbingBetsM,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, \"One-on-One\"), ' ', React.createElement(Button, {\n      variant: \"outline-danger\",\n      className: \"center\",\n      onClick: this.grabbingBetsP,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Pile-ons\"), ' '), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }), React.createElement(MyIndividaulBet, {\n      name: \"Description\",\n      side: \"Side of bet\",\n      price: \"Amount\",\n      expiry: \"Expiry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), Holder, React.createElement(ExpiredIndiBet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MyBets;","map":{"version":3,"sources":["C:\\Users\\Jonah\\Desktop\\school\\BettingApp\\src\\components\\MyBets.js"],"names":["React","Component","Button","Container","Row","Col","ButtonToolbar","ToggleButton","ToggleButtonGroup","NavbarIn","MyIndividaulBet","ExpiredIndiBet","PileIndiBet","ExpiredPileBet","Holder","secHolder","blue","current","MyBets","constructor","props","changeRoute","name","grabbingBetsM","starter","expiredBets","untaken","grabbingBetsP","unloadUser","fetch","method","headers","body","JSON","stringify","userId","database","then","response","json","data","i","length","better","side","map","user","betid","description","expires","creator","amount","setState","a","setting","console","log","currentfor","currentagainst","total","email","activeBets","starterP","state","Re","componentDidMount","render","untakenPho"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {Button, Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport NavbarIn from './navbar/NavbarIn'\r\nimport MyIndividaulBet from './IndividaulBet/MyIndividaulBet';\r\nimport ExpiredIndiBet from './IndividaulBet/ExpiredIndiBet';\r\nimport PileIndiBet from './IndividaulBet/PileIndiBet';\r\nimport ExpiredPileBet from './IndividaulBet/ExpiredPileBet';\r\n\r\n\r\n//HolderM is for mathed. P is for Pile\r\nlet Holder = <div></div>;\r\nlet secHolder = <div></div>; \r\nlet blue = true; \r\nlet current = \"active\";\r\n// let amountOfBets = 0;\r\n// let betAmount = [];\r\n// //let amountFor = [];\r\n// //let amountAgainst = [];\r\n// let descriptions = [];\r\n// let betForr = [];\r\n// let betIds = [];\r\n\r\nclass MyBets extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n      Re:\"\"\r\n  };\r\n}\r\n\r\n\r\nchangeRoute = (name) =>{ \r\n  this.props.changeRoute(name); \r\n}\r\n\r\ngrabbingBetsM = () => {\r\n  if(blue === true){\r\n  }\r\n  else{\r\n    blue = true;\r\n    if(current === 'active'){\r\n      this.starter(\"matchedbets\");\r\n    }\r\n    if(current === 'exp'){\r\n      this.expiredBets();\r\n    }\r\n    if(current === 'unt'){\r\n      this.untaken();\r\n    }\r\n  }\r\n}\r\n\r\ngrabbingBetsP = () => {\r\n  blue = false;\r\n  if(current === 'active'){\r\n      this.starter(\"matchedbets\");\r\n    }\r\n    if(current === 'exp'){\r\n      this.expiredBets();\r\n    }\r\n    if(current === 'unt'){\r\n      this.untaken();\r\n    }\r\n}\r\n\r\n\r\nunloadUser = () => {\r\n  this.props.unloadUser();\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n  this.starter(\"matchedbets\");\r\n\r\n\r\n}\r\n\r\nexpiredBets = () =>{\r\n  current = 'exp';\r\n  if(blue === true){\r\n   fetch('http://localhost:3000/getMyBets', {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        userId: this.props.userId,\r\n        database: 'expiredmatched'\r\n      })\r\n     })\r\n     .then(response => response.json())\r\n     .then(data => {\r\n      for (var i = 0; i < data.length; i++) {\r\n        if(data[i].better){\r\n          if(data[i].better === this.props.userId){\r\n            data[i].side = \"for\";\r\n          }else{\r\n            data[i].side = \"against\";\r\n          } \r\n        }\r\n      }\r\n\r\n       Holder = data.map((user, i) => { \r\n             return <ExpiredIndiBet key={i} betid={data[i].betid} name={data[i].description} \r\n                     expiry={data[i].expires} creator={data[i].creator} amount={data[i].amount}  \r\n                     side={data[i].side}  better={this.props.better}  userId={this.props.userId}/>\r\n\r\n           })\r\n\r\n       this.setState({a:1254});\r\n\r\n       \r\n       });\r\n   }else{\r\n\r\n   fetch('http://localhost:3000/getPileBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: 'expiredmatched',\r\n      setting: 'dones'\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n\r\n     Holder = data.map((user, i) => { \r\n           return <ExpiredPileBet key={i} betid={data[i].betid} name={data[i].description} \r\n                   expiry={data[i].expires} creator={data[i].creator} amount={data[i].amount}  \r\n                   side={data[i].side}  better={this.props.better}  userId={this.props.userId}/>\r\n\r\n         })\r\n\r\n     this.setState({a:1254});\r\n\r\n     \r\n     });\r\n\r\n  }\r\n}\r\n\r\nuntaken = () => {\r\n  current = 'unt';\r\n  if(blue === true){\r\n  fetch('http://localhost:3000/getMyBetOffers', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: \"matchingoffers\" \r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n\r\n    \r\n     Holder = data.map((user, i) => { \r\n           return <MyIndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].amount}\r\n                   expiry={data[i].expires} creator={data[i].creator} price={data[i].amount} \r\n                   side='for'  better={data[i].better}  userId={this.props.userId}/>\r\n\r\n         })\r\n\r\n     this.setState({a:1254});\r\n\r\n     \r\n     });\r\n }else{\r\n   //this is quite cool\r\n   //I need to find all his transations, then find all the ones where the other side is 0 \r\n\r\n   fetch('http://localhost:3000/getPileBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: \"matchingoffers\" ,\r\n      setting: 'untaken'\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n    console.log(\"Will desplay data\");\r\n    console.log(data) ;\r\n    \r\n     Holder = data.map((user, i) => { \r\n           return <PileIndiBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].amount}\r\n                   expiry={data[i].expires} creator={data[i].creator} haveB='true' \r\n                   userId={this.props.userId} currentFor={data[i].currentfor} currentAgainst={data[i].currentagainst}/>\r\n\r\n         })\r\n\r\n     this.setState({a:1254});\r\n\r\n     \r\n     });\r\n\r\n}\r\n}\r\n\r\n starter = (database) =>{ \r\n  current = 'active';\r\n  if(blue === true){\r\n    fetch('http://localhost:3000/getMyBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: database,\r\n      expiredBets: 'false'\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n   .then(data => {\r\n\r\n  if(data.length > 0){    \r\n    for (var i = 0; i < data.length; i++) {\r\n      if(data[i].better){\r\n        if(data[i].better === this.props.userId){\r\n          data[i].side = \"for\";\r\n        }else{\r\n          data[i].side = \"against\";\r\n        } \r\n      }\r\n    }\r\n\r\n     Holder = data.map((user, i) => { \r\n           return <MyIndividaulBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\r\n                   expiry={data[i].expires} userId={this.props.creator} price={data[i].amount} email={this.props.email} \r\n                   side={data[i].side}    />\r\n\r\n         })\r\n     }\r\n\r\n     this.setState({a:1254});\r\n\r\n     \r\n     });\r\n}else{\r\n  fetch('http://localhost:3000/getPileBets', {\r\n    method: 'post',\r\n    headers: {'Content-Type': 'application/json'},\r\n    body: JSON.stringify({\r\n      userId: this.props.userId,\r\n      database: 'pilestransactions',\r\n      setting: 'starts'\r\n    })\r\n   })\r\n   .then(response => response.json())\r\n     .then(data => {\r\n\r\n  if(data.length > 0){    \r\n    for (var i = 0; i < data.length; i++) {\r\n      if(data[i].better){\r\n        if(data[i].better === this.props.userId){\r\n          data[i].side = \"for\";\r\n        }else{\r\n          data[i].side = \"against\";\r\n        } \r\n      }\r\n    }\r\n\r\n     Holder = data.map((user, i) => { \r\n           return <PileIndiBet key={i} betid={data[i].betid} name={data[i].description} amount={data[i].total}\r\n                   expiry={data[i].expires} userId={this.props.creator} price={data[i].amount} currentFor={data[i].currentfor}  \r\n                   side={data[i].side}  currentAgainst={data[i].currentagainst} haveB='nope' />\r\n\r\n         })\r\n     }\r\n\r\n     this.setState({a:1254});\r\n\r\n     \r\n     });\r\n\r\n}\r\n}\r\n\r\n\r\n\r\n\r\n activeBets = () =>{\r\n  this.starter(\"matchedbets\");\r\n }\r\n\r\n\r\nstarterP = () => {\r\n  \r\n\r\n\r\n}\r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n     <div>\r\n     <NavbarIn changeRoute={this.changeRoute} unloadUser={this.unloadUser} userId={this.props.userId}/>\r\n     <br/><br/><br/>\r\n     <h1 className=\"tc white i f1 font\">My Bets!</h1>\r\n     <br/><br/>\r\n        <Container>\r\n  \t\t\t<Row>\r\n \t\t\t   <Col className='tc f3 solidBR bg-white'>\r\n \t\t\t   \r\n\r\n        \r\n          <hr/><br/>\r\n\r\n           <ButtonToolbar className=\"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\">\r\n              \r\n                <ToggleButtonGroup\r\n                  className=\"center \"\r\n                  type=\"radio\"\r\n                  name=\"options\"\r\n                  defaultValue={1}\r\n                >\r\n\r\n                  <ToggleButton className=\"ma2\" size='lg' value={1} onClick={this.activeBets}>\r\n                    Active Bets\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" size='lg' value={2} onClick={this.expiredBets}>\r\n                    Expired\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma2\" size='lg' value={3} onClick={this.untakenPho}>\r\n                    Pending\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </ButtonToolbar> \r\n              <ButtonToolbar className=\"center mw5 mw7-ns center  pa2 ma3 ph5-ns\">\r\n              \r\n                \r\n              </ButtonToolbar>\r\n                <br/>\r\n              <ButtonToolbar className=\"center mw5 mw7-ns center bg-light-gray pa2 ma3 ph5-ns\">\r\n\r\n                <Button variant=\"outline-info\" className='center' onClick={this.grabbingBetsM}>One-on-One</Button>{' '}\r\n                 \r\n                <Button variant=\"outline-danger\" className='center' onClick={this.grabbingBetsP}>Pile-ons</Button>{' '}\r\n              </ButtonToolbar> \r\n\r\n              <br/>\r\n              <hr/>\r\n              <MyIndividaulBet name=\"Description\" side=\"Side of bet\" price=\"Amount\" expiry=\"Expiry\"/>\r\n              <br/>\r\n\r\n             {Holder}\r\n          \r\n          <ExpiredIndiBet/>\r\n \t\t\t   </Col>\r\n  \t\t\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n    <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyBets;  "]},"metadata":{},"sourceType":"module"}