{"version":3,"sources":["components/navbar/NavbarIn.js","components/IndividaulBet/MyVerticallyCenteredModal.js","components/IndividaulBet/IndividaulBet.js","components/Profile.js","components/SignInHome.js","components/MyBets.js","components/CreateConfirmModal.js","components/CreateBet.js","components/SignIn/SignIn.js","components/navbar/NavBar.js","components/signIn.js","components/Home.js","components/HowThisWorks.js","components/Fees.js","components/Register/Register.js","App.js","components/CreateAccount.js","components/BuyConfirm.js","components/MoreInfo.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","Navbar","bg","variant","Brand","href","Nav","className","Link","Form","inline","Component","MyVerticallyCenteredModal","buy","console","log","window","location","Modal","Object","assign","this","props","size","aria-labelledby","centered","Header","closeButton","Body","ID","Price","Odds","Expiry","Footer","Button","onClick","onHide","React","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","BetDiscription","modalShow","_this2","Container","Row","Col","md","name","xs","setState","IndividaulBet_MyVerticallyCenteredModal","show","Profile","CreateConfirmModal","betdiscription","price","odds","expiry","defualtwinner","BetDiscpErrer","DateErrer","OddsErrer","AmountError","ErrorSumbol","BetErr","ExpiryErr","OddsErr","AmountErr","signIn","enterPassword","newPassword","password","target","value","enterUsername","newEmail","email","check","id","htmlFor","type","onChange","stylesHolder","countryHolder","countryStyles","idStyles","idNumberMessage","FirstMSG","nameStyle","DateBirthStyle","emailStyles","passwordStyle","emailMessage","passwordMsg","currentPage","Register","Country","firstName","dateOfBirth","passwordConfirm","IdNumber","num","gender","ValidateFirst","_this$state","includes","ValidateFinal","success","_this$state2","length","toUpperCase","toLowerCase","isNaN","parseFloat","isFinite","radioChange","e","currentTarget","enterEmail","enterName","enterSurname","secondName","enterDateofBirth","dateBirth","enterconPassword","ConfirmPassWord","enterIDNum","idNum","countrys","val","first","final","country","placeholder","checked","defaultChecked","rcrs_es","defaultOptionLabel","selectCountry","App","backgroundOptions","particles","number","density","enable","value_area","requireAuth","nextState","replace","pathname","particles_default","params","react_router_dom","react_router","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f4b211f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Nav, Navbar, Form } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/Explore\">Custom Bets</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/Explore\">Explore</Nav.Link>\r\n          <Nav.Link href=\"/Create-Bet\">Create a Bet</Nav.Link>\r\n          <Nav.Link href=\"/My-Bets\">My bets</Nav.Link>\r\n          <Nav.Link href=\"/profile\">Profile</Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <Nav.Link href=\"/\">Sign out</Nav.Link>\r\n        </Form>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport {Modal, Button} from \"react-bootstrap\";\r\n\r\nclass MyVerticallyCenteredModal extends React.Component {\r\n\r\n\r\n  buy = () =>{\r\n    console.log(\"\");\r\n     window.location.href = \"/Explore\"; \r\n\r\n    }\r\n    \r\n  render() {\r\n\r\n\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          \r\n        </Modal.Header>\r\n        <Modal.Body className='tc'>\r\n          <h4 className='tc'>You are about to: </h4>\r\n          <p>\r\n            Bet that XXXX <br/>\r\n            You are betting BXXX with odds of XXX\r\n             Well you ID shoud be {this.props.ID}. The price is {this.props.Price}. The odds are \r\n             {this.props.Odds}. The Exipiry is {this.props.Expiry}\r\n          </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Cancel</Button>\r\n          <Button onClick={this.buy}>Buy!</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyVerticallyCenteredModal;","import React, { Component } from \"react\";\r\nimport { Col, Row, Container, Button} from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./bets.css\";\r\nimport MyVerticallyCenteredModal from './MyVerticallyCenteredModal';\r\n\r\nexport default class NavBar extends Component{\r\nconstructor(props) {\r\n    super();\r\n    this.state = {\r\n      ID: 111111,\r\n      Price: 0,\r\n      Odds: \"\",\r\n      Expiry:\"\",\r\n      BetDiscription:\"XXX\",\r\n      modalShow: false,\r\n\r\n    };\r\n  }\r\n  render(){\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n  return (\r\n    \r\n\r\n    <div >\r\n\r\n\r\n    \r\n\r\n      <div className='bl br tc' href=\"\">\r\n        <Container>\r\n          <Row>\r\n            <Col md className='f4 tc bt bb ma1'>{this.props.name}</Col>\r\n            <Col xs={2} className='bb bt ma1'>1:3</Col>\r\n            <Col xs={2} className='bb bt ma1'>BXX.XX</Col>\r\n            <Col xs={2} className='bb bt ma1'>01.01.2020</Col>\r\n          </Row>\r\n          <hr/>\r\n          <Row className='tc'>\r\n            <Col className='xl'>\r\n              {//<button className='ma1 blues'>More Info</button> } \r\n      }\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() =>  window.location.href = \"/Explore\" }\r\n                  className='ma1 reds tc w-20 h-20'\r\n                >\r\n                  More Info\r\n                </Button>\r\n\r\n\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={() => this.setState({ modalShow: true })}\r\n                  className='ma1 reds tc w-20 h-20'\r\n                >\r\n                  Take Bet!\r\n                </Button>\r\n\r\n                <MyVerticallyCenteredModal\r\n                  show={this.state.modalShow}\r\n                  onHide={modalClose}\r\n                  ID = {this.state.ID}\r\n                  Price = {this.state.Price}\r\n                  Odds = {this.state.Odds}\r\n                  Expiry = {this.state.Expiry}\r\n                />\r\n              \r\n\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n      </div>\r\n      <br/>\r\n    </div>\r\n  );\r\n}\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport NavbarIn from \"./navbar/NavbarIn\";\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n       {/* <NavbarIn />\r\n */}        <br />\r\n        <br />\r\n        <h1 className=\"tc i f1 font\">A complete guide to Sevens!</h1>\r\n        <br />\r\n        \r\n\r\n        <Container className='tc f3 bg-grey'>\r\n\r\n          <Row>\r\n            \r\n          <Col className='pa4 ma5 ba'>\r\n            <h3 className='i'>How does the game actualy work?</h3>\r\n            <hr/>\r\n            <br/>\r\n            <h4 className='pointer'>It is a simple maths game\r\n            where one uses their memery and fast mutiplication in order to count as high as possible \r\n            but their is a twist. In the begining you will be asked to choose a number from 3 - 9. When \r\n            counting you will not be allowed to mention this number or any number that contains this number. \r\n            </h4> \r\n            \r\n          </Col>       \r\n\r\n            <Col className='pa4 ma5 ba'>\r\n            <h3 className='i'>How to improve my score?</h3>\r\n            <hr/>\r\n            <br/>\r\n            <h4 className='pointer'>One of the best ways to improve your\r\n            score is to use numbers you are more familiar with. As an eight is given\r\n            as much weight as a seven, lower number can often five you higher scores. In the\r\n            end the best way to win is to preactise the hardest.\r\n            </h4> \r\n          </Col>\r\n          </Row>\r\n              \r\n          <Row>\r\n          <Col className='pa4 ma5 ba'>\r\n            <h3 className='i'>How does ranking work?</h3>\r\n            <hr/>\r\n            <br/>\r\n            <h4 className='pointer'>Ranking works complty off your high score. It is merely an ordered list\r\n            of the users with the highest high scores. Look above about how to get your score higher. \r\n            </h4>  \r\n            \r\n          </Col>\r\n          <Col className='pa4 ma5 ba'>\r\n            <h3 className='i'>Terms and conditions</h3>\r\n            <hr/>\r\n            <br/>\r\n            <h4 className='pointer'>Whenever a user creates an account they have to agree to our \r\n            terms and conditions. This basically cover us incase our game is too fun and the user\r\n            gets cannot play another game. Or if our game makes the user too smart for their own good. \r\n            Also they have to take pity on an idea that would have been a really cool month long project, \r\n            done in a fraction of the time needed. \r\n\r\n            </h4> \r\n          </Col>    \r\n          </Row>\r\n        \r\n        </Container>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport {Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup} from \"react-bootstrap\";\r\nimport NavbarIn from \"./navbar/NavbarIn\";\r\nimport IndividaulBet from \"./IndividaulBet/IndividaulBet\";\r\n\r\nclass SignInHome extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <NavbarIn />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h1 className=\"tc white i f1 font\">Explore Open Bets!</h1>\r\n        <br />\r\n        <br />\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"tc f3 solidBR\">\r\n              How should we order all open Bets?\r\n              <ButtonToolbar className=\"center mw5 mw7-ns center bg-light-gray pa3 ph5-ns\">\r\n                <ToggleButtonGroup\r\n                  className=\"center \"\r\n                  type=\"radio\"\r\n                  name=\"options\"\r\n                  defaultValue={1}\r\n                >\r\n\r\n                  <ToggleButton className=\"ma3\" value={1}>\r\n                    Most Popular\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma3\" value={2}>\r\n                    Highest odds\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma3\" value={3}>\r\n                    Highest Wager\r\n                  </ToggleButton>\r\n                  <ToggleButton className=\"ma3\" value={4}>\r\n                    Lowest Wager\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </ButtonToolbar> \r\n\r\n            \r\n              <br />\r\n              <hr />\r\n              <br/> \r\n              <div className='tc'>\r\n                <Container>\r\n                  <Row>\r\n                    <Col md className='f4 tc bl ma1'>A short descripton of bet</Col>\r\n                    <Col xs={2} className='ma1'>The Odds</Col>\r\n                    <Col xs={2} className=' ma1'>Amount (in B)</Col>\r\n                    <Col xs={2} className='br ma1'>End date</Col>\r\n                  </Row>   \r\n                </Container>\r\n              </div>\r\n              <hr/>\r\n              \r\n              <IndividaulBet name={\"I bet that Ramaposa is an Alien\"} />\r\n              <IndividaulBet name={\"I bet the Mac Miller faked his death\"} />\r\n              <IndividaulBet name={\"I bet that Micheal Obama is \"} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignInHome;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, ButtonToolbar, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\r\nimport NavbarIn from './navbar/NavbarIn'\r\nimport IndividaulBet from './IndividaulBet/IndividaulBet';\r\nclass MyBets extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n    \r\n\r\n  };\r\n}\r\n\r\n  render() {\r\n    return (\r\n     <div>\r\n     <NavbarIn/>\r\n     <br/><br/><br/>\r\n     <h1 className=\"tc white i grow f1 font\">My Bets!</h1>\r\n     <br/><br/>\r\n        <Container>\r\n  \t\t\t<Row>\r\n \t\t\t   <Col className='tc f3 solidBR bg-white'>\r\n \t\t\t   Hw shall we order all open Bets? \r\n\r\n         <ButtonToolbar className='center mw5 mw7-ns center bg-light-gray pa3 ph5-ns'>\r\n            <ToggleButtonGroup className='center ' type=\"radio\" name=\"options\" defaultValue={1}>\r\n                <ToggleButton className='ma3' value={1}>Most Popular</ToggleButton>\r\n                <ToggleButton className='ma3' value={2}>Highest odds</ToggleButton>\r\n                <ToggleButton className='ma3' value={3}>Highest Wager</ToggleButton>\r\n                <ToggleButton className='ma3' value={4}>Lowest Wager</ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </ButtonToolbar>\r\n          <hr/><br/>\r\n          <IndividaulBet name={\"I bet that Ramaposa is an Alien\"}/>\r\n           <IndividaulBet name={\"I bet the Mac Miller faked his death\"}/> \r\n           <IndividaulBet name={\"I bet that Micheal Obama is \"}/>\r\n\r\n \t\t\t   </Col>\r\n  \t\t\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyBets;  ","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport {Modal, Button} from \"react-bootstrap\";\r\n\r\nclass CreateConfirmModal extends React.Component {\r\n\r\n\r\n  buy = () =>{\r\n    console.log(\"\");\r\n     window.location.href = \"/Explore\"; \r\n\r\n    }\r\n    \r\n  render() {\r\n\r\n\r\n    return ( \r\n      <Modal\r\n        {...this.props}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          \r\n        </Modal.Header>\r\n        <Modal.Body className='tc ma3'>\r\n          <h4 className='tc'>Are you sure you want to create and take the bet: </h4>\r\n          <p>\r\n            Are you sure you want to bet {this.props.betdiscription}.\r\n            You will bet B{this.props.price}, at the odds of {this.props.odds}.\r\n            This bet will expire on {this.props.expiry} and the default winner will be {this.props.defualtwinner}.\r\n            \r\n            </p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button onClick={this.props.onHide}>Cancel</Button>\r\n          <Button onClick={this.buy}>Buy!</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CreateConfirmModal;","import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Button, InputGroup, FormControl,Form } from \"react-bootstrap\";\r\nimport NavbarIn from './navbar/NavbarIn'\r\nimport \"./Register/Register.css\";\r\nimport CreateConfirmModal from './CreateConfirmModal';\r\n\r\nlet BetDiscpErrer = \"\";\r\nlet DateErrer = \"\";\r\nlet OddsErrer = \"\";\r\nlet AmountError = \"\";\r\n\r\nlet ErrorSumbol = \"•\";\r\n\r\nlet BetErr = \"\";\r\nlet ExpiryErr = \"\";\r\nlet OddsErr = \"\";\r\nlet AmountErr = \"\";\r\n\r\nclass CreateBet extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = { \r\n      Choice: 1,\r\n      daySet:\"0\", \r\n      MonthSet:\"0\",\r\n      YearSet:\"0\",\r\n      betDiscription:\" \",\r\n      BetLenghth:0,\r\n      ExpiryChoice:\" \",\r\n      modalShow: false,\r\n      ProOdds:0,\r\n      AntiOdds:0,\r\n      ID:\"Aj12\",\r\n      Amount:0\r\n\r\n    };\r\n\r\n  }\r\n\r\n\r\n  SubmitChecker = () => {\r\n    let {Amount, daySet, MonthSet, YearSet, BetLenghth, ProOdds, AntiOdds} = this.state;\r\n    let runner = true;\r\n\r\n    if(BetLenghth > 244){\r\n      BetDiscpErrer = \"Your Bet is too long! Please keep it below 244 charactors.\";\r\n    }\r\n\r\n\r\n    if(BetLenghth === 0){\r\n        BetDiscpErrer = \"Please do not leave this blank.\"; \r\n      }\r\n\r\n    if(BetLenghth !== 0 && BetLenghth < 244){\r\n      BetDiscpErrer = \"\";\r\n      BetErr = \"\";\r\n    }else{\r\n      runner = false;\r\n      BetErr = ErrorSumbol;\r\n\r\n    }\r\n\r\n    if(daySet === \"0\" && MonthSet === \"0\" && YearSet === \"0\"){\r\n      DateErrer = \"Please make sure all boxes are filled.\";\r\n      runner = false;\r\n      ExpiryErr = ErrorSumbol;\r\n    }\r\n    if(daySet !== \"0\" && MonthSet !== \"0\" && YearSet !== \"0\"){\r\n      DateErrer = \"\";  \r\n      ExpiryErr = \"\";\r\n    }\r\n\r\n    if((ProOdds === 0 && AntiOdds === 0) || isNaN(ProOdds) || isNaN(AntiOdds)){\r\n      runner = false;\r\n      OddsErrer = \"Please make sure all the fields are filled with numbers.\"\r\n      OddsErr = ErrorSumbol;\r\n    }else{\r\n      OddsErrer = \"\";\r\n      OddsErrer = \"\";\r\n    }\r\n\r\n    if(Amount === 0 || isNaN(Amount) ){\r\n      runner = false;\r\n      AmountError = \"Please enter a number here.\";\r\n      AmountErr = ErrorSumbol;  \r\n    }else{\r\n      AmountError = \"\";\r\n      AmountErr = \"\";\r\n    }\r\n\r\n    if(runner === true){\r\n      this.setState({ modalShow: true })\r\n    }\r\n  \r\n    this.setState({test: \"A\"});\r\n  }\r\n\r\n\r\n  handleChangeBet = (e) => {\r\n    let {n, value} = e.target;\r\n    if(n === 0){\r\n\r\n    }\r\n    if(value !== \" \"){\r\n      this.setState({BetLenghth: value.length});\r\n\r\n      this.setState({betDiscription: value});\r\n      } \r\n    }\r\n\r\n  handleChangeOdsPro = (e) => {\r\n     let {n, value} = e.target;\r\n    if(n === 0){\r\n\r\n    }\r\n    if(!value.includes(\" \")){\r\n        this.setState({ProOdds: value});\r\n      }\r\n  }\r\n\r\n  handleChangeAntiPro = (e) => {\r\n     let {n, value} = e.target;\r\n    if(n === 0){\r\n\r\n    }\r\n    if(!value.includes(\" \")){\r\n      this.setState({AntiOdds: value});\r\n    }\r\n  }\r\n\r\n  handleChangeAmount = (e) => {\r\n     let {n, value} = e.target;\r\n    if(n === 0){\r\n\r\n    }\r\n     if(!value.includes(\" \")){\r\n      this.setState({Amount: value});\r\n    }\r\n  }\r\n\r\n  handleChangeDay = (e) => {\r\n    let {n, value} = e.target;\r\n    if(n === 0){\r\n\r\n    }\r\n    this.setState({daySet: value});\r\n  }\r\n\r\n  handleChangeMonth = (e) => {\r\n    let {n, value} = e.target;\r\n    if(n === 0){\r\n\r\n    }\r\n    this.setState({MonthSet: value});\r\n  }\r\n\r\n  handleChangeYear = (e) => {\r\n    let {n, value} = e.target;\r\n    if(n === 0){\r\n\r\n    }\r\n    this.setState({YearSet: value});\r\n  }\r\n\r\n  render() {\r\n    //let date = new Date();\r\n    let modalClose = () => this.setState({ modalShow: false });\r\n    \r\n    return (\r\n     <div>\r\n     <NavbarIn/>\r\n     <br/><br/><br/>\r\n     <h1 className=\"tc white i f1 font\">Create a bet!</h1>\r\n     <br/><br/>\r\n     <Container>\r\n     <Row>\r\n     <Col className='f4 solidBR bg-white'>\r\n     <br/>\r\n     <Container className='tc'>\r\n     <Row>\r\n     <Col>\r\n      So you're ready to make your own bet? Just some things to keep in mind, make your bet as\r\n       simple and concise as possible. You only have 400 charactors. Make it simple. Goodluck! \r\n       Ps. as ussual there will be more info at the bottom.\r\n     </Col>\r\n     </Row>\r\n     <br/>\r\n     <hr/>\r\n     <br/>\r\n     <h3 className='tl'>I Bet that <b className='red'>{BetErr}</b></h3>\r\n     <div className='tl'>\r\n         <InputGroup className=\"mb-3 sm  \">\r\n            <FormControl onChange={this.handleChangeBet} aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\"/>\r\n         </InputGroup>\r\n         <div className='red'>{BetDiscpErrer}</div>\r\n\r\n\r\n\r\n         <br/>\r\n         <br/>\r\n         Bet Expires on: <b className = 'red f3'> {ExpiryErr} </b>\r\n         <Form>\r\n         <Form.Row>\r\n         <Form.Group as={Col} controlId=\"formGridState\">\r\n         <Form.Label>DD</Form.Label>\r\n         <Form.Control className='invalid' as=\"select\" onChange={this.handleChangeDay}>\r\n         <option>Choose...</option>\r\n         <option>1</option><option>2</option><option>3</option><option>4</option><option>5</option>\r\n         <option>6</option><option>7</option><option>8</option><option>9</option><option>10</option>\r\n         <option>11</option><option>12</option><option>13</option><option>14</option><option>15</option>\r\n         <option>16</option><option>17</option><option>18</option><option>19</option><option>20</option>\r\n         <option>21</option><option>22</option><option>23</option><option>24</option><option>25</option>\r\n         <option>26</option><option>27</option><option>28</option><option>29</option><option>26</option>\r\n         <option>31</option>\r\n         </Form.Control>\r\n         </Form.Group>\r\n\r\n     <Form.Group as={Col} controlId=\"formGridState\" >\r\n     <Form.Label>MM</Form.Label>\r\n     <Form.Control as=\"select\" onChange={this.handleChangeMonth} placeholder={\"a\"}>\r\n     <option>Choose...</option>\r\n     <option>1</option><option>2</option><option>3</option><option>4</option><option>5</option>\r\n     <option>6</option><option>7</option><option>8</option><option>9</option><option>10</option>\r\n     <option>11</option><option>12</option>\r\n     </Form.Control>\r\n     </Form.Group>\r\n\r\n     <Form.Group as={Col} controlId=\"formGridState\">\r\n     <Form.Label>YYYY</Form.Label>\r\n     <Form.Control as=\"select\" onChange={this.handleChangeYear}>\r\n     <option>Choose...</option>\r\n     <option>2019</option><option>2020</option><option>2021</option>\r\n     <option>2022</option><option>2023</option><option>2024</option>\r\n     <option>2025</option><option>2026</option><option>2027</option>\r\n     <option>2028</option><option>2029</option>\r\n     </Form.Control>\r\n     </Form.Group>\r\n     aaaaaaaaaaaaaaaaaa\r\n     </Form.Row>\r\n     <div className='red'>{DateErrer}</div>\r\n     <br/>\r\n        <fieldset>\r\n      <Form.Group as={Row}>\r\n        <Form.Label as=\"legend\" column sm={2}>\r\n          On bet Expiry, the winner is:\r\n        </Form.Label>\r\n        <Col sm={10} className='bl'>\r\n          <Form.Check\r\n          inline\r\n          defaultChecked \r\n            type=\"radio\"\r\n            label=\"The Bet Creator\"\r\n            name=\"formHorizontalRadios\"\r\n            id=\"formHorizontalRadios1\"\r\n            onChange={() => this.setState({ExpiryChoice:\"The bet Creater\"})}\r\n          />\r\n          <br/>\r\n          <Form.Check\r\n          inline\r\n            type=\"radio\"\r\n            label=\"Those who Bet against the Creator\"\r\n            name=\"formHorizontalRadios\"\r\n            id=\"formHorizontalRadios2\"\r\n            onChange={() => this.setState({ExpiryChoice:\"The opposition\"})}\r\n          />\r\n          <br/>\r\n          <Form.Check\r\n          inline\r\n            type=\"radio\"\r\n            label=\"It's a draw (both Refunded)\"\r\n            name=\"formHorizontalRadios\"\r\n            id=\"formHorizontalRadios3\"\r\n            onChange={() => this.setState({ExpiryChoice:\"It's a draw\"})}\r\n          />\r\n\r\n        </Col>\r\n\r\n      </Form.Group>\r\n    </fieldset>\r\n    <br/>\r\n    </Form>  \r\n    \r\n     </div>\r\n\r\n     <Container className='tl'>\r\n      <Row>\r\n        <Col >  The odds of the bet are <b className='red f3'>{OddsErr}</b> </Col>\r\n       \r\n      </Row>\r\n      <Row>\r\n        <Col>Fun fact, you can never lose money by winning a bet, \r\n            no matter the odds. There is a full descriptoin below.</Col>\r\n      </Row>\r\n      <br/>\r\n      <Row>\r\n        <Col>The odds of you, on the Positive side are:</Col>\r\n        <Col>\r\n          <InputGroup className=\"mb-3 sm\">\r\n            <FormControl size=\"lg\" onChange={this.handleChangeOdsPro} aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\"/>\r\n          </InputGroup>\r\n          </Col>\r\n        <div className='f3'>:</div>\r\n        <Col><InputGroup className=\"mb-3 sm\">\r\n            <FormControl size=\"lg\" onChange={this.handleChangeAntiPro} aria-label=\"Default\" aria-describedby=\"inputGroup-sizing-default\"/>\r\n            </InputGroup>\r\n          </Col>\r\n\r\n        <Col>The odds of the other person, the negetive</Col>\r\n       \r\n      </Row>\r\n\r\n    </Container>\r\n    <div className='red'>{OddsErrer}</div>\r\n     <br/>\r\n     <br/>\r\n\r\n          <Form>\r\n  <Form.Row>\r\n    <Col>\r\n      The Amount you want to bet is: <b className='red f3'> {AmountErr}</b>\r\n    </Col>\r\n    <Col className=''>\r\n      <Form.Control onChange={this.handleChangeAmount} placeholder=\"B\" />\r\n    </Col>\r\n  </Form.Row>\r\n\r\n</Form>\r\n<div className='red'>{AmountError}</div> \r\n         \r\n     <br/>\r\n     <br/>\r\n      <h1>\r\n      <Button variant=\"outline-secondary\" size='lg' block onClick={this.SubmitChecker}>Create Bet!</Button>\r\n\r\n      </h1>\r\n\r\n      <CreateConfirmModal\r\n                  show={this.state.modalShow}\r\n                  onHide={modalClose}\r\n                  id = {this.state.ID}\r\n                  price = {this.state.Amount}\r\n                  odds ={this.state.ProOdds.toString() + \":\" + this.state.AntiOdds}  \r\n                  expiry = {this.state.daySet + \"/\" + this.state.MonthSet + \"/\" + this.state.YearSet}\r\n                  betdiscription = {this.state.betDiscription}\r\n                  defualtwinner = {this.state.ExpiryChoice}\r\n                />\r\n      \r\n      <a className='f6 black bt bb pa1' href=\"/\">Our Terms of Service and stuff</a>   \r\n     <br/>\r\n \r\n     <hr/>\r\n     <br/>\r\n     <Row>\r\n     <Col className='tl f5'>Okay, heres the deal... \r\n     <br/>\r\n     - For starters, every bet has an expiry date, it may be in days or months. The bet creater will\r\n      decide if reaching the expiry date means one side wins or if the bet simple dissapears and\r\n       both sides are reembursed. <br/>\r\n      - The Bet Discirption is what the person who will take up the bet will see. A person will\r\n       be able to take this pet on the positive (betting on the statement entered) or negetive\r\n        side (betting against the statement.) <br/>\r\n      - The odds are supposed to be simple. Think of it as pot. Each side will put a certain Amount \r\n       of Bs into the pot and the winner gets the entire pot. The Odds are simply the ratio you'll \r\n        need to put in against the other person. <br/>\r\n      - By clicking \"Create Bet!\" you are not only agreeing to our terms of service, but also taking \r\n       up the positive side of the bet you just created. \r\n     </Col>\r\n     </Row>\r\n     </Container>\r\n\r\n     <br/>\r\n\r\n\r\n     </Col>\r\n\r\n     </Row>\r\n     </Container>\r\n     <br/>\r\n\r\n     </div>\r\n     );\r\n  }\r\n}\r\n\r\nexport default CreateBet;  ","import React from \"react\";\r\nimport \"./SignIn.css\";\r\nclass signIn extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      email:' ',\r\n      password: ' '\r\n\r\n    };\r\n  }\r\n  \r\n\r\n  enterPassword = (newPassword) =>{\r\n      this.setState({password: newPassword.target.value});\r\n  }\r\n\r\n  enterUsername = (newEmail) =>{\r\n      this.setState({email: newEmail.target.value});\r\n  }\r\n  check = () => {\r\n    //Will be a full check with the data base.\r\n    if(true){\r\n      window.location.href = \"/Explore\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mw5 mw7-ns center br5 black\">\r\n        <br />\r\n        <br />\r\n\r\n        <article className=\"br3 ba --black-10 w-100 w-100-m center shadow-5 solidBR\">\r\n          <main className=\"pa4 black-80 tc\">\r\n            <div className=\"\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black  w-100\"\r\n                    type=\"email\"\r\n                    name=\"email-address\"\r\n                    id=\"email-address\"\r\n                    onChange={this.enterUsername}\r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label \r\n                   className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black w-100\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    onChange={this.enterPassword}\r\n                  />\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"\">\r\n                <button \r\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                  type=\"submit\"\r\n                  onClick={this.check}\r\n                  >\r\n                  Sign in\r\n                </button>\r\n              </div>\r\n              <div className=\"lh-copy mt3\">\r\n                <a\r\n                  href='/Create-Account'\r\n\r\n                  className=\"f6 link dim black db pointer\">\r\n                  Create an Account\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default signIn;\r\n","import React, { Component } from \"react\";\r\nimport { Nav, Navbar, Form } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nexport default class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">Custom Bets</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/\">Home</Nav.Link>\r\n          <Nav.Link href=\"/howWeWork\">How does this work</Nav.Link>\r\n          <Nav.Link href=\"/Our-Fees\">Our fees</Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <Nav.Link href=\"/sign-In\">Sign In/Create Account</Nav.Link>\r\n        </Form>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport SignIn from \"./SignIn/SignIn\";\r\nimport NavBar from \"./navbar/NavBar\";\r\n\r\nclass signIn extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      onCreateAccount: false,\r\n    \r\n  \r\n\r\n  };\r\n}\r\n \r\n\r\n  render() {\r\n    let current;\r\n      current = <SignIn handleSwitch={this.handleSwitch} />;\r\n    \r\n    return <div>\r\n    <NavBar/>\r\n     {current}</div>;\r\n  }\r\n}\r\n\r\nexport default signIn;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport SignIn from \"./SignIn/SignIn\";\r\nimport \"./SignIn/SignIn.css\";\r\nimport \"./pages.css\";\r\nimport NavBar from \"./navbar/NavBar\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n\r\n        <div className=\"tc\">\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <h1 className=\"tc white i f1 font\">Welcome to Custome Bets</h1>\r\n          \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <br />\r\n          <br />\r\n          <Container>\r\n            <Row>\r\n              <Col className=\"tc f3 solidBR\">\r\n                What is Custom bets? <hr />\r\n                <p className=\"tl f4\">\r\n                  Custom Bets is the first ever online casino where the bets,\r\n                  odds and time period depends on you. Think that we'll land on\r\n                  Mars before Man United wins a Premier League championship?\r\n                  Make a bet! We post all the bets for anybody to see and take\r\n                  either side! Or do you just want to look for a riduculous bet\r\n                  to take up and make some real money? Just browse our current\r\n                  bets. You can bet as little as 1$! And you're not betting\r\n                  against the house! You are betting other peole, just like you!\r\n                  There is always a winner! Why not have fun in the porcess?\r\n                </p>\r\n              </Col>\r\n              <Col>\r\n                {\" \"}\r\n                <SignIn />{\" \"}\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <br/>\r\n          <br/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport NavBar from \"./navbar/NavBar\";\r\nimport \"./pages.css\";\r\nclass HowThisWorks extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n        <div className=\"tc\">\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <h1 className=\"tc white i f1 font\">\r\n            Wait, so how does this really work?\r\n          </h1>\r\n          <br />\r\n          <br />\r\n          <Container className=\"tc f3 solidBR\">\r\n            <Row>\r\n              <Col>\r\n                <h3 className='pa3 i f2'>Wait, so what are we really?  </h3>\r\n                <hr />\r\n                <p className=\" f4\">\r\n                  Okay, Costume bets is a betting service that facilitates any type of bet.\r\n                  We do this not by simply oppsing any bet but by matching people who have different\r\n                  opinions on a particualr topic.  <hr />\r\n                 </p>\r\n              </Col>\r\n            </Row>\r\n            <h3 className='pa3 i f2'>More info And FAQs</h3>\r\n          <Row>\r\n          <Col className='pa4 ma5 ba'>\r\n            <h3 className='i'>Who Decides The Winner?</h3>\r\n            <hr/>\r\n            <br/>\r\n            <p>We use a three person system, where any two out of the\r\n            folowing are needed to end the bet and authorize the payout. It can be the person\r\n             on the postive side if the bet, the person on the negetive side or our adminsistartion.</p>  \r\n            \r\n          </Col>\r\n          <Col className='pa4 ma5 ba'>\r\n            <h3 className='i'>How do our odds work? </h3>\r\n            <hr/>\r\n            <br/>\r\n            <p>Whoever creates the bet will decide the odds associated with\r\n            specific bet. All odds are phrases Number:Number ie 1:2. The numbers indicate the \r\n            ratio of the amount each side will put forward. The bet winner wins the entire sum. </p> \r\n          </Col>    \r\n          </Row>\r\n          <Row>\r\n          <Col className='pa4 ma5 ba'>\r\n            <h3 className='i'>Regulation</h3>\r\n            <hr/>\r\n            <br/>\r\n            <p>\r\n              We prefer to keep our intervention to a minimum, and thus do not regulate odds or \r\n              amounts per bet. However if we feel a bet is offensive we will intervin. We will also\r\n              answer all queries of the winner. If there is a clear winner we'll award the bet to \r\n              that side. However if it is unclear, bot sides will be refunded.\r\n            </p>  \r\n            \r\n          </Col>\r\n          <Col className='pa4 ma5 ba'>\r\n            <h3 className='i'>Blank</h3>\r\n            <hr/>\r\n            <br/>\r\n            <p>Lorem  Ipsum </p> \r\n          </Col>    \r\n          </Row>\r\n          </Container>\r\n        </div>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HowThisWorks;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"./pages.css\";\r\nimport NavBar from \"./navbar/NavBar\";\r\n\r\nclass Fees extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  callCur = () =>{\r\n    \r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar />\r\n        <div className=\"tc \">\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <h1 className=\"tc white i f1 font\">Lets talk about fees</h1>\r\n          <br />\r\n          <br />\r\n          <Container className=\"tc f3 solidBR\">\r\n            <Row>\r\n              <Col className=\"tc f3 solidBR\">\r\n                We want to be as transparent as possible <hr />\r\n                <p className=\"f4\">\r\n                  We try to make our costs as simple as possible. We have made our own currency in order to make\r\n                  betting with people all over the world super simple. Our exange rates are updated reguarly.\r\n                  WE charge a 5% conversion fee when you put in or take out money. We also charge a 5% fee on any bet won.\r\n                  <br />\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className='ma3 br bl'>\r\n                Genereal Fees <hr />\r\n                <p className=\"tl f4\">\r\n                  - We charge a 5% conversion fee when you put in or take out money. <br/>\r\n                  - We charge a 5% fee on any bet won.\r\n                  <br />\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className='ma3 br bl'>\r\n                Extra Ordinary Fees <hr />\r\n                <p className=\"tl f4\">\r\n                  - We charge a 10% Query fee. <br/>\r\n                  - We charge a 10% fee unresolved bets.\r\n                  <br />\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n        <br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fees;\r\n","import React, { Component } from \"react\";\r\nimport { CountryDropdown} from 'react-country-region-selector';\r\nimport \"./Register.css\";\r\n//Okay, this is quite messy, but here I go\r\n\r\n//For the states, i think we'll need to save all of the users\r\n//inputed data in this state. I havent done it yet\r\nlet stylesHolder = 'pa2 input-reset ba bg-transparent hover-bg-black w-100';\r\nlet countryHolder = 'Please select a country'; \r\nlet countryStyles = \" \";\r\nlet idStyles = \"\";\r\nlet idNumberMessage = \"\";\r\nlet FirstMSG = '';\r\nlet nameStyle = stylesHolder;\r\nlet DateBirthStyle =stylesHolder;\r\n\r\nlet emailStyles = stylesHolder;\r\nlet passwordStyle = stylesHolder;\r\n  \r\n let emailMessage = '';\r\n let passwordMsg ='';\r\n let currentPage = 1;\r\n\r\n  class Register extends Component {\r\n\r\n  state = {\r\n    Country:'',\r\n    \r\n    firstName:'',\r\n    dateOfBirth: '',//Time.now,\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n\r\n    IdNumber: '',\r\n    num:'', \r\n    gender: 'Female'\r\n  }\r\n\r\n\r\n//This just stores in state the country they are from\r\n \r\n\r\nValidateFirst = () => {\r\n  let {firstName, dateOfBirth, email} = this.state;\r\n\r\n  if(firstName === ''){\r\n    \r\n    \r\n    nameStyle += '  invalidbw1';\r\n    FirstMSG = 'Please note all fields are required';\r\n     \r\n  }\r\n\r\n  if(dateOfBirth === ''){\r\n      DateBirthStyle += ' invalid bw1';\r\n      FirstMSG = 'Please note all fields are required';\r\n     \r\n\r\n  }\r\n  if(firstName !== \"\"){\r\n    nameStyle = \"pa2 input-reset ba bg-transparent hover-bg-black w-100\";\r\n  }\r\n  if(dateOfBirth !== \"\"){\r\n      DateBirthStyle =\"pa2 input-reset ba bg-transparent hover-bg-black w-100\";\r\n  }\r\n \r\n\r\n  \r\n   if(email === ''){\r\n      emailStyles += \" invalid bw1 \";\r\n    }\r\n\r\n    if(!email.includes('.') || !email.includes('@')){\r\n        emailStyles += \" invalid bw1 \";\r\n        emailMessage = \"Please enter a valid email adress\";\r\n        \r\n    }else{\r\n       emailStyles = stylesHolder;\r\n      emailMessage = \"\";\r\n    }\r\n\r\n    if(firstName !== \"\" && dateOfBirth !== \"\"\r\n      && email.includes('.') && email.includes('@')){\r\n        currentPage = 2;\r\n        FirstMSG = '';\r\n      }\r\n\r\n\r\n    this.setState({num: 'a'});\r\n\r\n\r\n}\r\n\r\n\r\n\r\nValidateFinal = () => {\r\n  let success = true;\r\n  let {Country, password, passwordConfirm, IdNumber} = this.state;\r\n  \r\n  if(password === ''){\r\n    passwordStyle += \" invalid bw1 \";\r\n    success = false;\r\n  }  \r\n  if(passwordConfirm === ''){\r\n    passwordStyle += \" invalid bw1 \";\r\n    success = false;\r\n  } \r\n\r\n  if(IdNumber === ''){\r\n    idStyles = \" invalid bw1\";\r\n    idNumberMessage = \"Please enter a valid Idenitifaction Number\";\r\n    success = false;\r\n  }else{\r\n    idStyles = \"\";\r\n    idNumberMessage =\"\";\r\n  }\r\n \r\n  \r\n  if(Country === ''){\r\n    countryStyles = \" invalid bw1 \";\r\n    success = false;\r\n  }else{\r\n    countryStyles = \" black \";     \r\n  }\r\n       \r\n  \r\n\r\n\r\n  if (password.length < 8 || password.toUpperCase() === password || password.toLowerCase()\r\n          === password || (isNaN(parseFloat(password)) && isFinite(password))){\r\n          passwordMsg = 'Please chose a valid password. Check below for our password guidlines.';\r\n          success = false;\r\n        }else{\r\n          if(password === passwordConfirm){\r\n            passwordMsg = '';\r\n            passwordStyle = stylesHolder;\r\n           }\r\n           else{\r\n              passwordMsg = 'Please make sure the passwords match';\r\n              success = false;\r\n           }\r\n        }\r\n         this.setState({num: 'a'});\r\n\r\n      if(success){\r\n        window.location.href = \"/Explore\";\r\n      }\r\n  }\r\n        \r\n     \r\nradioChange = (e) =>{\r\n    this.setState({\r\n      gender: e.currentTarget.value\r\n    });\r\n  }\r\n\r\nenterEmail = (newEmail) =>{\r\n      this.setState({email: newEmail.target.value});\r\n\r\n  }\r\n\r\n  enterPassword = (newPassword) =>{\r\n      this.setState({password: newPassword.target.value});\r\n  }\r\n\r\n  \r\n\r\n  enterName = (name) =>{\r\n      this.setState({firstName: name.target.value});\r\n      \r\n  }\r\n\r\n  enterSurname = (secondName) =>{\r\n      this.setState({secondName: secondName.target.value});\r\n      console.log(secondName.target.value);\r\n    }\r\n\r\n  enterDateofBirth = (dateBirth) =>{\r\n      this.setState({dateOfBirth: dateBirth.target.value});\r\n  }\r\n\r\n  enterconPassword = (ConfirmPassWord) =>{\r\n      this.setState({passwordConfirm: ConfirmPassWord.target.value});\r\n  }\r\n   selectCountry (val) {\r\n    \r\n    this.setState({ Country: val });\r\n    countryHolder = val;\r\n  }\r\n\r\n  enterIDNum = (idNum) =>{\r\n      this.setState({IdNumber:idNum});      \r\n  }\r\n\r\n  enterUsername = (countrys) =>{\r\n      this.setState({Country: countrys.target.value});\r\n  }\r\n\r\n  render() {\r\n    //Just making variables for each state, so i dont have to \r\n    //say this.state every time\r\n    const {country} = this.state;\r\n\r\n\r\n\r\n \r\n\r\n    //Okay, so I am making an condition. If we are on first page of\r\n    //create account then show this part of the form\r\n  \r\n   \r\n    let first;\r\n    let final;\r\n\r\n\r\n    if(currentPage === 1){\r\n      first = <div>\r\n\r\n              <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\">Full Name</label>\r\n                        <input \r\n                        placeholder=\"IE John Smith\"\r\n                        type='name'\r\n                        onChange={this.enterName}\r\n\r\n                        className={nameStyle}/>\r\n\r\n              </div>\r\n             \r\n                  \r\n                <div className=\"mt3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Date of Birth</label>\r\n                      <input\r\n                            onChange={this.enterDateofBirth}\r\n                            type=\"date\"\r\n                            placeholder='YYYY/MM/DD'\r\n                            className={DateBirthStyle}\r\n                      />\r\n              \r\n                </div>\r\n\r\n                 <div className=\"mt3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Email Adress</label>\r\n                      <input \r\n                          onChange={this.enterEmail}\r\n                           className={emailStyles} \r\n                           placeholder = \"Example@gmail.com\"\r\n                      />\r\n                      {emailMessage}\r\n                    </div>\r\n                <br/>\r\n\r\n\r\n                <div className=\"mt3 tl br2 ba pa3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Gender</label>\r\n                        <input type=\"radio\"\r\n                          value=\"Male\"\r\n                          checked={this.state.gender === \"Male\"}\r\n                          onChange={this.radioChange}\r\n                          defaultChecked\r\n                        />Male\r\n                  <br/>\r\n\r\n                        <input type=\"radio\"\r\n                          value=\"Female\"\r\n                          checked={this.state.gender === \"Female\"}\r\n                          onChange={this.radioChange}\r\n                          />Female\r\n\r\n                          <br/>\r\n\r\n                        <input type=\"radio\"\r\n                          value=\"Other\"\r\n                          checked={this.state.gender === \"Other\"}\r\n                          onChange={this.radioChange}\r\n                          />Other\r\n\r\n                          <br/>\r\n\r\n                        <input type=\"radio\"\r\n                          value=\"Rather\"\r\n                          checked={this.state.gender === \"Rather\"}\r\n                          onChange={this.radioChange}\r\n                          />Rather not say\r\n                  </div>\r\n\r\n                \r\n                    <h5><i>{FirstMSG}</i></h5>\r\n                    <br/>\r\n\r\n\r\n                  \r\n        \r\n\r\n                    <input\r\n                          onClick={this.ValidateFirst}\r\n                          className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                          type=\"submit\"\r\n                          value=\"Next\"\r\n                        />\r\n            </div>\r\n\r\n            final = <div></div>\r\n}else{\r\n\r\n  first= <div></div>\r\n            final = <div>\r\n              \r\n                 \r\n\r\n                    <div className=\"mv3\">\r\n                      <label className=\"db fw6 lh-copy f6\">Password</label>\r\n                      <input type=\"password\"\r\n                        onChange={this.enterPassword}\r\n                        className={passwordStyle}/>\r\n                        {passwordMsg}\r\n                      </div>\r\n\r\n                      <div className=\"mv3\">\r\n                       <label className=\"db fw6 lh-copy f6\">Confirm Password</label>\r\n                        <input type=\"password\"\r\n                        onChange={this.enterconPassword}\r\n                          className={passwordStyle} />\r\n                      </div>\r\n                        <div className=\"mt3\">\r\n                          <label className=\"db fw6 lh-copy f6\">Country of Residence</label>\r\n                          <CountryDropdown\r\n                          defaultOptionLabel= {countryHolder}\r\n                            value={\"country\"}\r\n                            className={countryStyles}\r\n                            onChange={(val) => this.selectCountry(val)} />\r\n                      </div>\r\n\r\n                      <div className=\"mt3\">\r\n                          <label className=\"db fw6 lh-copy f6\">{country} Idenitifaction Number</label>\r\n                          <input \r\n                          type='text'\r\n                          className={idStyles}\r\n                          onChange={this.enterIDNum}\r\n                         />\r\n                         <br/>\r\n                         {idNumberMessage}\r\n                      </div>\r\n\r\n                      <div className=\"mt3\">\r\n                        <input\r\n                          onClick={this.ValidateFinal}\r\n                          className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                          type=\"submit\"\r\n                          value=\"Create Account!\"\r\n                        />\r\n                      </div>\r\n\r\n                      <br/>\r\n                      <hr/>\r\n                      <br/>\r\n                      <div className='br3 ba tl pa3'>\r\n                      For security purposes, your password must contain: <br/>\r\n                      - An Upper case<br/>\r\n                      - A Lower Case<br/>\r\n                      - A Letter<br/>\r\n                      - A Number<br/>\r\n                      - At least seven charactors\r\n\r\n                        \r\n\r\n                      </div>\r\n\r\n\r\n\r\n            </div>\r\n}\r\n    return (\r\n\r\n\r\n      //Depending on page, im changing current, but whatever it is\r\n      //current is always displayed\r\n      <div>\r\n         <div className=\"mw5 mw7-ns center br5 black\">\r\n              <br />\r\n              <br />\r\n\r\n              <article className=\"br3 ba --black-10 w-100 w-100-m center shadow-5 solidBR\">\r\n                <main className=\"pa4 black-80 tc\">\r\n                  <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 ph0 mh0\">Register</legend>\r\n                    <a\r\n                      href = \"/sign-In\"\r\n                      className=\"f6 link dim black db pointer tc\">\r\n                      Already have an account?\r\n                    </a>\r\n                    {first} \r\n                    {final}\r\n\r\n                    \r\n                      <br />\r\n                          \r\n                    </fieldset>\r\n                 </main>\r\n              </article>\r\n            </div>\r\n            <br/> <br/> <br/>\r\n  \r\n \r\n\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Particles from \"react-particles-js\";\r\nimport SignInHome from \"./components/SignInHome\";\r\nimport Profile from \"./components/Profile\";\r\nimport MyBets from \"./components/MyBets\";\r\nimport CreateBet from \"./components/CreateBet\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport signIn from \"./components/signIn\";\r\nimport Home from \"./components/Home\";\r\nimport HowThisWorks from \"./components/HowThisWorks\";\r\nimport Fees from \"./components/Fees\";\r\nimport CreateAccount from \"./components/CreateAccount\";\r\nimport BuyConfirm from \"./components/BuyConfirm\";\r\nimport MoreInfo from './components/MoreInfo';\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  backgroundOptions = {\r\n    particles: {\r\n      number: {\r\n        value: 200,\r\n        density: {\r\n          enable: true,\r\n          value_area: 800\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\nrequireAuth = (nextState, replace) => {\r\n  \r\n    replace({\r\n      pathname: '/sign-In'\r\n    })\r\n  \r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Particles className=\"particles\" params={this.backgroundOptions} />\r\n        {\r\n          <BrowserRouter>\r\n            <Switch>\r\n              Each pages just needs it own Route. The borswer and switch is\r\n              n=just needed.\r\n              \r\n              <Route exact path=\"/\" component={Profile} />\r\n                      \r\n            </Switch>\r\n          </BrowserRouter>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport Register from \"./Register/Register\";\r\nimport NavBar from \"./navbar/NavBar\";\r\n\r\nclass signIn extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n    \r\n  \r\n\r\n  };\r\n}  \r\n  render() {\r\n   \r\n    return <div>\r\n    <NavBar/>\r\n      <Register/>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default signIn;\r\n","import React, { Component } from \"react\";\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport NavbarIn from \"./navbar/NavbarIn\";\r\nimport \"./IndividaulBet/bets.css\";\r\n\r\nclass BuyConfirm extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      Price: 0,\r\n      Odds: \"\",\r\n      Expiry:\"\",\r\n      BetDiscription:\"XXX\"\r\n\r\n    };\r\n  }\r\n\r\n  back = () =>{\r\n     window.location.href = \"/Explore\";\r\n  }\r\n  buy = () => {\r\n    //DO some buy code...\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <NavbarIn />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h1 className=\"tc white i f1 font\">Are you sure?</h1>\r\n        <br />\r\n        <br />\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"tc f3 solidBR\">\r\n             \r\n             Just Making Sure...\r\n              <br />\r\n              <hr />\r\n        \r\n              <div className='tc'>\r\n                <Container>\r\n                  <Row>\r\n                    <Col className='f4 tc bl ma1'>\r\n                      You are about to take the bet that, {this.state.BetDiscription}.\r\n                      You are betting with {this.state.Odds}.\r\n                      You are betting B{this.state.Price}.\r\n                      The bet will expire if terms or not already reached by {this.state.Expiry}\r\n                     Buy clicking \"Buy\" you are accepting our <a href=\"/Terms\">terms of service</a>. \r\n                      \r\n\r\n                      <br/>\r\n                      <br/>\r\n                      <button onClick={this.back} className='ma3 blues h-50 w-20'>Cancel</button>\r\n                      <button onClick={this.buy} className='ma3 reds h-50 w-20' >Buy!</button>\r\n                      <br/>\r\n                      <br/>\r\n                    </Col>\r\n                  </Row>   \r\n                </Container>\r\n              </div>\r\n              <hr/>\r\n             </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BuyConfirm;\r\n","import React, { Component } from \"react\";\r\nimport {Container, Row, Col} from \"react-bootstrap\";\r\nimport NavbarIn from \"./navbar/NavbarIn\";\r\nimport IndividaulBet from \"./IndividaulBet/IndividaulBet\";\r\n\r\nclass MoreInfo extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() { \r\n    return (\r\n      <div>\r\n        <NavbarIn />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <Container>\r\n          <Row>\r\n            <Col className=\"tc f3 solidBR\">\r\n              Lets see...\r\n             \r\n            \r\n              <br />\r\n              <hr />\r\n              <br/> \r\n              <div className='tc'>\r\n                <Container>\r\n                  <Row>\r\n                    <Col className='f4 tc bl ma1 v-mid'>Well actually, what is the bet?</Col>\r\n                    <Col className='f4 tc bl ma1'>A short descripton of bet. Can be a few Lines. Maybe\r\n                    it is even better if its a but longer</Col>\r\n                   </Row>\r\n                   <br/>\r\n                   <br/>\r\n                   <Row> \r\n                    <Col className='ma1'>The Odds</Col>\r\n                    <Col className='ma1 tc'>The odds for this bet are: <br/>X:X <br/>\r\n                    If (Like most of us) you aren't sure exactly sure how the odds word,  \r\n                      <a href=\"/\"> click here</a> and we'll explain \r\n\r\n                      </Col>\r\n                  </Row>\r\n                  <br/><br/>\r\n                  <Row>\r\n\r\n                    <Col xs={2} className=' ma1'>Amount (in B)</Col>\r\n                    <Col xs={2} className='br ma1'>End date</Col>\r\n                  </Row>   \r\n                </Container>\r\n              </div>\r\n              <hr/>\r\n              \r\n              <IndividaulBet name={\"I bet that Ramaposa is an Alien\"} />\r\n              <IndividaulBet name={\"I bet the Mac Miller faked his death\"} />\r\n              <IndividaulBet name={\"I bet that Micheal Obama is \"} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoreInfo;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}